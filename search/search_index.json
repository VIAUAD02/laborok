{"config":{"lang":["hu"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"T\u00e1rgy ismertet\u0151","text":"<p>A t\u00e1rgyk\u00f6vetelm\u00e9nyeket l\u00e1sd a hivatalos tant\u00e1rgyi adatlapon.</p> <p>A laborok sorrendj\u00e9t \u00e9s a bead\u00e1sok hat\u00e1ridej\u00e9t Moodle-ben tal\u00e1lod.</p> <p>Jav\u00edt\u00e1s az anyagban</p> <p>A t\u00e1rgy hallgat\u00f3inak az anyagban t\u00f6rt\u00e9n\u0151 jav\u00edt\u00e1s\u00e9rt, kieg\u00e9sz\u00edt\u00e9s\u00e9rt plusz pontot adunk! Ha hib\u00e1t tal\u00e1lsz, vagy kieg\u00e9sz\u00edten\u00e9d/pontos\u00edtan\u00e1d a feladatle\u00edr\u00e1sokat, nyiss egy pull request-et! A repository linkj\u00e9t a jobb fels\u0151 sarokban tal\u00e1lod.</p> <p>A jav\u00edt\u00e1s menet\u00e9r\u0151l \u00e9s form\u00e1j\u00e1r\u00f3l b\u0151vebben a \"Hozz\u00e1j\u00e1rul\u00e1s az anyaghoz\" dokumentumban olvashatsz b\u0151vebben.</p> <p>Felhaszn\u00e1l\u00e1si felt\u00e9telek</p> <p>Az itt tal\u00e1lhat\u00f3 oktat\u00e1si seg\u00e9danyagok a BMEVIAUAD02 t\u00e1rgy hallgat\u00f3inak k\u00e9sz\u00fcltek. Az anyagok oly m\u00f3d\u00fa felhaszn\u00e1l\u00e1sa, amely a t\u00e1rgy oktat\u00e1s\u00e1hoz nem szorosan kapcsol\u00f3dik, csak a szerz\u0151(k) \u00e9s a forr\u00e1s megjel\u00f6l\u00e9s\u00e9vel t\u00f6rt\u00e9nhet.</p> <p>Az anyagok a t\u00e1rgy keret\u00e9ben oktatott kontextusban \u00e9rtelmezhet\u0151ek. Az anyagok\u00e9rt egy\u00e9b felhaszn\u00e1l\u00e1s eset\u00e9n a szerz\u0151(k) felel\u0151ss\u00e9get nem v\u00e1llalnak.</p>"},{"location":"#altalanos-tudnivalok","title":"\u00c1ltal\u00e1nos tudnival\u00f3k","text":""},{"location":"#laborok-megoldasainak-beadasa","title":"Laborok megold\u00e1sainak bead\u00e1sa","text":"<p>A laborok megold\u00e1s\u00e1t egy szem\u00e9lyre sz\u00f3l\u00f3 git repository-ban kell beadni. Ennek pontos folyamat\u00e1t l\u00e1sd itt. K\u00e9r\u00fcnk, hogy alaposan olvasd v\u00e9gig a le\u00edr\u00e1st!</p> <p>FONTOS</p> <p>A laborok elk\u00e9sz\u00edt\u00e9se \u00e9s bead\u00e1sa sor\u00e1n az itt le\u00edrtak szerint kell elj\u00e1rnod. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck.</p> <p>A bead\u00e1s sor\u00e1n a munkafolyamati hib\u00e1k\u00e9rt (pl. nem megfelel\u0151 emberhez hozz\u00e1rendel\u00e9se, hozz\u00e1rendel\u00e9s elfelejt\u00e9se) pontot vonunk le.</p>"},{"location":"#laborok-ertekelese","title":"Laborok \u00e9rt\u00e9kel\u00e9se","text":"<p>Minden labort k\u00fcl\u00f6n jeggyel \u00e9rt\u00e9kel\u00fcnk. A teljes\u00edt\u00e9s felt\u00e9tele a hat\u00e1rid\u0151ig t\u00f6rt\u00e9n\u0151 bead\u00e1s. A jegy (1-5 sk\u00e1l\u00e1n) a labor feladatokon megszerezhet\u0151 5 pont alapj\u00e1n t\u00f6rt\u00e9nik. A feladatok bead\u00e1s\u00e1hoz minden esetben a GitHub platformot haszn\u00e1ljuk. </p> <p>A feladatok ki\u00e9rt\u00e9kel\u00e9se egyes laborok eset\u00e9n r\u00e9szben automatikusan t\u00f6rt\u00e9nik. A futtathat\u00f3 k\u00f3dokat val\u00f3ban le fogjuk futtatni, ez\u00e9rt minden esetben fontos a feladatle\u00edr\u00e1sok pontos k\u00f6vet\u00e9se (kiindul\u00f3 k\u00f3d v\u00e1z haszn\u00e1lata, csak a megengedett f\u00e1jlok v\u00e1ltoztat\u00e1sa, stb.)!</p> <p>A ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9r\u0151l a GitHub-on kapsz sz\u00f6veges visszajelz\u00e9st (l\u00e1sd itt). Ha enn\u00e9l t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t.</p>"},{"location":"#imsc-pontok","title":"iMSC pontok","text":"<p>iMSC pontok a ZH-n, a nagyHF-n \u00e9s v\u00e1rhat\u00f3an n\u00e9h\u00e1ny laboron szerezhet\u0151k. Az els\u0151 laboron nem szerezhet\u0151 iMSc pont. A k\u00e9s\u0151bbi laborokon, ha lesz ilyen lehet\u0151s\u00e9g, az iMSc-s feladatok megold\u00e1sait a sima labormegold\u00e1sokkal egy\u00fctt kell felt\u00f6lteni. Ha egy feladatban k\u00e9rd\u00e9sek szerepelnek, a pontok csak akkor fogadhat\u00f3k el, ha mell\u00e9kletben egy ig\u00e9nyes jegyz\u0151k\u00f6nyv is szerepel a k\u00e9rd\u00e9sekre vonatkoz\u00f3 v\u00e1laszokkal. iMSc pont szerz\u00e9s\u00e9re b\u00e1rmely hallgat\u00f3 jogosult, aki az el\u0151tte l\u00e9v\u0151 feladatokkal m\u00e1r v\u00e9gzett (laborvezet\u0151 ellen\u0151rzi a halad\u00e1st).</p>"},{"location":"#beugro","title":"Beugr\u00f3","text":"<p>Az els\u0151 labort kiv\u00e9ve minden labor el\u0151tt lesz beugr\u00f3, mely felt\u00e9tele a labor teljes\u00edt\u00e9s\u00e9nek.</p>"},{"location":"#kis-zh-k","title":"Kis ZH-k","text":"<p>A f\u00e9l\u00e9v sor\u00e1n hat alkalommal kis z\u00e1rthelyit \u00edratunk a laborat\u00f3rium alkalmakon. Ezek k\u00f6z\u00fcl a n\u00e9gy legjobban siker\u00fclt kis z\u00e1rthelyi pontsz\u00e1mnak egyenk\u00e9nt el kell \u00e9rje a szerezhet\u0151 pontsz\u00e1m 40%-\u00e1t. A KisZH kiv\u00e1ltja a beugr\u00f3 szerep\u00e9t.</p> <p>A kisZH-k kett\u0151 vagy h\u00e1rom hetente lesznek, ezek id\u0151pontj\u00e1t az els\u0151 vagy m\u00e1sodik el\u0151ad\u00e1son kihirdetj\u00fck. A mostani Labor 01-en nincs kisZH.</p>"},{"location":"#kepernyokepek","title":"K\u00e9perny\u0151k\u00e9pek","text":"<p>A laborok k\u00e9rik, hogy k\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet a megold\u00e1s egy-egy r\u00e9sz\u00e9r\u0151l. Ez k\u00fcl\u00f6n\u00f6sen akkor fontos, ha a feladatot otthon k\u00e9sz\u00edted el, mert ezzel bizony\u00edtod, hogy a megold\u00e1sod saj\u00e1t magad k\u00e9sz\u00edtetted. A k\u00e9perny\u0151k\u00e9pek elv\u00e1rt tartalm\u00e1t a feladat minden esetben pontosan megnevezi. A k\u00e9perny\u0151k\u00e9p k\u00e9sz\u00fclhet a teljes desktopr\u00f3l is, de lehet csak a k\u00e9rt alkalmaz\u00e1sr\u00f3l k\u00e9sz\u00edteni.</p> <p>A k\u00e9perny\u0151k\u00e9peket a megold\u00e1s r\u00e9szek\u00e9nt kell beadni, \u00edgy felker\u00fclnek a git repository tartalm\u00e1val egy\u00fctt. Mivel a repository priv\u00e1t, azt az oktat\u00f3kon k\u00edv\u00fcl m\u00e1s nem l\u00e1tja. Amennyiben olyan tartalom ker\u00fcl a k\u00e9perny\u0151k\u00e9pre, amit nem szeretn\u00e9l felt\u00f6lteni, kitakarhatod a k\u00e9pr\u0151l.</p>"},{"location":"#elvarasaink-a-munkaval-kapcsolatban","title":"Elv\u00e1r\u00e1saink a munk\u00e1val kapcsolatban","text":"<p>Hova kell felt\u00f6lteni a megold\u00e1st? Fentebb megtal\u00e1lod a le\u00edr\u00e1st.</p> <p>Egy\u00e9ni munka? Otthoni munka? Mivel a laborokra jegyet kapsz, elv\u00e1r\u00e1s, hogy mindenki saj\u00e1t megold\u00e1st k\u00e9sz\u00edtsen el \u00e9s adjon be. Ez nem z\u00e1rja ki az egym\u00e1snak ny\u00fajtott seg\u00edts\u00e9get. Kiz\u00e1rja viszont m\u00e1s megold\u00e1s\u00e1nak lem\u00e1sol\u00e1s\u00e1t. Ez\u00e9rt k\u00e9rj\u00fck a k\u00e9perny\u0151k\u00e9peket, mert \u00edgy a munka folyamat\u00e1val bizony\u00edtod a megold\u00e1s saj\u00e1t elk\u00e9sz\u00edt\u00e9s\u00e9t.</p> <p>M\u00e1s munk\u00e1j\u00e1nak lem\u00e1sol\u00e1sa: A BME etikai k\u00f3dexe \u00e9s a TVSZ szab\u00e1lyozza. Komolyan vessz\u00fck.</p> <p>Egy labor csak 2 \u00f3ra, nem? Nem. A t\u00e1rgy 5 kredit, amely a f\u00e9l\u00e9v sor\u00e1n megk\u00f6zel\u00edt\u0151leg 150 munka\u00f3ra befektet\u00e9s\u00e9t ig\u00e9nyli. A labor teh\u00e1t nem csak a teremben elt\u00f6lt\u00f6tt 2 \u00f3ra, hanem az el\u0151zetes felk\u00e9sz\u00fcl\u00e9s \u00e9s a feladat befejez\u00e9se / otthoni elv\u00e9gz\u00e9se is.</p> <p>Egy apr\u00f3 el\u00edr\u00e1s miatt nem m\u0171k\u00f6d\u00f6tt a k\u00f3dom, \u00e9s nem \u00e9rt\u00e9kelt\u00e9tek. A laborok sor\u00e1n m\u0171k\u00f6d\u0151 programot, k\u00f3dot, k\u00f3dr\u00e9szletet kell k\u00e9sz\u00edteni. Az\u00e9rt sz\u00e1m\u00edt\u00f3g\u00e9p laborban vagy otthon k\u00e9sz\u00edtj\u00fck a feladatot, mert \u00edgy tudod magad ellen\u0151rizni. Minimum elv\u00e1r\u00e1s, hogy a beadott k\u00f3d leforduljon, lefusson. Ha a viselked\u00e9s nem teljesen helyes, azt \u00e9rt\u00e9kelj\u00fck. De ha egy\u00e1ltal\u00e1n nem m\u0171k\u00f6dik, nem \u00e9rt\u00e9kelj\u00fck a megold\u00e1st.</p> <p>Az\u00e9rt \u00edgy tesz\u00fcnk, mert m\u00e9rn\u00f6kk\u00e9nt a feladatod a probl\u00e9m\u00e1k megold\u00e1sa lesz, \u00e9s nem csak egy k\u00eds\u00e9rlet a megold\u00e1sra. Mit gondolsz, ha a munkahelyeden a f\u0151n\u00f6k\u00f6dnek \u00e1tadsz egy nem fordul\u00f3 k\u00f3dot, mit fog tenni?</p> <p>Ha otthonr\u00f3l k\u00e9sz\u00edtem el a megold\u00e1st, hogyan kapok seg\u00edts\u00e9get? Ak\u00e1r otthonr\u00f3l dolgozol, ak\u00e1r egyetemi laborban, egy laborvezet\u0151h\u00f6z tartozol. \u0150 felel nem csak a kontakt\u00f3ra megtart\u00e1s\u00e1\u00e9rt, hanem az\u00e9rt is, hogy a f\u00e9l\u00e9v k\u00f6zben a feladatok bead\u00e1sa \u00e9s ellen\u0151rz\u00e9se rendben t\u00f6rt\u00e9njen.</p> <p>Nem seg\u00edt a laborvezet\u0151. Mi\u00e9rt? Dehogynem seg\u00edt. Viszont ha egyb\u0151l megmondan\u00e1 a megold\u00e1st, csak azt tanuln\u00e1d meg, hogy legk\u00f6zelebb is meg kell k\u00e9rdezni. Pr\u00f3b\u00e1ld magad megoldani, mutass alternat\u00edv\u00e1kat, k\u00e9rdezz konkr\u00e9tan. Mutasd meg, hogy professzion\u00e1lis a hozz\u00e1\u00e1ll\u00e1sod.</p> <p>Akkor mit k\u00e9rdezhetek meg a laborvezet\u0151t\u0151l? R\u00f6viden: https://stackoverflow.com/help/how-to-ask. Hosszabban: Ha valamivel elakadsz, \u00e9rtsd meg a probl\u00e9m\u00e1t. A probl\u00e9ma nem az, hogy \"nem m\u0171k\u00f6dik\" vagy \"nem tudom, hogyan csin\u00e1ljam\". Akkor tudsz j\u00f3l k\u00e9rdezni, ha m\u00e1r k\u00f6r\u00fclj\u00e1rtad a probl\u00e9m\u00e1t, \u00e9s azt is meg tudod mutatni, mivel pr\u00f3b\u00e1lkozt\u00e1l m\u00e1r.</p> <p>Sz\u00f3val Google \u00e9s StackOverflow a megold\u00e1s? Nem. Minden tud\u00e1s, amire sz\u00fcks\u00e9ged van, m\u00e1r el\u0151fordult egyetemi tanulm\u00e1nyaid sor\u00e1n. A Google j\u00f3, a StackOverflow m\u00e9g jobb.... De! A v\u00e1laszt is meg kell \u00e9rteni. Lehet, hogy a megtal\u00e1lt v\u00e1lasz megold\u00e1s, csak \u00e9pp nem a te probl\u00e9m\u00e1dra.</p> <p>Sok a hat\u00e1rid\u0151, meg az el\u0151\u00edr\u00e1s. Ez n\u00e9z\u0151pont k\u00e9rd\u00e9se. A m\u00e9rn\u00f6k nem csak programozni tud, hanem meghat\u00e1rozott keretek k\u00f6z\u00f6tt dolgozni. Mert a vil\u00e1g bonyolult, \u00e9s a bonyolults\u00e1got szab\u00e1lyokkal lehet kord\u00e1ban tartani. Ha id\u0151d engedi, \u00e9rdemes megn\u00e9zni, mit mond Robert C. Martin (Bob Martin, \"Uncle Bob\") arr\u00f3l, honnan sz\u00e1rmazik a szoftverfejleszt\u0151i szakmai: https://www.youtube.com/watch?v=ecIWPzGEbFc</p>"},{"location":"english/01-android-hello-world/","title":"Labor 01 - Hello World","text":"<p>The first lab is unusual compared to the others. Here we will encounter little code, the focus is more on reviewing the basics.</p> <p>The goal of the lab is to introduce the Android Studio development environment, the process of creating, testing, and compiling applications, application management, and the functions of the emulator and development environment. We will explain how to create a Hello World application and the main tools used for debugging.</p> <p>At the end of the lab, a report must be submitted to obtain a grade.</p> <p>The assessment covers the following topics:</p> <ul> <li>Understanding the basics of the Android platform</li> <li>Android Studio development environment basics</li> <li>Android Emulator features</li> <li>Creating and running an Android project on an emulator</li> <li>Building a manifest file</li> <li>Android Profiler</li> <li>Android App Inspection</li> </ul>"},{"location":"english/01-android-hello-world/#preparations","title":"Preparations","text":"<p>When solving the tasks, don't forget to follow the task submission process.</p>"},{"location":"english/01-android-hello-world/#create-and-download-a-git-repository","title":"Create and download a Git repository","text":"<ol> <li> <p>Find the lab invitation URL in Moodle and use it to create your own repository!</p> </li> <li> <p>Wait for the repository to be ready, then checkout it!</p> <p>In university labs, if the system does not ask for a username and password during checkout and the checkout fails, it is likely that the system tried to use a username previously saved on the machine. First, delete the saved login information, and try again.</p> </li> <li> <p>Create a new branch called <code>solution</code> and work on this branch!</p> </li> <li> <p>Write your Neptun code in the file <code>neptun.txt</code>. The file should contain nothing else but the 6 characters of the Neptun code on a single line!</p> </li> </ol>"},{"location":"english/01-android-hello-world/#open-a-markdown-file","title":"Open a Markdown file","text":"<p>When solving the tasks, the documentation must be prepared in markdown format. Open the previously downloaded git repository with a markdown compatible editor! It is recommended to use Visual Studio Code:</p> <ol> <li> <p>Start VS Code!</p> </li> <li> <p>Open the git repository directory using the File &gt; Open Folder... menu!</p> </li> <li> <p>In the tree on the left, find the <code>README.md</code> file and open it by double-clicking it!</p> <ul> <li>Edit this file.</li> <li>If you create an image, put it in the repository with the other files. This way you can reference it with a relative path (filename).</li> </ul> <p>Filename: all lowercase letters without accents</p> <p>Do not use accented characters, spaces, or mixed case in image filenames. Different platforms and git handle filenames differently. Everything will display correctly on the GitHub web interface if you use only lowercase letters in your filenames.</p> </li> <li> <p>For convenient editing, open the preview function (Ctrl-K + V).</p> </li> </ol> <p>Other editing tools</p> <p>If you don't like this editor, you can also use the GitHub web interface to edit the documentation, there is also a preview there. Then uploading files will be a little more complicated.</p>"},{"location":"english/01-android-hello-world/#android-basics","title":"Android Basics","text":""},{"location":"english/01-android-hello-world/#compilation-process-on-android-platform","title":"Compilation process on Android platform","text":"<p>After creating the project, the source code is located in the <code>app/src</code> directory. The user interface is defined directly in Kotlin code using Jetpack Compose, so there is no need for XML files. The result of compiling the Android project is an APK file, which can be installed directly on a mobile device. Jetpack Compose allows us to easily access and manipulate interface elements from Kotlin code, facilitating modern, declarative interface design.</p> <p></p> <p>Compilation process on Android platform</p> <ol> <li> <p>The developer creates the Kotlin source code, in which the user interface is defined using Jetpack Compose. There is no need for a separate XML-based user interface description.</p> </li> <li> <p>The development environment keeps the resources related to Compose elements and the necessary build files for development and compilation constantly up to date.</p> </li> <li> <p>The developer sets the application's access permissions in the Manifest file (e.g. Internet access, use of sensors, etc.), and if runtime permissions are required, they are managed.</p> </li> <li> <p>The compiler generates the machine code of the ART virtual machine from the source code, resources and external libraries.</p> </li> <li> <p>The unsigned APK file is generated from the machine code and resources.</p> </li> <li> <p>Finally, the system performs the signing and produces a signed APK that can be installed on devices.</p> </li> </ol> <p>Android Studio uses the Gradle build system to perform these steps.</p> <p>Notes</p> <ul> <li> <p>The entire process takes place on the developer's machine, only binary files are delivered to the devices.</p> </li> <li> <p>External libraries can usually be added to the current project as JAR files or by adding another project (but we don't have to do this manually, Gradle will also help with managing dependencies).</p> </li> <li> <p>The APK file is most similar to the JAR files known in the Java world.</p> </li> <li> <p>The Android version you want to support must be specified in the Manifest file, which is upwardly compatible with newer versions, but the application cannot be installed on older versions.</p> </li> <li> <p>Developers must constantly keep up with the constantly updated versions of Android.</p> </li> <li> <p>Android applications are typically published in the Google Play Store, so distribution in APK format is not as widespread.</p> </li> </ul>"},{"location":"english/01-android-hello-world/#sdk-and-its-libraries","title":"SDK and its libraries","text":"<p>The IDE and SDK can be downloaded from developer.android.com/studio. Let's review its most important folders and tools!</p> <p></p> <p>SDK structure:</p> <ul> <li><code>build-tools</code>: Tools to help build API levels: AIDL, AAPT2, etc.</li> <li><code>emulator</code>: Location of Android emulator files.</li> <li><code>extras</code>: Location of various extra software. Maven repository, support libs materials, analytics SDK, Google Android USB driver (if we downloaded this with SDK manager) etc.</li> <li><code>platform-tools</code>: Location of Fastboot and ADB binaries (most used tools).</li> <li><code>platforms</code>, <code>sources</code>, <code>system-images</code>: Platform materials, sources, OS images in separate subfolders for each API level</li> <li><code>tools</code>: Tools to help build and test, SDK manager, etc.</li> </ul>"},{"location":"english/01-android-hello-world/#sdk-manager","title":"SDK Manager","text":"<p>To manage the SDK, we use the SDK manager, which allows us to download and keep our tools up to date. It can be launched via Android Studio.</p> <p>The SDK Manager is available from the Tools -&gt; SDK Manager menu:</p> <p></p> <p>SDK Manager interface:</p> <p></p> <p>Notes</p> <p>There used to be a standalone SDK manager, but its use is now deprecated. Don't be surprised if you see it in online sources.</p> <p>Let's start the AVD manager and check if everything we need for our first application is available.</p>"},{"location":"english/01-android-hello-world/#avd-manager","title":"AVD Manager","text":"<p>AVD is the abbreviation for Android Virtual Device. As already mentioned in the presentation, we can run our code not only on a real device, but also on an emulator. (What is the difference between a simulator and an emulator?) Starting the AVD is possible through the development environment (Tools-&gt;Device Manager) or from the command line, but this is only necessary in special cases.</p> <p>AVD Manager icon:</p> <p></p> <p>AVD Manager interface:</p> <p></p> <p>In the image above, on the right side, in the panel that opens, we find a list of existing virtual devices, and on the left side, the so-called device definitions. (This Add device tab can be opened with the Create Virtual Device option after clicking on the <code>+</code> icon on the right.) There are some pre-made templates available here. We can also create one ourselves if we typically want to develop for a specific device (e.g. Galaxy S24).</p> <p>Let's create a new emulator! Naturally, we can only create devices with API levels that are available through the SDK manager.</p> <ol> <li>On the right panel, click the Create Virtual Device... button above!</li> <li>Select one of the predefined device templates (e.g. Pixel 9 Pro), then press the Next button.</li> <li>Device configuration:<ul> <li>The virtual device should be named, for example, <code>Labor_1</code>.</li> <li>Decide which Android emulator version you want to use and which features you need. CPU/ABI should be x86_64, as you can get hardware acceleration for these. Here, select one of the available ones, then Next. </li> </ul> </li> <li> <p>Under the Additional settings tab, you will find additional options:</p> <ul> <li>Turn the display of the device frame on or off as desired.</li> <li>Camera options:    <ul> <li>WebcamX, a hardware camera that is connected to the computer</li> <li>Emulated, a simple software solution, now at least one of the cameras should be like this.</li> <li>VirtualScene, a more sophisticated software solution, in which we can move the camera in a 3D world.</li> </ul> </li> <li>Network: You can also adjust its speed and latency according to communication technologies.</li> <li>Select the default orientation.</li> <li>Default boot: Option to save a snapshot of the Android emulator state. This means that the virtual operating system is only suspended when the emulator is closed (for example, the opened application is also preserved, with its full state), and in the Quick case, instead of starting the entire OS, the emulated system starts within seconds. In the Cold case, however, it stops and restarts the entire operating system of the virtual device every time.</li> <li>Internal and external storage size, or possibly setting a specific image of the storage content.</li> <li> <p>Performance:</p> <ul> <li>Number of CPU cores to be used.</li> <li>Type of graphics acceleration. (Hardware acceleration is only available with the appropriate driver)</li> <li>VM heap: for the virtual machine of the applications, you can leave the default value. You should know that it varies by manufacturer for devices.</li> <li>The desired binary interface.</li> </ul> </li> <li> <p>If everything looks fine in the window, then Finish!</p> </li> </ul> </li> </ol> <p></p> <p>The device we just created appears in the Android Virtual Device Manager. Here you can edit the previously specified parameters, connect an external device, delete user data from the \"device\" (Wipe Data - Full reset), and duplicate or delete the emulator instance.</p> <p>Start the new emulator with the Play button!</p> <p>Emulator problems<p>If the emulator does not start, check the following tips:</p> </p> <ul> <li>Is there enough space (minimum 15-20 GB) on the drive?</li> <li>Are Android Studio and SDK up to date?</li> <li>SDK manager &gt; SDK tools: is the android emulator the latest?</li> <li>Does the installation path of Android Studio or SDK contain spaces, accented letters or special characters?</li> <li>Have you tried a different API, with or without Play Store?</li> <li>Is virtualization enabled/enabled on the machine?</li> <li>Try changing the graphics acceleration type.</li> </ul> <p>Try some pre-installed applications on the launched emulator!</p> <p>Notes</p> <p>In addition to the factory emulator, there are several alternatives, such as Genymotion or BigNox, but the Google emulator is the most common, so if you don't have any problems with it, let's stick with it.</p> <p>The emulator is very useful for testing purposes, and it also provides the additional functions shown in the image below. It is possible to set a unique location, simulate an incoming call, manipulate sensors virtually, etc. The panel can be opened with the ... button from the control buttons on the right side of the running emulator:</p> <p></p>"},{"location":"english/01-android-hello-world/#development-environment","title":"Development environment","text":"<p>For Android development, we will use Android Studio, which is based on JetBrains IntelliJ, during the lab. A useful feature for those who are new to Studio is the Tip of the day, it is worth trying out and checking out the given feature right away. By default, the last project opens when starting up, if there is none, or if we have closed all our projects, then the opening screen. (You can also disable the reopening of the last project with the Settings -&gt; Appeareance &amp; Behavior -&gt; System Settings -&gt; Reopen projects on startup option.)</p> <p></p>"},{"location":"english/01-android-hello-world/#hello-world","title":"Hello World","text":"<p>Let's make a simple Hello World application!</p> <ol> <li>Create a new project, select the Empty Activity option.</li> <li>The project name should be <code>HelloWorld</code>, the starting package <code>hu.bme.aut.mobweb.helloworld</code>, and the save location should be the <code>HelloWorld</code> folder within the checked-out repository.</li> <li>Select Kotlin as the language.</li> <li>The minimum API level should be API24: Android 7.0.</li> <li>The <code>Build configuration language</code> should be Kotlin DSL.</li> </ol> <p>FILE PATH</p> <p>The project should be placed in the HelloWorld directory in the repository!</p> <p>FILE PATH</p> <p>The project's access path contains only lowercase letters of the English alphabet, as Android Studio is sensitive to accents and special characters!</p>"},{"location":"english/01-android-hello-world/#android-studio","title":"Android Studio","text":"<p>This section is for those who have previously used other IntelliJ products or the IDE called Eclipse and want to learn about the differences compared to Android Studio.</p> <ul> <li> <p>Project structure: Android Studio compiles with Gradle and uses a different structure. Within a project:</p> <ul> <li><code>.idea</code>: IDE files</li> <li><code>app</code>: source<ul> <li><code>build</code>: compiled files</li> <li><code>libs</code>: libraries</li> <li><code>src</code>: source code, within it a separate project for the test, and within it a <code>res</code> library, and <code>java</code>. Within the latter are the packages.</li> </ul> </li> <li><code>gradle</code>: Gradle files</li> </ul> </li> <li> <p>Useful features:</p> <ul> <li>IntelliSense, advanced refactoring support</li> <li>If we reference a color or image resource in a line, it puts a miniature version at the beginning of the line.</li> <li>If we specify an indirectly referenced resource (either <code>resources.get...</code> or <code>R...</code>), it collapses the reference and shows the actual value. Hovering over it reveals it, clicking expands the reference.</li> <li>It can do the same with anonymous inner classes, improving code readability.</li> <li>The search is free for code completion, it searches for word fragments, not for options starting with the word (see image)</li> <li>Variable name suggestion: when we need a variable name, press Ctrl+Space. If the circumstances are right, Studio can suggest some pretty good names.</li> <li>Strict lint. Studio allows warnings. Therefore, lint is stricter, it warns about more things (even small things like padding on one side of a View, but not on the other)</li> <li>Layout editing. Graphical layout construction is possible.</li> <li>You can navigate in the code by pressing CTRL, e.g. by clicking on a class or method call. This navigation (and also simple clicking on another class) is recorded, and you can step forward and backward in the history with the back and forth keys. If you have such a button on your mouse/keyboard, and you actively use it while browsing the net, you will find this function very useful.</li> <li>If you have several files open at the same time, you can easily navigate between the files using the ALT + LEFT/RIGHT arrows.</li> </ul> </li> </ul> <p></p>"},{"location":"english/01-android-hello-world/#keyboard-shortcuts","title":"Keyboard shortcuts","text":"<ul> <li>CTRL + ALT + L: Code formatting</li> <li>CTRL + SPACE: Code completion</li> <li>SHIFT + F6 Rename (Everywhere)</li> <li>F2: Jump to next error. If there is no error, then to warning.</li> <li>CTRL + Z or CTRL + SHIFT + Z: Undo and Redo</li> <li>CTRL + P: Show Parameters</li> <li>ALT + INSERT: Generate Method</li> <li>CTRL + O: Override Method</li> <li>CTRL + F9: Compile</li> <li>SHIFT + F10: Compile and Run</li> <li>SHIFT SHIFT: Search Everywhere</li> <li>CTRL + N: Search in classes</li> <li>CTRL + SHIFT + N: Search in files</li> <li>CTRL + ALT + SHIFT + N: Search in symbols (e.g. functions, properties)</li> <li>CTRL + SHIFT + A: Search in settings, commands that can be issued.</li> <li>ALT + ENTER import/create missing elements.</li> </ul> <p>More keyboard shortcuts.</p> <p>Find</p> <p>If you ever need something but can't find it in the menu, you can search in Android Studio (or other JetBrains IDEs) by pressing the double Shift key (Shift+Shift). Try it out and search for the \"Device Manager\" option.</p>"},{"location":"english/01-android-hello-world/#tools-editors","title":"Tools, editors","text":"<p>In the View menu, you can turn various windows on and off using the Tool Windows menu item. Let's take a look at the following tools:</p> <ul> <li>Project</li> <li>Structure</li> <li>TODO</li> <li>Logcat</li> <li>Terminal</li> <li>Event Log</li> <li>Gradle</li> </ul> <p>It is possible to split the editor window, to do this, right-click on the tab of an open file, Split Right/Down or just click and hold it and start dragging it onto the code surface!</p>"},{"location":"english/01-android-hello-world/#useful-settings","title":"Useful settings","text":"<p>Let's set up the following useful functions:</p> <ul> <li>turn off case sensitivity in the code completion (search in settings: Match case)</li> <li>turn on and off \"laptop mode\" (File -&gt; Power Save Mode)</li> <li>turn on line numbering (right-click on the code on the left side, Appearance -&gt; Show Line Numbers)</li> </ul>"},{"location":"english/01-android-hello-world/#generateable-elements","title":"Generateable elements","text":"<p>Studio includes many templates, let's briefly review the options:</p> <ul> <li>In the project tree, right-click on the project -&gt; new -&gt; module</li> <li>In the project tree, inside the module, right-click on \"java\" -&gt; new</li> <li>In the source code, press ALT+INSERT</li> </ul>"},{"location":"english/01-android-hello-world/#android-profiler","title":"Android Profiler","text":"<p>The device's resource usage can be monitored on this interface, which can be accessed from the aforementioned View -&gt; Tool Windows.</p> <p></p> <p>For example, we can get detailed information about processor and memory usage:</p> <p></p>"},{"location":"english/01-android-hello-world/#app-inspection","title":"App Inspection","text":"<p>We can also view the network traffic and database of our debugged app on the device. (View -&gt; Tool Windows -&gt; App Inspection)</p> <p></p>"},{"location":"english/01-android-hello-world/#device-explorer","title":"Device Explorer","text":"<p>You can also browse the file system on your device. (View -&gt; Tool Windows -&gt; Device Explorer)</p> <p></p>"},{"location":"english/01-android-hello-world/#tasks-10-x-05-points","title":"Tasks (10 x 0.5 points)","text":"<ol> <li>Run the new application on an emulator (those who have their own device should try it too)!</li> <li>Place a breakpoint in the code and start the application in debug mode! (It is worth noting that another Gradle Task is now running at the bottom of the screen.)</li> <li>Make a call and send an SMS to the emulator! What do we experience?</li> <li>Make a call and send an SMS from the emulator! What do we experience?</li> <li>Take a picture with the emulator and find it in the file system using Device Explorer!</li> <li>Change the location of the device (GPS) using the appropriate panel of the emulator!</li> <li>Examine the open threads and memory usage of the launched <code>HelloWorld</code> project!</li> <li>Examine the contents of the Logcat panel!</li> <li>Examine the result of Code -&gt; Inspect code!</li> <li>Find the folder of the created <code>HelloWorld</code> project and examine the contents of the <code>.apk</code> file inside the build directory! Where is the compiled code located?</li> </ol> <p>TO BE SUBMITTED</p> <p>To complete the lab, you must perform the tasks above and document your results. This should be done with a screenshot and a short, few-sentence explanation for each task. The protocol should be created in the <code>README.md</code> file in the repository.</p> <p>The documentation, including the images, should also be displayed correctly on the GitHub web interface! Check this during your commit: open the web interface of your repository, switch to the appropriate branch, and GitHub will automatically render the README.md file with the images.</p>"},{"location":"english/02-android-ui/","title":"Labor 02 - UI - Public Transportation Application","text":""},{"location":"english/02-android-ui/#introduction","title":"Introduction","text":"<p>During the lab, we will create a skeleton of an application for a public transportation company. The application will allow users to purchase passes for different vehicles. For now, we will only simulate the business logic (authentication, verification of entered data, payment processing), the focus of the lab will be on creating the interfaces and navigation between them.</p> <p> </p> <p>IMSc</p> <p>After successfully completing the lab tasks, 2 IMSc points can be earned by solving the IMSc task.</p>"},{"location":"english/02-android-ui/#preparations","title":"Preparations","text":"<p>When solving the tasks, don't forget to follow the task submission process.</p>"},{"location":"english/02-android-ui/#create-and-download-a-git-repository","title":"Create and download a Git repository","text":"<ol> <li> <p>In Moodle, find the lab invitation URL and use it to create your own repository.</p> </li> <li> <p>Wait for the repository to be ready, then checkout it.</p> <p>In university labs, if the system does not prompt for a username and password during checkout and the checkout fails, it is likely that the system tried to use a username previously saved on the machine. First, delete the saved login information and try again.</p> </li> <li> <p>Create a new branch called <code>solution</code> and work on this branch.</p> </li> <li> <p>Write your Neptun code in the file <code>neptun.txt</code>. The file should contain nothing else but the 6 characters of the Neptun code on a single line.</p> </li> </ol> <p>Android, Java, Kotlin</p> <p>Android was traditionally developed in Java, but in recent years Google has switched to Kotlin. This is a much more modern language than Java, providing many language elements that are convenient to use, as well as new language rules that, for example, can be used to avoid <code>NullPointerException</code>-type errors that are common in Java.</p> <p>On the other hand, the language differs in many ways from languages \u200b\u200bthat traditionally follow a C-like syntax, as we will see. Before the lab, it is worth familiarizing yourself with the language, firstly by using the link above, and secondly by reading this the summary article.</p>"},{"location":"english/02-android-ui/#create-the-project","title":"Create the project","text":"<p>First, let's start Android Studio, then:</p> <ol> <li>Create a new project, select Empty Activity.</li> <li>The project name should be <code>PublicTransport</code>, the starting package <code>hu.bme.aut.android.publictransport</code>, and the save location should be the PublicTransport folder within the checked-out repository.</li> <li>Select Kotlin as the language.</li> <li>The minimum API level should be API24: Android 7.0.</li> <li>The Build configuration language should be Kotlin DSL.</li> </ol> <p>FILE PATH</p> <p>The project should be placed in the PublicTransport directory in the repository and pushed when submitted! Without the code, we cannot give the lab maximum points!</p> <p>When creating a project, the compiler framework needs to download a lot of dependencies. Until this has happened, the project is difficult to navigate, code completion is missing, etc... That's why it's advisable to wait for this, but it can take up to 5 minutes the first time! You should pay attention to the information bar at the bottom of the window.</p> <p>We can see that a project has been created, with an Activity called <code>MainActivity</code>. This has also been automatically written into the Manifest file as an Activity component.</p> <p>The next step is to add the necessary dependencies to the project! To do this, open the</p> <ul> <li>Module-level <code>build.gradle.kts</code> file (app -&gt; build.gradle.kts)</li> <li>Or the <code>libs.version.toml</code> file (gradle -&gt; libs.versions.toml)</li> </ul> <p>First, copy the following dependencies into the <code>libs.version.toml</code> version catalog file:</p> <pre><code>[versions]\n...\ncoreSplashscreen = \"1.0.1\"\nnavigationCompose = \"2.7.7\"\n\n[libraries]\n...\nandroidx-core-splashscreen = { module = \"androidx.core:core-splashscreen\", version.ref = \"coreSplashscreen\" }\nandroidx-navigation-compose = { module = \"androidx.navigation:navigation-compose\", version.ref = \"navigationCompose\" }\n</code></pre> <p>Here, inside the <code>[versions]</code> tag, we can give a variable name and then a version value, which we will pass to <code>version.ref</code> in the next step. This tells us which version of the given module is being used. Inside the <code>[libraries]</code> tag, we also define a variable called <code>androidx-navigation-compose</code>, which we will use later in the <code>build.gradle.kts</code> file. We give it which module we want to include in the project, as well as a version number that we have previously defined.</p> <p>Once we are done with this, let's open the <code>build.gradle.kts</code> file and add the modules we just added inside the <code>dependencies</code> tag:</p> <pre><code>dependencies {\n    ...\n    implementation(libs.androidx.core.splashscreen)\n    implementation(libs.androidx.navigation.compose)\n}\n</code></pre> <p>Here we can add a new dependency to the project using the <code>implementation</code> function, and within this we need to specify the name of the module, which we have previously defined in <code>libs.version.toml</code>. We can do this as follows:</p> <ul> <li>specify the name of the file, in this case <code>libs</code></li> <li>then specify the name of the variable to which we previously assigned our module.</li> </ul> <p>Once we are done with this, click the <code>Sync Now</code> button in the upper right corner and wait for it to download the necessary dependencies.</p> <p>Sync Now</p> <p>Warning: if we skip this step, Android Studio will not find the necessary elements, and this may cause problems later!</p>"},{"location":"english/02-android-ui/#splash-screen-05-points","title":"Splash screen (0.5 points)","text":"<p>After the user launches the application, we want to greet them with a \"welcome/splash\" screen. This is an elegant solution to not have a solid color screen in front of the user until the application loads, but in this case an application logo with an arbitrary background color.</p> <p> </p> Splash scheen below Android 12 (API 31) <p>(The required file is available here)</p> <p>Create a new XML file in the <code>drawable</code> folder called <code>splash_background.xml</code>. This will be the graphic that appears on our splash screen. Its content should be as follows:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n\n&lt;item&gt;\n&lt;bitmap\nandroid:gravity=\"fill_horizontal|clip_vertical\"\nandroid:src=\"@drawable/splash_image\"/&gt;\n&lt;/item&gt;\n\n&lt;/layer-list&gt;\n</code></pre> <p>In this case, we'll put a single image here, but we could also do more complex things by adding additional <code>items</code>. A typical solution is to set a solid background with the application icon on it.</p> <p>Open the <code>values/themes.xml</code> file. This defines the different themes used in the application. We'll create a new theme for the splash screen, in which we'll set the drawable we created earlier as the background of our application window (since this is what's actually visible until the rest of the UI has loaded). We can do this like this:</p> <pre><code>&lt;style name=\"SplashTheme\" parent=\"Theme.AppCompat.NoActionBar\"&gt;\n&lt;item name=\"android:windowBackground\"&gt;@drawable/splash_background&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>We will also include the above theme in the <code>themes.xml</code> file with the <code>night</code> qualifier.</p> <p>To use the theme, we need to modify our application's manifest file (<code>AndroidManifest.xml</code>). Opening it, we can see that the entire application is currently using the theme named <code>AppTheme</code>.</p> <pre><code>&lt;application\n...\nandroid:theme=\"@style/Theme.PublicTransport\" &gt;\n</code></pre> <p>We don't want to change this, we just want to give <code>LoginActivity</code> a new theme. We can do this like this:</p> <pre><code>&lt;activity\nandroid:name=\".LoginActivity\"\nandroid:theme=\"@style/SplashTheme\"&gt;\n...\n&lt;/activity&gt;\n</code></pre> <p>Since we won't need this background after loading, we can restore the original theme, which has a white background, in the <code>LoginActivity.kt</code> file after loading is complete. Do this at the beginning of the <code>onCreate</code> function, before the <code>super</code> call:</p> <pre><code>override fun onCreate(savedInstanceState: Bundle?) {\nsetTheme(R.style.Theme_PublicTransport)\n...\n}\n</code></pre> <p>Now we can run the application and we should see the embedded image as it loads. A splash screen is usually useful when the application takes a long time to initialize. Since our current application still starts very quickly, we can simulate a small loading time as follows:</p> <pre><code>override fun onCreate(savedInstanceState: Bundle?) {\ntry {\nThread.sleep(1000)\n} catch (e: InterruptedException) {\ne.printStackTrace()\n}\nsetTheme(R.style.Theme_PublicTransport);\n...\n}\n</code></pre> <p>Above API 31, a Splash Screen API was introduced, now we will use it. For this, we have already added the necessary dependency to the <code>build.gradle.kts</code> file.</p> <p>Let's create an arbitrary icon, which we will use in the middle of our splash screen. For this, we will use the built-in <code>Asset Studio</code> tool of Android Studio. On the left side, under the Project tab, open the <code>Resource Manager</code>, then press the + button, and there select the <code>Image Asset</code> option.</p> <ol> <li>Here we want to generate a Launcher Icon, so let's select it.</li> <li>Let's name it ic_transport</li> <li>For the sake of simplicity, we will now create our icon from Clip Art, so let's select it, then choose a nice one from the button below it (e.g. with the search word bus).</li> <li>After that, choose a nice color.</li> <li>If we want, we can also adjust the size.</li> <li>We can also adjust the background color on the <code>Background Layer</code> tab.</li> <li>In the settings, change the icon to be created in PNG format.</li> <li>Then press the Next and then the Finish button.</li> </ol> <p> </p> <p>We can see that several types of icons have been created, in several sizes. The system will choose from these depending on the configuration.</p> <p>To create the splash screen, we need to define a new style in the <code>themes.xml</code> file. Add the following code snippet under the existing style. (We will deal with very little XML code within the scope of this subject.)</p> <pre><code>&lt;style name=\"Theme.PublicTransport.Starting\" parent=\"Theme.SplashScreen\"&gt;\n&lt;item name=\"windowSplashScreenBackground\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"windowSplashScreenAnimatedIcon\"&gt;@drawable/ic_transport_foreground&lt;/item&gt;\n&lt;item name=\"android:windowSplashScreenIconBackgroundColor\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"postSplashScreenTheme\"&gt;@style/Theme.PublicTransport&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>Our new style is called <code>Theme.PublicTransport.Starting</code> and is derived from the <code>Theme.SplashScreen</code> theme. In addition, we set it to</p> <ul> <li><code>windowSplashScreenBackground</code>: the background of the splash screen (of course, you can choose a different one),</li> <li><code>windowSplashScreenAnimatedIcon</code>: the icon in the middle should be our own icon, and it is only its foreground,</li> <li><code>android:windowSplashScreenIconBackgroundColor</code>: what background should be behind our icon (this can also be customized with a different color),</li> <li><code>postSplashScreenTheme</code>: what style the application should switch back to after the splash screen.</li> </ul> <p>Note</p> <p>The Splash Screen API can do much more than that, we can even animate the displayed image, but unfortunately this is beyond the scope of this lab.</p> <p>Now that we have configured our splash screen, we just need to configure its use. To do this, we first need to apply the style we just created to <code>MainActivity</code> in <code>AndroidManifest.xml</code>.</p> <pre><code>&lt;activity\nandroid:theme=\"@style/Theme.PublicTransport.Starting\"\nandroid:name=\".MainActivity\"\nandroid:exported=\"true\"&gt;\n...\n&lt;/activity&gt;\n</code></pre> <p>Then let's set the icon for our application:</p> <p><pre><code>&lt;application\n...\nandroid:icon=\"@mipmap/ic_transport\"\nandroid:roundIcon=\"@mipmap/ic_transport_round\"&gt;\n...\n&lt;/application&gt;\n</code></pre> Then we need to call the <code>installSplashScreen</code> function in <code>onCreate</code> so that the Splash Screen is actually created when the application starts.</p> <pre><code>class MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\ninstallSplashScreen()\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\n\nsetContent {\nPublicTransportTheme {\nGreeting(name = \"Android\")\n}\n}\n}\n}\n</code></pre> <p>Splash Screen-NavGraph</p> <p>The Splash Screen can also be solved using NavGraph, a tutorial task will help you with this at the end of the lab. (This is not required to pass the lab, you can get the maximum score without the task, but it is worth doing it for the sake of interest.)</p> <p>Let's try our app!</p> <p>TO BE SUBMITTED (0.5 points)</p> <p>Take a screenshot of the splash screen (on an emulator, mirroring your device, or by taking a screenshot), a corresponding code snippet, and your Neptune code somewhere in the code as a comment! Upload the image to the repository in the solution as f1.png!</p> <p>The screenshot is a required condition for getting a score!</p>"},{"location":"english/02-android-ui/#login-screen-05-points","title":"Login screen (0.5 points)","text":"<p>Now we can create the login screen. We will ask the user for an email address and a numeric password, and for now we will only check if they have entered anything in the field.</p> <p> </p> <p>To do this, first create a new Package in the project folder called <code>navigation</code>, then create two Kotlin Files in it (right click on our Package -&gt; New -&gt; Kotlin Class/File) called <code>NavGraph</code> and <code>Screen</code>. The latter will only be needed so that we can solve the navigation between the screens in a better way later. We will describe this in detail in the Extra task - Separate Screen File section for those interested.</p> <p>Open the <code>NavGraph</code> file and write the following code in it, then review and interpret the code with the help of the lab leader.</p> <pre><code>@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n){\nNavHost(\nnavController = navController,\nstartDestination = \"login\"\n){\ncomposable(\"login\"){\nLoginScreen(\nonSuccess = {\n/*TODO*/\n}\n)\n}\n}\n}\n</code></pre> <p>Once we have that, let's create a new Package called <code>screen</code> in the project folder, and then within that, create a new Kotlin File called <code>LoginScreen</code>. This screen will contain the necessary labels, buttons, and input fields. To do this, we use the following code:</p> <pre><code>@Composable\nfun LoginScreen(\nonSuccess: () -&gt; Unit\n) {\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n.padding(16.dp),\nverticalArrangement = Arrangement.Center,\nhorizontalAlignment = Alignment.CenterHorizontally\n) {\n\n//TODO Logo\n\n//TODO Header Text\n\n\n//TODO Email Field\n\n\n//TODO Password Field\n\n\n//TODO Login Button\n\n}\n}\n\n\nprivate fun isEmailValid(email: String) = email.isEmpty()\n\nprivate fun isPasswordValid(password: String) = password.isEmpty()\n\n@Preview\n@Composable\nfun PreviewLoginScreen() {\nLoginScreen(onSuccess = {})\n}\n</code></pre> <p>So once we have the <code>LoginScreen</code> framework, let's start packing in the individual elements. (Image, Text, TextField, Button)</p> <p>Let's start with the <code>Image</code> Composable. For simplicity, we'll put the app icon at the top of the login screen as a design element.</p> <pre><code>//Logo\nImage(\npainter = painterResource(id = R.mipmap.ic_transport_round),\ncontentDescription = \"Logo\",\nmodifier = Modifier.size(160.dp)\n)\n</code></pre> <p>Since the <code>Image</code> Composable only accepts vector resources, we will initially get an error. The easiest way to fix this is to delete the xml versions of the ic_transport and ic_transport_round resources and leave only the png ones. From here, after building the application, a preview of our interface will also appear.</p> <p>Let's continue with the <code>Text</code> Composable. This will serve as a message at the top of the form with the text <code>\"Please enter your credentials!\"</code>.</p> <pre><code>//Header Text\nText(\nmodifier = Modifier.padding(16.dp),\ntext = \"Please enter your credentials!\"\n)\n</code></pre> <p>Next, we create the two <code>TextField</code>s<code>, which we will implement using an</code>OutlinedTextField` Composable. We will also need other variables here.</p> <p>Email Field</p> <pre><code>//Email Field\nvar email by remember { mutableStateOf(\"\") }\nvar emailError by remember { mutableStateOf(false) }\n\nOutlinedTextField(\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp),\nlabel = { Text(\"Email\") },\nvalue = email,\nonValueChange =\n{\nemail = it\nemailError = isEmailValid(email)\n},\nkeyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\nisError = emailError,\ntrailingIcon = {\nif (emailError) {\nIcon(Icons.Filled.Warning, contentDescription = \"Error\", tint = Color.Red)\n}\n},\nsupportingText = {\nif (emailError) {\nText(\"Please enter your e-mail address!\", color = Color.Red)\n}\n}\n\n)\n</code></pre> <p>Password Field</p> <pre><code>//Password Field\nvar password by remember { mutableStateOf(\"\") }\nvar passwordError by remember { mutableStateOf(false) }\n\nOutlinedTextField(\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp),\nlabel = { Text(\"Password\") },\nvalue = password,\nonValueChange =\n{\npassword = it\npasswordError = isPasswordValid(it)\n},\nvisualTransformation = PasswordVisualTransformation(),\nkeyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Decimal),\nisError = passwordError,\ntrailingIcon = {\nif (passwordError) {\nIcon(Icons.Filled.Warning, contentDescription = \"Error\", tint = Color.Red)\n}\n},\nsupportingText = {\nif (passwordError) {\nText(\"Please enter your password!\", color = Color.Red)\n}\n}\n)\n</code></pre> <p>The parameters used for <code>OutlinedTextField</code> above are:</p> <ol> <li>label: With this we can specify the caption that will appear in the empty TextField. So that if we have already written in it, then thanks to <code>OutlinedTextField</code> the text Label will slide up to the upper left corner.</li> <li>value: We pass the entered value to this parameter.</li> <li>onValueChange: This is a lambda, with which we can repeatedly assign a value to the variable that we passed to the value parameter. With each change, this parameter is updated thanks to <code>remember</code>.</li> <li>visualTransformation: With this we can change whether it is a Password or a plain Input field.</li> <li>keyboardOptions: With this parameter we can set and limit what data the user can enter in the input field.</li> <li>isError: We also pass a variable to this, which is updated each time if the input field is empty. This will be useful, because in the task we want the TextField to print a message if we want to log in empty.</li> <li>trailingIcon: Here we can set the Icon that we want to see on the right side of the TextField.</li> <li>supportingText: This parameter is responsible for being able to display text under the TextField.</li> </ol> <p>Finally, let's make the last element, which will be the button that will be responsible for logging in.</p> <pre><code>//Login Button\nButton(\nonClick = {\nif (isEmailValid(email)) {\nemailError = true\n} else if (isPasswordValid(password)) {\npasswordError = true\n} else {\nonSuccess()\n}\n},\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp)\n) {\nText(\"Login\")\n}\n</code></pre> <p>using string resources</p> <p>It is worth outsourcing the Strings to the <code>./values/strings.xml</code> file, so we can localize our application using <code>resource qualifiers</code>. We can do this using the ALT + ENTER key combination, by clicking on the string, or by manually adding it to <code>strings.xml</code> <pre><code>&lt;string name=\"label_email\"&gt;Email&lt;/string&gt;\n</code></pre></p> <p>code interpretation</p> <p>Let's talk through and interpret the code with the help of the lab leader!</p> <p>If we are successful with this step, the error in the <code>NavGraph</code> file should disappear after the necessary imports.</p> <p>There is only one more step to see this screen on the emulator after launch. Open the <code>MainActivity</code> file and modify it as follows:</p> <pre><code>class MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\ninstallSplashScreen()\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nPublicTransportTheme {\nBox(\nmodifier = Modifier.safeDrawingPadding()\n) {\nNavGraph()\n}\n}\n}\n}\n}\n</code></pre> <p>EdgeToEdge</p> <p>Starting with Android 15 (API 35), our application can draw under the system UI (StatusBar, NavigationBar, soft keyboard, etc.). This allows us to use the entire screen of the device from edge to edge. This can be useful in countless cases when we want to write a \"full-screen\" application, without being limited by the overlapping system UI. The function is of course also available at lower API levels, for which the <code>enableEdgeToEdge</code> function call shown above is for.</p> <p>However, as useful as this is, it can also cause many problems if, for example, some of our controls slide under the software keyboard, which we cannot reach. insets were invented to eliminate this. It has several settings that save us from having to manually guess how many dp the status bar is, especially since these values \u200b\u200bcan change at runtime (see software keyboard). Among the many settings, we are now using the <code>safeDrawindPadding</code> shown above, which, as the name suggests, sets just enough padding everywhere so that nothing is covered by the system UI. (Of course, this can be used not only in <code>Activity</code>, but also on all <code>Screen</code> and <code>Composable</code>.)</p> <p>A good demonstration of this feature is that the LoginScreen controls, which are placed in the middle of the entire page, are not covered when the software keyboard appears, but slide into the middle of the free space.</p> <p><p> </p></p> <p>TO BE SUBMITTED (0.5 points)</p> <p>Take a screenshot of the login screen with an input error (on an emulator, mirroring your device, or by taking a screenshot), a corresponding code snippet, and your Neptun code typed into the email field! Upload the image to the repository in the solution as f2.png!</p> <p>The screenshot is a required condition for getting a score!</p>"},{"location":"english/02-android-ui/#list-of-options-1-point","title":"List of options (1 point)","text":"<p>On the next screen, the user can choose from different types of vehicles. For now, only three services operate in our fictitious company: bicycles, buses, and trains.</p> <p> </p> <p>First, download the compressed file containing the application's image resources, which contains all the images we will need. Copy its contents into the <code>app/src/main/res</code> folder within our project (this can be done by switching from the standard Android view in the top left to the Project view in Android Studio, or by right-clicking on the folder &gt; Show in Explorer).</p> <p>To do this, create a new Kotlin File in the <code>screen</code> Package and name it <code>ListScreen</code>, then enter the following:</p> <pre><code>@Composable\nfun ListScreen(\nonTransportClick: (s: String) -&gt; Unit\n) {\n//TODO\n}\n</code></pre> <p>Go back to the <code>NavGraph</code> file and add the following</p> <pre><code>@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n) {\n\nNavHost(\nnavController = navController,\nstartDestination = \"login\"\n) {\ncomposable(\"login\") {\nLoginScreen(\nonSuccess = {\nnavController.navigate(\"list\")\n}\n)\n}\ncomposable(\"list\") {\nListScreen(\nonTransportClick = {\n/*TODO*/\n/*navController.navigate(\"pass/$it\")*/\n}\n)\n}\n}\n}\n</code></pre> <p>Next, let's create <code>ListScreen</code>:</p> <pre><code>@Composable\nfun ListScreen(\nonTransportClick: (s: String) -&gt; Unit\n) {\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n) {\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"Bike clicked\")\nonTransportClick(\"Bike\")\n},\n) {\n\nImage(\npainter = painterResource(id = R.drawable.bikes),\ncontentDescription = \"Bike Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = \"Bike\",\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"Bus clicked\")\nonTransportClick(\"Bus\")\n},\n) {\n\nImage(\npainter = painterResource(id = R.drawable.bus),\ncontentDescription = \"Bus Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = \"Bus\",\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"Train clicked\")\nonTransportClick(\"Train\")\n},\n) {\n\nImage(\npainter = painterResource(id = R.drawable.trains),\ncontentDescription = \"Train Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = \"Train\",\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\n}\n}\n\n@Preview\n@Composable\nfun PreviewListScreen() {\nListScreen(onTransportClick = {})\n}\n</code></pre> compact solution <p>Or for those interested, we have provided the code below. With this code we can achieve the same thing as the previous one, only we have to write less and it is a little more complex.</p> <pre><code>@Composable\nfun ListScreen(\nonTransportClick: (s: String) -&gt; Unit\n) {\nColumn (\nmodifier = Modifier\n.fillMaxSize()\n) {\nval type = mapOf(\n\"Bike\" to R.drawable.bikes,\n\"Bus\" to R.drawable.bus,\n\"Train\" to R.drawable.trains\n)\n\nfor (i in type) {\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"${i.key} clicked\")\nonTransportClick(i.key)\n},\n) {\n\nImage(\npainter = painterResource(id = i.value),\ncontentDescription = \"$i Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = i.key,\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\n}\n}\n}\n</code></pre> <p>We know from the <code>Box</code> used here that the Composables placed in it are stacked on top of each other, so we can easily achieve that there is a caption on an image. We can give <code>Box</code> a click event using the <code>modifier</code> (<code>Modifier.clickable{..}</code>), so we can easily achieve further navigation. However, this function does not work yet, because the <code>NavGraph</code> is missing the path and the onClick parameter. We will fix this in the next task.</p> <p>The <code>Image</code> Composable function has a <code>painter</code>, a <code>contentDescription</code> and a <code>contentScale</code> parameter. We can pass these in turn using <code>painterResource</code>, <code>String</code> and <code>ContentScale</code>. We give <code>painterResource</code> the path to the image, <code>painterDescription</code> a description, and <code>contentScale</code> a <code>FillBounds</code>. With this, we can achieve that the entire area of \u200b\u200bthe <code>Box</code> has an image.</p> <p>code interpretation</p> <p>With the help of the lab leader, we will discuss and interpret the code!</p> <p>Let's try our application!</p> <p>After logging in, we should see the created list view. Although clicking on the list items does not navigate us further, it is worth checking the logging using <code>LogCat</code>, because if we did everything correctly, we should see the click on the given vehicle.</p> <p>TO BE SUBMITTED (1 point)</p> <p>Create a screenshot showing the vehicle list (on emulator, device mirroring or screen capture), a corresponding code snippet, and your Neptune code somewhere in the code as a comment! Upload the image to the repository in the solution as f3.png!</p> <p>The screenshot is a necessary condition for getting points!</p>"},{"location":"english/02-android-ui/#detailed-view-1-point","title":"Detailed View (1 point)","text":"<p>After the user has selected the desired mode of transport, we will offer them some additional options. On this screen, they can set the dates on the pass and the discount, if any, that applies to it.</p> <p> </p> <p>Create the new screen named <code>DetailsScreen</code> in the <code>screen</code> Package and structure it as follows:</p> <pre><code>@Composable\nfun DetailsScreen(\nonSuccess: (s: String) -&gt; Unit,\ntransportType: String\n) {\nval context = LocalContext.current\n\nval calendar = Calendar.getInstance()\nval year = calendar.get(Calendar.YEAR)\nval month = calendar.get(Calendar.MONTH)\nval day = calendar.get(Calendar.DAY_OF_MONTH)\n\nvar startDate by remember {\nmutableStateOf(\nString.format(\nLocale.US,\n\"%d. %02d. %02d\",\nyear,\nmonth + 1,\nday\n)\n)\n}\nvar endDate by remember {\nmutableStateOf(\nString.format(\nLocale.US,\n\"%d. %02d. %02d\",\nyear,\nmonth + 1,\nday\n)\n)\n}\nval currentDate = \"$year. ${month + 1}. $day\"\n\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n.padding(16.dp),\nverticalArrangement = Arrangement.Top,\nhorizontalAlignment = Alignment.Start\n) {\n//Pass category\n\n\n//Start date\n\n\n//End date\n\n\n//Price category\n\n\n//Price\n\n\n//Buy button\n\n}\n}\n\n@Preview\n@Composable\nfun PreviewDetailsScreen() {\nDetailsScreen(onSuccess = {}, transportType = \"Senior Bus Pass\")\n}\n</code></pre> <p>Pass category <pre><code>Text(\nmodifier = Modifier\n.align(Alignment.CenterHorizontally)\n.padding(top = 16.dp),\ntext = \"${transportType} pass\",\nfontSize = 24.sp\n)\n</code></pre></p> <p>This <code>Text</code> Composable will be a header that will show what kind of ticket we are currently trying to purchase. We pass it the <code>transportType</code> parameter as text and then use <code>Modifier.align()</code> to center it in the column.</p> <p>Start date <pre><code>Text(\nmodifier = Modifier.padding(top = 16.dp),\ntext = \"Start date\",\nfontSize = 16.sp\n)\nTextButton(\nmodifier = Modifier.padding(top = 16.dp),\nonClick = {\nDatePickerDialog(\ncontext,\n{ _, selectedYear, selectedMonth, selectedDay -&gt;\nstartDate = String.format(\nLocale.US,\n\"%d. %02d. %02d\",\nselectedYear,\nselectedMonth + 1,\nselectedDay\n)\n},\nyear, month, day\n).show()\n}) {\nText(\ntext = if (startDate.isEmpty()) currentDate else startDate,\nfontSize = 24.sp\n)\n}\n</code></pre> We will implement a date picker field using a <code>Text</code> and a <code>TextButton</code>. <code>Text</code> only provides information as a header, and we will pass an onClick event to <code>TextButton</code>, which will be used to implement a DatePicker dialog. We will pass the necessary parameters to it:</p> <ol> <li>context</li> <li>Lambda parameter, which describes what should happen during the date selection. In this case, we need to override our startDate variable.</li> <li>Year - current year</li> <li>Month - current month</li> <li>Day - current day</li> </ol> <p>These last three will affect the current day position of the DatePicker dialog.</p> <p>End date <pre><code>Text(\nmodifier = Modifier.padding(top = 16.dp),\ntext = \"End date\",\nfontSize = 16.sp\n)\n\nTextButton(\nmodifier = Modifier.padding(top = 16.dp),\nonClick = {\nDatePickerDialog(\ncontext,\n{ _, selectedYear, selectedMonth, selectedDay -&gt;\nendDate = String.format(\nLocale.US,\n\"%d. %02d. %02d\",\nselectedYear,\nselectedMonth + 1,\nselectedDay\n)\n},\nyear, month, day\n).show()\n}) {\nText(\ntext = if (endDate.isEmpty()) currentDate else endDate,\nfontSize = 24.sp\n)\n}\n</code></pre></p> <p>It works similarly to Start Date.</p> <p>Price category <pre><code>val categories = listOf(\"Full price\", \"Senior\", \"Public servant\")\nvar selectedCategory by remember { mutableStateOf(\"Full price\") }\nText(\nmodifier = Modifier.padding(top = 16.dp),\ntext = \"Price category\",\nfontSize = 16.sp\n)\nColumn(\nmodifier = Modifier.padding(top = 16.dp)\n) {\ncategories.forEach { category -&gt;\nRow(\nverticalAlignment = Alignment.CenterVertically,\nmodifier = Modifier\n.fillMaxWidth()\n.selectable(\nselected = (category == selectedCategory),\nonClick = { selectedCategory = category },\nrole = Role.RadioButton\n)\n.padding(vertical = 4.dp)\n) {\nRadioButton(\nselected = (category == selectedCategory),\nonClick = { selectedCategory = category }\n)\nSpacer(modifier = Modifier.width(8.dp))\nText(category)\n}\n}\n}\n</code></pre></p> <p>We also give the price category section a header using <code>Text</code> Composable, and then within this we place a radio button section consisting of 3 categories.</p> <p>Price</p> <pre><code>Text(\nfontSize = 24.sp,\ntext = \"Price: 42000\",\nmodifier = Modifier\n.align(Alignment.CenterHorizontally)\n.padding(top = 16.dp),\n)\n</code></pre> <p>The price section currently only displays a static price, which can be changed during the iMSc task.</p> <p>Buy button</p> <pre><code>Button(\nmodifier = Modifier\n.align(Alignment.CenterHorizontally)\n.fillMaxWidth()\n.padding(top = 16.dp),\nonClick = {\nonSuccess(\"${startDate};$endDate;${\"$selectedCategory $transportType\"}\")\n}) {\nText(\"Buy\")\n}\n</code></pre> <p>We also pass an onClick event to the button, namely the lambda parameter that we received as a parameter. This can also be modified during the iMSc task.</p> <p>Interpretation</p> <p>The code below has a lot of formatting, so it can be difficult to interpret. Let's review and interpret it with the help of the lab leader.</p> <p>Then, expand our <code>NavGrap</code> as follows, and then discuss the code's operation with the lab leader.</p> <pre><code>@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n) {\n\nNavHost(\nnavController = navController,\nstartDestination = \"login\"\n) {\ncomposable(\"login\") {\nLoginScreen(\nonSuccess = {\nnavController.navigate(\"list\")\n}\n)\n}\ncomposable(\"list\") {\nListScreen(\nonTransportClick = {\nnavController.navigate(\"details/$it\")\n}\n)\n}\ncomposable(\nroute = \"details/{type}\",\narguments = listOf(navArgument(\"type\") { type = NavType.StringType })\n) { backStackEntry -&gt;\nDetailsScreen(transportType = backStackEntry.arguments?.getString(\"type\") ?: \"\",\nonSuccess = {\n/*TODO*/\n}\n)\n}\n}\n}\n</code></pre> <p>TO BE SUBMITTED (1 point)</p> <p>Create a screenshot showing the detailed view (on emulator, device mirroring or screen capture), a corresponding code snippet, and your neptun code somewhere in the code as a comment! Upload the image to the repository in the solution as f4.png!</p> <p>The screenshot is a necessary condition for getting points!</p>"},{"location":"english/02-android-ui/#the-pass-1-point","title":"The Pass (1 point)","text":"<p>The last screen of the app will be quite simple, it will represent the pass itself. Here we will display the pass type and validity period, as well as a QR code to verify the pass.</p> <p> </p> <p>Let's create the necessary Kotlin File also in the <code>screen</code> package, named <code>PassScreen</code>, and then write the following into it.</p> <pre><code>@Composable\nfun PassScreen(\npassDetails: String\n) {\n\nval parts = passDetails.split(\";\")\n\nval startDate = parts[0]\nval endDate = parts[1]\nval category = parts[2]\n\nBox(\nmodifier = Modifier\n.fillMaxSize()\n.padding(16.dp)\n) {\nColumn(\nmodifier = Modifier.fillMaxWidth(),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Top\n) {\nText(\ntext = \"$category Pass\",\nfontSize = 24.sp,\nmodifier = Modifier.padding(16.dp)\n)\nText(\ntext = \"$startDate - $endDate\",\nfontSize = 16.sp,\nmodifier = Modifier.padding(16.dp)\n)\n\n}\nImage(\npainter = painterResource(\nid = R.drawable.qrcode\n),\ncontentDescription = \"Ticket\",\nmodifier = Modifier\n.fillMaxWidth()\n.align(Alignment.Center),\ncontentScale = ContentScale.FillWidth\n)\n}\n}\n\n@Composable\n@Preview\nfun PreviewPassScreen() {\nPassScreen(passDetails = \"2024. 09. 01.;2024. 12. 08.;Senior Train\")\n}\n</code></pre> <p>Since <code>PassScreen</code> needs the ticket type and its validity period, it receives this as a parameter, then we process it within a function and use it as follows.</p> <ul> <li><code>yyyy. mm. dd.;yyyy. mm. dd.;category</code> is the structure of the received String</li> <li>We split this along <code>;</code>, then we pass the date to the <code>Text</code> Composable value using string interpolation, and the category to another <code>Text</code> Composable</li> </ul> <p>You can see that, unlike Java, Kotlin supports string interpolation.</p> <p>Finally, we connect our new screen to <code>NavGraph</code> similarly to the previous one, and we assign the lambda event to the previous composable:</p> <pre><code>@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n){\n\nNavHost(\nnavController = navController,\nstartDestination = \"login\"\n){\n...\ncomposable(\nroute = \"details/{type}\",\narguments = listOf(navArgument(\"type\") { type = NavType.StringType })\n) { backStackEntry -&gt;\nDetailsScreen(transportType = backStackEntry.arguments?.getString(\"type\") ?: \"\",\nonSuccess = {\nnavController.navigate(\"pass/$it\")\n}\n)\n}\ncomposable(\nroute = \"pass/{passDetails}\",\narguments = listOf(navArgument(\"passDetails\") { type = NavType.StringType })\n) { backStackEntry -&gt;\nPassScreen(passDetails = backStackEntry.arguments?.getString(\"passDetails\") ?: \"\")\n}\n}\n}\n</code></pre> <p>TO BE SUBMITTED (1 point)</p> <p>Create a screenshot showing the passport screen (on an emulator, mirroring the device or by screen recording), a corresponding code snippet, and your neptun code somewhere in the code as a comment. Upload the image to the repository in the solution as f5.png.</p> <p>The screenshot is a necessary condition for obtaining a score.</p>"},{"location":"english/02-android-ui/#independent-task-boat-pass-1-point","title":"Independent task - Boat pass (1 point)","text":"<p>As our company expanded, we also launched a boat pass service. Let's add this new pass type to our application!</p> Help <p>Most of the necessary changes will be in the <code>ListScreen</code>. A new <code>Box</code> must be added to the 3 options so far, and the new option must be converted similarly to the previous ones.</p> <p>TO BE SUBMITTED (1 point)</p> <p>Create two screenshots showing the vehicle selection screen and the boat pass screen (on an emulator, by mirroring the device or by taking a screenshot), and the corresponding code snippet, as well as your neptun code somewhere in the code as a comment! Upload the images to the repository in the solution as f6.png and f7.png!</p> <p>Screenshots are necessary conditions for getting points!</p>"},{"location":"english/02-android-ui/#extra-tasks","title":"Extra tasks","text":"<p>Introductory</p> <p>These tasks are not required to obtain the maximum score for the lab, they are merely introductory in the lab material for those who would like to delve deeper into the topic.</p>"},{"location":"english/02-android-ui/#extra-task-splashscreen-animation","title":"Extra task - SplashScreen animation","text":"<p>Thanks to the SplashScreen API, we have already seen that we can easily create a splash screen that we see immediately after opening the application. We can also easily animate the Icon that appears on it, for this we only need to create a few <code>.xml</code> files using Android Studio, in which we will implement these operations.</p> <p>We need the following:</p> <ul> <li>Logo - This is what we will display on the splash screen. (We have already created this before, we will just modify it)</li> <li>Animator - In this we will describe the animation that we want to use on the given Logo.</li> <li>Animated Vector Drawable - With this, the Animator and the Logo will be connected.</li> <li>Themes - We will also only modify this</li> <li>Animation - In this we can specify Interpolations in addition to the animations</li> </ul> <p>Modify Logo</p> <p>Modify the existing Logo as follows. (<code>ic_transport_foreground.xml</code>)</p> <pre><code>&lt;vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:width=\"108dp\"\nandroid:height=\"108dp\"\nandroid:viewportWidth=\"24\"\nandroid:viewportHeight=\"24\"\nandroid:tint=\"#FFFF00\"&gt;\n&lt;group\nandroid:name=\"animationGroup\"\nandroid:pivotX=\"12\"\nandroid:pivotY=\"12\"&gt;\n&lt;path\nandroid:fillColor=\"@android:color/white\"\nandroid:pathData=\"M4,16c0,0.88 0.39,1.67 1,2.22L5,20c0,0.55 0.45,1 1,1h1c0.55,0 1,-0.45 1,-1v-1h8v1c0,0.55 0.45,1 1,1h1c0.55,0 1,-0.45 1,-1v-1.78c0.61,-0.55 1,-1.34 1,-2.22L20,6c0,-3.5 -3.58,-4 -8,-4s-8,0.5 -8,4v10zM7.5,17c-0.83,0 -1.5,-0.67 -1.5,-1.5S6.67,14 7.5,14s1.5,0.67 1.5,1.5S8.33,17 7.5,17zM16.5,17c-0.83,0 -1.5,-0.67 -1.5,-1.5s0.67,-1.5 1.5,-1.5 1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5zM18,11L6,11L6,6h12v5z\"/&gt;\n&lt;/group&gt;\n&lt;/vector&gt;\n</code></pre> <p>We wrapped the existing path in a group tag, which is needed to animate the icon. We give this group a name that we will use when animating, which group we want, and set the pivotX and pivotY points. In this case, we will set it to the center, because we want to animate the Logo from the center.</p> <p>Creating an Animator</p> <p>In order to animate the Logo, we need to create an Animator type file. Right-click on the <code>res</code> folder, then New-&gt;Android Resource file, enter <code>logo_animator</code> as the name, <code>Animator</code> as the type, and <code>objectAnimator</code> as the Root element, then click the OK button. This has created the necessary file, all we need to do is write the animations. First, set the duration of the animation, we can do this using <code>android:duration</code> within the <code>objectAnimator</code> tag.</p> <ul> <li>Initially set to one second (1000).</li> <li>Next, we give the Logo a Scale animation, which allows us to make it appear from scratch and grow linearly over the duration of the animation. For this, we need a <code>propertyValuesHolder</code> tag inside the <code>objectAnimator</code>.</li> </ul> <pre><code>&lt;objectAnimator xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:duration=\"1000\"\nandroid:interpolator=\"@android:anim/overshoot_interpolator\"&gt;\n\n&lt;propertyValuesHolder\nandroid:propertyName=\"scaleX\"\nandroid:valueType=\"floatType\"\nandroid:valueFrom=\"0.0\"\nandroid:valueTo=\"0.5\" /&gt;\n\n&lt;propertyValuesHolder\nandroid:propertyName=\"scaleY\"\nandroid:valueType=\"floatType\"\nandroid:valueFrom=\"0.0\"\nandroid:valueTo=\"0.5\" /&gt;\n\n&lt;/objectAnimator&gt;\n</code></pre> <p>In this short animation code, we just increase the size of the Logo from 0 to 0.5. We can specify the animation in the propertyName, which can be scaleX, scaleY, rotation, etc... and in valuesFrom/To we can specify the start-target size.</p> <p>To connect this animation to the Logo, we need to create an Animated Vector Drawable.</p> <p>Animated Vector Drawable</p> <p>Let's create the Animated Vector Drawable file using Android Studio. Right-click on our drawable folder, then New-&gt;Drawable Resource File. Here, we give the name <code>animated_logo</code> and the root element <code>animated-vector</code>, then click the OK button. This will create the required file. Complete it as follows:</p> <pre><code>&lt;animated-vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:drawable=\"@drawable/ic_transport_foreground\"&gt;\n\n&lt;target\nandroid:animation=\"@animator/logo_animator\"\nandroid:name=\"animationGroup\" /&gt;\n\n&lt;/animated-vector&gt;\n</code></pre> <ul> <li>Az <code>android:drawable</code> seg\u00edts\u00e9g\u00e9vel megadjuk azt a f\u00e1jlt amit szeretn\u00e9nk anim\u00e1lni.</li> <li>Az <code>android:animation</code> seg\u00edts\u00e9g\u00e9vel pedig, hogy melyik anim\u00e1ci\u00f3t szeretn\u00e9nk haszn\u00e1lni.</li> <li>Valamint az <code>android:name</code> seg\u00edts\u00e9g\u00e9vel azt a csoportot amelyiket szeretn\u00e9nk anim\u00e1lni az adott Logo-n bel\u00fcl.</li> </ul> <p>We have already created the theme for the splashscreen, but it was only for the plain Logo. To use the animated Logo, we need to modify it as follows.</p> <p>Modifying Themes</p> <p><pre><code>&lt;style name=\"Theme.PublicTransport.Starting\" parent=\"Theme.SplashScreen\"&gt;\n&lt;item name=\"windowSplashScreenBackground\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"windowSplashScreenAnimatedIcon\"&gt;@drawable/animated_logo&lt;/item&gt;\n&lt;item name=\"android:windowSplashScreenIconBackgroundColor\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"postSplashScreenTheme\"&gt;@style/Theme.PublicTransport&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> Here we just replaced AnimatedIcon with <code>animated_logo</code> instead of the plain one.</p> <p>Animation - Interpolations</p> <p>The instalSplashScreen has a lambda parameter: <code>apply{}</code>. Within this, we can specify different operations. For example, <code>setKeepOnScreenCondition</code> allows us to keep the SplashScreen on the screen until a certain condition is met. Generally, it is worth performing database reads or things that are time-consuming and only need to be executed once during the application startup within this block. If these are executed, a condition is met and the SplashScreen disappears. <code>setOnExitAnimationListener</code> - Within this, we can specify an animation that is executed if <code>setKeepOnScreenCondition</code> does not keep the SplashScreen in the foreground and the application is about to change screens. In such cases, we can also execute an exit animation. For example, the following:</p> <pre><code>installSplashScreen().apply {\nsetOnExitAnimationListener{ splashScreenView -&gt;\nval zoomX = ObjectAnimator.ofFloat(\nsplashScreenView.iconView,\n\"scaleX\",\n0.5f,\n0f\n)\nzoomX.interpolator = OvershootInterpolator()\nzoomX.duration = 500\nzoomX.doOnEnd { splashScreenView.remove() }\nval zoomY = ObjectAnimator.ofFloat(\nsplashScreenView.iconView,\n\"scaleY\",\n0.5f,\n0f\n)\nzoomY.interpolator = OvershootInterpolator()\nzoomY.duration = 500\nzoomY.doOnEnd { splashScreenView.remove()}\nzoomX.start()\nzoomY.start()\n}\n}\n</code></pre> <p>Let's paste this into the <code>MainActivity</code> <code>onCreate()</code> function in the appropriate place, then test the application!</p>"},{"location":"english/02-android-ui/#extra-task-navgraph-splash","title":"Extra task - NavGraph-Splash","text":"<p>Previously, we solved this screen using the Splash Screen API, but there are several options, of which we will now look at one using NavGraph.</p> <p>This screen is essentially the same screen as the others. Here, first, let's create a new Kotlin File inside the <code>screen</code> package, then name it <code>SplashScreen</code>, and write the following code in it:</p> <pre><code>@Composable\nfun SplashScreen(\nonSuccess: () -&gt; Unit\n) {\nLaunchedEffect(key1 = true) {\ndelay(1000)\nonSuccess()\n}\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n.background(Color.Blue),\nverticalArrangement = Arrangement.Center,\nhorizontalAlignment = Alignment.CenterHorizontally\n) {\nImage(\nmodifier = Modifier\n.size(128.dp),\npainter = painterResource(id = R.drawable.ic_transport_foreground),\ncontentDescription = \"Public Transport\",\n)\n}\n}\n</code></pre> <p>LaunchedEffect will be discussed in more detail in the presentation. It was needed here, because the delay function in it cannot be called by itself: it can be used inside a suspend function or a coroutine. The delay function is responsible for how long the SplashScreen should be on the screen. In this case, it is 1 second (1000 milliseconds), after which the onSuccess lambda is called, which navigates us to the LoginScreen.</p> <p>Let's modify our <code>NavGraph</code> as follows:</p> <pre><code>NavHost(\nnavController = navController,\nstartDestination = \"splash\"\n){\ncomposable(\"splash\"){\nSplashScreen(\nonSuccess = {\nnavController.navigate(\"login\"){\npopUpTo(\"splash\"){ inclusive = true }\nlaunchSingleTop = true\n}\n}\n)\n}\n...\n}\n</code></pre> <p>We will not be dealing with the customization of the <code>SplashScreen</code> screen within the scope of the lab, it is completely customizable.</p> <p>The newly added <code>composable</code> element in <code>NavGraph</code> is structured as follows:</p> <ul> <li>It also received an access route</li> <li>It also received the desired screen in the body of the function</li> <li>It has an onSuccess lambda parameter, in which we put the navigation to the next screen</li> <li>Within this, we use <code>popUpTo</code> to extract the SplashScreen so that it does not throw it in case of navigation back</li> </ul> <p>Then the <code>Manifest</code> file can be customized to display what theme.</p>"},{"location":"english/02-android-ui/#extra-task-separate-screen-file","title":"Extra Task - Separate Screen File","text":"<p>In large projects with multiple screens, navigating between screens with strings can become inconvenient after a while. Therefore, a common solution is to collect the screens and their associated navigation paths into a separate <code>Screen</code> class, and then use only the objects formed from them in the navigation graph. The <code>Screen</code> file created earlier will contain the following code:</p> <pre><code>sealed class Screen(val route: String){\nobject Login: Screen(\"login\")\nobject List: Screen(\"list\")\nobject Details: Screen(\"details/{type}\"){\nfun passType(type: String) = \"details/$type\"\n}\nobject Pass: Screen(\"pass/{passDetails}\"){\nfun passPassDetails(passDetails: String) = \"pass/$passDetails\"\n}\n}\n</code></pre> <p>sealed class</p> <p>Kotlin's sealed classes are classes that have limited inheritance, and all their descendants are known at compile time. We can use these classes in a similar way to enums. In this case, <code>Details</code> is not actually a direct descendant of <code>Screen</code>, but an anonymous descendant of it, since it also includes the handling of the username as a parameter.</p> <p>So, after this, we don't pass a raw String to the <code>NavGraph</code> <code>route</code> parameter, but the objects we just created, as follows:</p> <pre><code>@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n) {\n\nNavHost(\nnavController = navController,\nstartDestination = Screen.Login.route\n) {\ncomposable(Screen.Login.route) {\nLoginScreen(\nonSuccess = {\nnavController.navigate(Screen.List.route)\n}\n)\n}\ncomposable(Screen.List.route) {\nListScreen(\nonTransportClick = {\nnavController.navigate(Screen.Details.passType(it))\n}\n)\n}\ncomposable(\nroute = Screen.Details.route,\narguments = listOf(navArgument(\"type\") { type = NavType.StringType })\n) { backStackEntry -&gt;\nDetailsScreen(transportType = backStackEntry.arguments?.getString(\"type\") ?: \"\",\nonSuccess = {\nnavController.navigate(Screen.Pass.passPassDetails(it))\n}\n)\n}\ncomposable(\nroute = Screen.Pass.route,\narguments = listOf(navArgument(\"passDetails\") { type = NavType.StringType })\n) { backStackEntry -&gt;\nPassScreen(passDetails = backStackEntry.arguments?.getString(\"passDetails\") ?: \"\")\n}\n}\n}\n</code></pre> <p>It is clear that using Sealed Class it is easier to modify the address of each access path. Both solutions work, but the latter is a bit more elegant for larger projects.</p>"},{"location":"english/02-android-ui/#imsc-task","title":"iMSc task","text":"<p>Earlier, in the detailed view, we printed a fixed price to the screen. Let's write the logic that calculates the price of the pass, and as the user changes the parameters of the pass, update the displayed price.</p> <p>The pricing should work as follows:</p> Means of transport Rental price per day Bicycle 700 Bus 1000 Train 1500 Boat 2500 <p>We also give the following discounts:</p> Price category Discount amount Full price 0% Pensioner 90% Public employee 50% Tip <p>For calculations and event handling, it is worth using the <code>Calendar</code> class and the Calendar.set function.</p> <p>It is worth writing two functions for the calculations:</p> <ul> <li>One function is a difference calculator that calculates the days between two dates</li> <li>The other function calculates the price based on the days and the category</li> </ul>"},{"location":"english/02-android-ui/#different-daily-pass-prices-1-imsc-point","title":"Different daily pass prices (1 IMSc point)","text":"<p>TO BE SUBMITTED (1 IMSc point)</p> <p>Create a screenshot showing a detailed view of a multi-day pass with the price (on an emulator, device mirroring or screenshot), with the code related to the pass prices, and your neptun code as a comment somewhere in the code! Upload the image to the repository in the solution as f8.png!</p> <p>The screenshot is a necessary condition for getting points!</p>"},{"location":"english/02-android-ui/#percentage-discounts-1-imsc-point","title":"Percentage discounts (1 IMSc point)","text":"<p>TO BE SUBMITTED (1 IMSc point)</p> <p>Create a screenshot showing a detailed view of a multi-day discount pass with price (on emulator, device mirroring or screenshot), with the code related to the pass discounts, and your neptun code as a comment somewhere in the code! Upload the image to the repository in the solution as f9.png!</p> <p>The screenshot is a necessary condition for getting points!</p>"},{"location":"english/github/","title":"Submitting your work (GitHub)","text":"<p>We are using GitHub to submit the solutions. The repository is created through a link included in the Moodle. The solution of the exercises are created within these repositories, then committed and pushed to GitHub. The submission is finished with a pull request assigned to the instructor (with GitHub username <code>siktdavid</code>).</p> <p>The submission requirements detailed below and mandatory. Submissions not following these guidelines are not graded.</p>"},{"location":"english/github/#short-version-aka-tldr","title":"Short version, aka. TL;DR","text":"<p>The detailed description below shows the entire procedure. This summary is an overview of the whole process.</p> <ol> <li> <p>The exercises are solved in a dedicated GitHub repository created using a GitHub Classroom invitation link published in Moodle.</p> </li> <li> <p>Your solution is submitted on a new branch, not on master. You can create any number of commits on this branch. You need to push these commits to GitHub.</p> </li> <li> <p>You submit your final solution through a pull request assigned to the instructor.</p> </li> <li> <p>You can ask questions regarding the results and evaluation in the pull request comment thread. To notify your instructor use the @name annotation in the comment text.</p> </li> </ol>"},{"location":"english/github/#starting-your-work-git-checkout","title":"Starting your work: git checkout","text":"<ol> <li> <p>Open the course page in Moodle and find the invitation URL. </p> </li> <li> <p>If needed, authorize the GitHub Classroom application to use your account data.</p> <p></p> </li> <li> <p>You will see a page where you can \"Accept the ... assignment\". Click the button.</p> <p></p> </li> <li> <p>Wait for the repository creation to finish. You will get the repository URL here.</p> <p>The repository will be private. No one but you and the instructor will see it.</p> <p></p> </li> <li> <p>Open the repository webpage by following the link. You will need this URL, so remember it.</p> <p></p> </li> <li> <p>Clone the repository. You will need the repository git URL, which you can get from the repository webpage following the Clone or download button.</p> <p>You may use any git client. The simplest one is GitHub Desktop if you do not have a favorite yet. You can list your repositories in this application directly from GitHub.</p> <p></p> <p>If you are using the shell or the console, the following command performs the clone (if the <code>git</code> command is available): <code>git clone &lt;repository link&gt;</code></p> <p>If the login fails with the username/password pair in the case of \"Clone with HTTPS\", (for a user that has been used for a long time) it is worth checking the expiration date of the Personal Access token on git.</p> <p>Down arrow next to the profile picture in the upper right corner &gt; Settings &gt; on the left (bottom) Developer settings &gt; Personal Access Tokens.</p> <p>As an alternative method: instead of HTTP cloning, to use an SSH key, instructions here can be found.</p> <p>If you are using Sourcetree, you might need to use a Personal Access Token (PAT) for access as follows:</p> <ol> <li>Head to your GitHub account settings and choose Developer settings from the left menu.</li> <li>Choose the Personal access token option and click Generate new token.</li> <li>The note field is to remember what this token was created for. Let's give a name, e.g., <code>sourcetree</code>.</li> <li>In the Select scope form, tick every box available and click Generate token.</li> <li>After the generation process, copy the created token to the clipboard and head over to the Sourcetree app.</li> <li>Go to Tools -&gt; Options -&gt; Authentication.</li> <li>If you already have a GitHub account set up with some other access token or authentication info, click on it and choose Edit, otherwise choose Add.</li> <li>Choose the hosting service as GitHub, preferred protocol as HTTPS, and at the Credentials part choose Authentication Basic. Type in your GitHub username, then click on the Refresh Password option.</li> <li>Copy the created token as the password and click OK.</li> <li>After this, cloning and pushing to the repository should work.</li> </ol> </li> <li> <p>If the cloning is successful, PLEASE CHECK THE ASSIGNMENT MILESTONE INSTRUCTIONS! The individual part of your solution should not be committed to the repository <code>master</code> branch. </p> <p>Before you make your first commit, check whether your name and email address are properly configured. You can check this using the following commands.</p> <pre><code>git config user.name\ngit config user.email\n</code></pre> <p>If the values are not correct, set your name and email address with the following commands executed in the repository directory. This will set the values for the repository. (It is recommended to set the email address to the one you use with GitHub.)</p> <pre><code>git config user.name \"John Doe\"\ngit config user.email \"john@doe.org\"\n</code></pre> <p>To avoid having to set this for all repositories, you may want to set the name and email address globally using the <code>--global</code> switch in the commands above.</p> <p>If you are ready with the project initialization as detailed in the actual milestone instruction, create a new branch with the requested name.</p> <p>In GitHub Desktop, use the Branch menu for creating a new one.</p> <p></p> <p>If using the console, use the following command: <code>git checkout -b branchname</code></p> </li> <li> <p>Complete the exercises on this branch. You may have any number of commits and pushes.</p> <p>To commit using GitHub Desktop, first check if you are on the right branch. During the first push, the solution branch needs to be published.</p> <p></p> <p>When adding further commits, verify the branch. You can publish the commit using the Push origin button. The tiny number on this button shows you how many commits need pushing.</p> <p></p> <p>If you are using the console, use the following commands:</p> <pre><code># Check the current branch and the files modified\ngit status\n\n# Prepares all changes for commit\ngit add .\n\n# Commit\ngit commit -m \"commit message\"\n\n# Push the new branch (first time)\ngit push --set-upstream origin solution\n\n# Push further commits\ngit push\n</code></pre> </li> </ol>"},{"location":"english/github/#submitting-the-solution","title":"Submitting the solution","text":"<ol> <li> <p>When you are ready with the exercises, verify on the repository web page that you uploaded everything. You may need to switch branches.</p> <p></p> <p>We recommend that you do not use GitHub web file upload. If something is missing, add it to your local repository and commit and push again.</p> </li> <li> <p>When you are truly ready, open a pull request.</p> <p>This pull request combines all changes you made and shows us the final result. This helps the instructor to evaluate your submission more easily by seeing all changes at once. This pull request means you submit your solution; hence this step cannot be omitted.</p> <p>To open the pull request, you need to go to the repository's GitHub web frontend. If you pushed recently, GitHub will offer you to create the pull request.</p> <p></p> <p>You may also open the pull request from the menu at the top. It is important to specify the correct branches: <code>master</code> is the target into which <code>solution</code> is merged.</p> <p></p> <p>When the pull request is created, you will see a little number \"1\" on the Pull request menu showing you that there is one open item there. YOU ARE NOT FINISHED YET!</p> <p></p> </li> <li> <p>The pull request will trigger a preliminary evaluation. You will see the result of this evaluation as a comment added to the pull request thread.</p> <p>This will be different for each homework. Your code will be executed and tested.</p> <p></p> </li> <li> <p>If you are not satisfied with your work, you can make further changes. You only need to commit and push your changes. Any changes pushed will re-trigger the evaluation of the pull request. We ask that you trigger NO MORE THAN 5 evaluations!</p> <p>If you want to make changes to your submission and not have the re-evaluation run, you should convert the pull request to draft.</p> <p></p> <p>This state means work in progress. You can commit and push freely. These will not trigger any evaluation. Once ready, you must change the state back: go to the bottom of the PR and click \"Ready for review.\" This will set the PR back to its normal state and trigger an automated evaluation.</p> <p></p> <p>Evaluations that fail due to transient errors, such as network problems, are not counted into the 5 evaluations. But if you trigger more evaluation by mistake, or on purpose, it will be sanctioned. You are required to test your solution locally before submitting it.</p> </li> <li> <p>FINALLY, when you are ready, assign the pull request to the instructor. This step is considered as the submission of your work.</p> <p></p> <p>If you have no pull request, or it is not assigned to the instructor, we consider it work in progress and not submitted.</p> <p>Now you are ready. After assigning the pull request, make no further changes. The instructor will evaluate the submission and close the pull request.</p> </li> </ol>"},{"location":"english/github/#questions-and-complaints-regarding-the-final-result","title":"Questions and complaints regarding the final result","text":"<p>If you have questions or concerns regarding the automated evaluation, use the pull request for communication with the instructor by asking questions via comments. To let the instructor know you have questions, please use <code>@siktdavid</code> mention in the PR comment. This will automatically send an email notification.</p> <p></p> <p>Please note that if you think the evaluation made a mistake, you must support your question/complaint with proof (e.g., show how you tested your solution and prove that it worked).</p>"},{"location":"laborok/01-android-hello-world/","title":"Labor 01 - Hello World","text":"<p>Az els\u0151 labor rendhagy\u00f3 a t\u00f6bbihez k\u00e9pest. Itt kev\u00e9s k\u00f3ddal fogunk tal\u00e1lkozni, ink\u00e1bb az alapok \u00e1tn\u00e9z\u00e9s\u00e9n van a hangs\u00faly.</p> <p>A labor c\u00e9lja, hogy bemutassa az Android Studio fejleszt\u0151k\u00f6rnyezetet, az alkalmaz\u00e1sk\u00e9sz\u00edt\u00e9s, illetve a tesztel\u00e9s \u00e9s ford\u00edt\u00e1s folyamat\u00e1t, az alkalmaz\u00e1s fel\u00fcgyelet\u00e9t, valamint az emul\u00e1tor \u00e9s a fejleszt\u0151k\u00f6rnyezet funkci\u00f3it. Ismertetj\u00fck egy Hello World alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9s\u00e9nek m\u00f3dj\u00e1t \u00e9s a debugol\u00e1shoz haszn\u00e1lhat\u00f3 fontosabb eszk\u00f6z\u00f6ket.</p> <p>A labor v\u00e9g\u00e9n egy jegyz\u0151k\u00f6nyvet kell beadni a jegy megszerz\u00e9s\u00e9hez.</p> <p>A m\u00e9r\u00e9s az al\u00e1bbi t\u00e9m\u00e1kat \u00e9rinti:</p> <ul> <li>Az Android platform alapfogalmainak ismerete</li> <li>Android Studio fejleszt\u0151k\u00f6rnyezet alapok</li> <li>Android Emul\u00e1tor tulajdons\u00e1gai</li> <li>Android projekt l\u00e9trehoz\u00e1sa \u00e9s futtat\u00e1sa emul\u00e1toron</li> <li>Manifest \u00e1llom\u00e1ny fel\u00e9p\u00edt\u00e9se</li> <li>Android Profiler</li> <li>Android App Inspection</li> </ul>"},{"location":"laborok/01-android-hello-world/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/01-android-hello-world/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat!</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki!</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz!</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat! A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere!</p> </li> </ol>"},{"location":"laborok/01-android-hello-world/#markdown-fajl-megnyitasa","title":"Markdown f\u00e1jl megnyit\u00e1sa","text":"<p>A feladatok megold\u00e1sa sor\u00e1n a dokument\u00e1ci\u00f3t markdown form\u00e1tumban kell elk\u00e9sz\u00edteni. Az el\u0151bb let\u00f6lt\u00f6tt git repository-t nyisd meg egy markdown kompatibilis szerkeszt\u0151vel! Javasolt a Visual Studio Code haszn\u00e1lata:</p> <ol> <li> <p>Ind\u00edtsd el a VS Code-ot!</p> </li> <li> <p>A File &gt; Open Folder... men\u00fcvel nyisd meg a git repository k\u00f6nyvt\u00e1r\u00e1t!</p> </li> <li> <p>A bal oldali f\u00e1ban keres\u00fck meg a <code>README.md</code> f\u00e1jlt \u00e9s nyissuk meg dupla kattint\u00e1ssal!</p> </li> <li> <p>Ezt a f\u00e1jlt szerkeszd.</p> </li> <li> <p>Ha k\u00e9pet k\u00e9sz\u00edtesz, azt is tedd a repository al\u00e1 a t\u00f6bbi f\u00e1jl mell\u00e9. \u00cdgy relat\u00edv el\u00e9r\u00e9si \u00fatvonallal (f\u00e1jln\u00e9v) fogod tudni hivatkozni.</p> <p>F\u00e1jln\u00e9v: csupa kisbet\u0171 \u00e9kezet n\u00e9lk\u00fcl</p> <p>A k\u00e9pek f\u00e1jlnev\u00e9ben ne haszn\u00e1lj \u00e9kezetes karaktereket, sz\u00f3k\u00f6z\u00f6ket, se kis- \u00e9s nagybet\u0171ket keverve. A k\u00fcl\u00f6nb\u00f6z\u0151 platformok \u00e9s a git elt\u00e9r\u0151en kezelik a f\u00e1jlneveket. A GitHub webes fel\u00fclet\u00e9n akkor fog minden rendben megjelenni, ha csak az angol \u00e1b\u00e9c\u00e9 kisbet\u0171it haszn\u00e1lod a f\u00e1jlnevekben.</p> </li> <li> <p>A k\u00e9nyelmes szerkeszt\u00e9shez nyisd meg az el\u0151n\u00e9zet funkci\u00f3t (Ctrl-K + V).</p> </li> </ol> <p>M\u00e1s szerkeszt\u0151eszk\u00f6z</p> <p>Ha nem szimpatikus ez a szerkeszt\u0151, haszn\u00e1lhatod a GitHub webes fel\u00fclet\u00e9t is a dokument\u00e1ci\u00f3 szerkeszt\u00e9s\u00e9hez, itt is van el\u0151n\u00e9zet. Ekkor a f\u00e1jlok felt\u00f6lt\u00e9se kicsit k\u00f6r\u00fclm\u00e9nyesebb lesz.</p>"},{"location":"laborok/01-android-hello-world/#android-alapok","title":"Android alapok","text":""},{"location":"laborok/01-android-hello-world/#forditas-menete-android-platformon","title":"Ford\u00edt\u00e1s menete Android platformon","text":"<p>A projekt l\u00e9trehoz\u00e1sa ut\u00e1n a forr\u00e1sk\u00f3d az <code>app/src</code> k\u00f6nyvt\u00e1rban tal\u00e1lhat\u00f3. A felhaszn\u00e1l\u00f3i fel\u00fcletet Jetpack Compose haszn\u00e1lat\u00e1val, k\u00f6zvetlen\u00fcl Kotlin k\u00f3dban defini\u00e1ljuk, \u00edgy nincs sz\u00fcks\u00e9g XML \u00e1llom\u00e1nyokra. Az Android projekt ford\u00edt\u00e1s\u00e1nak eredm\u00e9nye egy APK \u00e1llom\u00e1ny, melyet k\u00f6zvetlen\u00fcl telep\u00edthet\u00fcnk mobil eszk\u00f6zre. Jetpack Compose seg\u00edts\u00e9g\u00e9vel k\u00f6nnyed\u00e9n el\u00e9rhetj\u00fck \u00e9s kezelhetj\u00fck a fel\u00fcleti elemeket Kotlin k\u00f3db\u00f3l, megk\u00f6nny\u00edtve ezzel a modern, deklarat\u00edv fel\u00fcletkialak\u00edt\u00e1st.</p> <p></p> <p>Ford\u00edt\u00e1s menete Android platformon</p> <ol> <li> <p>A fejleszt\u0151 elk\u00e9sz\u00edti a Kotlin forr\u00e1sk\u00f3dot, amelyben a felhaszn\u00e1l\u00f3i fel\u00fcletet Jetpack Compose seg\u00edts\u00e9g\u00e9vel defini\u00e1lja. Nincs sz\u00fcks\u00e9g k\u00fcl\u00f6n XML alap\u00fa felhaszn\u00e1l\u00f3i fel\u00fclet le\u00edr\u00e1sra.</p> </li> <li> <p>A fejleszt\u0151k\u00f6rnyezet folyamatosan naprak\u00e9szen tartja a Compose elemekhez kapcsol\u00f3d\u00f3 er\u0151forr\u00e1sokat \u00e9s a sz\u00fcks\u00e9ges build \u00e1llom\u00e1nyokat a fejleszt\u00e9shez \u00e9s a ford\u00edt\u00e1shoz.</p> </li> <li> <p>A fejleszt\u0151 a Manifest \u00e1llom\u00e1nyban be\u00e1ll\u00edtja az alkalmaz\u00e1s hozz\u00e1f\u00e9r\u00e9si jogosults\u00e1gait (pl. Internet el\u00e9r\u00e9s, szenzorok haszn\u00e1lata, stb.), illetve ha fut\u00e1s idej\u0171 jogosults\u00e1gok sz\u00fcks\u00e9gesek, ezt kezeli.</p> </li> <li> <p>A ford\u00edt\u00f3 a forr\u00e1sk\u00f3db\u00f3l, az er\u0151forr\u00e1sokb\u00f3l \u00e9s a k\u00fcls\u0151 k\u00f6nyvt\u00e1rakb\u00f3l el\u0151\u00e1ll\u00edtja az ART virtu\u00e1lis g\u00e9p g\u00e9pi k\u00f3dj\u00e1t.</p> </li> <li> <p>A g\u00e9pi k\u00f3db\u00f3l \u00e9s az er\u0151forr\u00e1sokb\u00f3l el\u0151\u00e1ll a nem al\u00e1\u00edrt APK \u00e1llom\u00e1ny.</p> </li> <li> <p>V\u00e9g\u00fcl a rendszer v\u00e9grehajtja az al\u00e1\u00edr\u00e1st \u00e9s el\u0151\u00e1ll a k\u00e9sz\u00fcl\u00e9kekre telep\u00edthet\u0151, al\u00e1\u00edrt APK.</p> </li> </ol> <p>Az Android Studio a Gradle build rendszert haszn\u00e1lja ezeknek a l\u00e9p\u00e9seknek az elv\u00e9g\u00e9z\u00e9s\u00e9hez.</p> <p>Megjegyz\u00e9sek</p> <ul> <li> <p>A teljes folyamat a fejleszt\u0151i g\u00e9pen megy v\u00e9gbe, a k\u00e9sz\u00fcl\u00e9kekre m\u00e1r csak bin\u00e1ris \u00e1llom\u00e1ny jut el.</p> </li> <li> <p>A k\u00fcls\u0151 k\u00f6nyvt\u00e1rak \u00e1ltal\u00e1ban JAR \u00e1llom\u00e1nyk\u00e9nt, vagy egy m\u00e1sik projekt hozz\u00e1ad\u00e1s\u00e1val illeszthet\u0151k az aktu\u00e1lis projekthez (de ezt nem kell k\u00e9zzel megtenn\u00fcnk, a f\u00fcgg\u0151s\u00e9gek kezel\u00e9s\u00e9ben is a Gradle fog seg\u00edteni).</p> </li> <li> <p>Az APK \u00e1llom\u00e1ny legink\u00e1bb a Java vil\u00e1gban ismert JAR \u00e1llom\u00e1nyokhoz hasonl\u00edthat\u00f3.</p> </li> <li> <p>A Manifest \u00e1llom\u00e1nyban meg kell adni a t\u00e1mogatni k\u00edv\u00e1nt Android verzi\u00f3t, mely felfele kompatibilis az \u00fajabb verzi\u00f3kkal, enn\u00e9l r\u00e9gebbi verzi\u00f3ra azonban az alkalmaz\u00e1s m\u00e1r nem telep\u00edthet\u0151.</p> </li> <li> <p>Az Android folyamatosan friss\u00fcl\u0151 verzi\u00f3ival folyamatosan l\u00e9p\u00e9st kell tartaniuk a fejleszt\u0151knek.</p> </li> <li> <p>Az Android alkalmaz\u00e1sokat tipikusan a Google Play Store-ban szokt\u00e1k publik\u00e1lni, \u00edgy az APK form\u00e1tumban val\u00f3 terjeszt\u00e9s nem annyira elterjedt.</p> </li> </ul>"},{"location":"laborok/01-android-hello-world/#sdk-es-konyvtarai","title":"SDK \u00e9s k\u00f6nyvt\u00e1rai","text":"<p>A developer.android.com/studio oldalr\u00f3l let\u00f6lthet\u0151 az IDE \u00e9s az SDK. Tekints\u00fck \u00e1t ennek a fontosabb mapp\u00e1it, eszk\u00f6zeit!</p> <p></p> <p>SDK szerkezet:</p> <ul> <li><code>build-tools</code>: Ford\u00edt\u00e1st seg\u00edt\u0151 eszk\u00f6z\u00f6k API szintenk\u00e9t: AIDL, AAPT2, stb.</li> <li><code>emulator</code>: Az Android emul\u00e1tor f\u00e1jljainak helye. </li> <li><code>extras</code>: K\u00fcl\u00f6nb\u00f6z\u0151 extra szoftverek helye. Maven repository, support libes anyagok, analytics SDK, Google Android USB driver (amennyiben SDK managerrel ezt is let\u00f6lt\u00f6tt\u00fck) stb.</li> <li><code>platform-tools</code>: Fastboot \u00e9s ADB bin\u00e1risok helye (legt\u00f6bbet haszn\u00e1lt eszk\u00f6z\u00f6k).</li> <li><code>platforms</code>, <code>sources</code>, <code>system-images</code>: Minden API levelhez k\u00fcl\u00f6n almapp\u00e1ban a platform anyagok, forr\u00e1sok, OS image-ek</li> <li><code>tools</code>: Ford\u00edt\u00e1st \u00e9s tesztel\u00e9st seg\u00edt\u0151 eszk\u00f6z\u00f6k, SDK manager, stb.</li> </ul>"},{"location":"laborok/01-android-hello-world/#sdk-manager","title":"SDK manager","text":"<p>Az SDK kezel\u00e9s\u00e9re az SDK managert haszn\u00e1ljuk, ezzel lehet let\u00f6lteni \u00e9s frissen tartani az eszk\u00f6zeinket. Ind\u00edt\u00e1sa az Android Studion kereszt\u00fcl lehets\u00e9ges.</p> <p>Az SDK Manager el\u00e9rhet\u0151 a Tools -&gt; SDK Manager men\u00fcpontb\u00f3l:</p> <p></p> <p>SDK manager fel\u00fclete:</p> <p></p> <p>Megjegyz\u00e9s</p> <p>Kor\u00e1bban l\u00e9tezett egy standalone SDK manager de ennek haszn\u00e1lata m\u00e1ra deprecated lett. Ha online forr\u00e1sokban ilyet l\u00e1tunk ne lep\u0151dj\u00fcnk meg.</p> <p>Ind\u00edtsuk el az AVD managert, \u00e9s vizsg\u00e1ljuk mel, hogy rendelkez\u00e9sre \u00e1ll-e minden, ami az els\u0151 alkalmaz\u00e1sunkhoz kelleni fog.</p>"},{"location":"laborok/01-android-hello-world/#avd-manager","title":"AVD Manager","text":"<p>Az AVD az Android Virtual Device r\u00f6vid\u00edt\u00e9se. Ahogy arr\u00f3l m\u00e1r el\u0151ad\u00e1son is sz\u00f3 esett, nem csak val\u00f3di eszk\u00f6z\u00f6n futtathatjuk a k\u00f3dunkat, hanem emul\u00e1toron is. (Mi is a k\u00fcl\u00f6nbs\u00e9g szimul\u00e1tor \u00e9s emul\u00e1tor k\u00f6z\u00f6tt?) Az AVD ind\u00edt\u00e1sa a fejleszt\u0151i k\u00f6rnyezeten kereszt\u00fcl (Tools-&gt;Device Manager), illetve parancssorb\u00f3l is lehets\u00e9ges, de ennek a haszn\u00e1lat\u00e1ra csak speci\u00e1lis esetekben van sz\u00fcks\u00e9g.</p> <p>Az AVD Manager ikonja:</p> <p></p> <p>Az AVD Manager fel\u00fclete:</p> <p></p> <p>A fenti k\u00e9pen jobb oldalon, a kiny\u00edl\u00f3 panelben, a l\u00e9tez\u0151 virtu\u00e1lis eszk\u00f6z\u00f6k list\u00e1j\u00e1t tal\u00e1ljuk, bal oldalon pedig az \u00fan. eszk\u00f6z defin\u00edci\u00f3k\u00e9t. (Ezt az Add device f\u00fclet,  a Create Virtual Device opci\u00f3val tudjuk megnyitni a jobb oldalon l\u00e9v\u0151 <code>+</code> ikonra kattint\u00e1s ut\u00e1n.) Itt n\u00e9h\u00e1ny el\u0151re elk\u00e9sz\u00edtett sablon \u00e1ll rendelkez\u00e9sre. Magunk is k\u00e9sz\u00edthet\u00fcnk ilyet, ha tipikusan egy adott eszk\u00f6zre szeretn\u00e9nk fejleszteni (pl. Galaxy S24). </p> <p>K\u00e9sz\u00edts\u00fcnk \u00faj emul\u00e1tort! \u00c9rtelemszer\u0171en csak olyan API szint\u0171 eszk\u00f6zt k\u00e9sz\u00edthet\u00fcnk, amilyenek rendelkez\u00e9sre \u00e1llnak az SDK manageren kereszt\u00fcl.</p> <ol> <li>A jobb oldali panelon kattintsunk a fent tal\u00e1lhat\u00f3 Create Virtual Device... gombra!</li> <li>V\u00e1lasszunk az el\u0151re defini\u00e1lt k\u00e9sz\u00fcl\u00e9k sablonokb\u00f3l (pl. Pixel 9 Pro), majd nyomjuk meg a Next gombot.</li> <li>Az eszk\u00f6z konfigur\u00e1ci\u00f3ja:<ul> <li>A virtu\u00e1lis eszk\u00f6z neve legyen p\u00e9ld\u00e1ul <code>Labor_1</code>.</li> <li>D\u00f6nts\u00fck el, hogy milyen Android verzi\u00f3j\u00fa emul\u00e1tort k\u00edv\u00e1nunk haszn\u00e1lni, illetve, hogy milyen szolg\u00e1ltat\u00e1sokra van sz\u00fcks\u00e9g\u00fcnk. CPU/ABI alapvet\u0151en x86_64 legyen, mivel ezekhez kaphatunk hardveres gyors\u00edt\u00e1st is. Itt v\u00e1lasszunk a rendelkez\u00e9sre \u00e1ll\u00f3k k\u00f6z\u00fcl egyet, majd Next.  </li> </ul> </li> <li>Az Additional settings f\u00fcl alatt alatt tov\u00e1bbi opci\u00f3kat tal\u00e1lunk:<ul> <li>Tetsz\u00e9s szerint kapcsoljuk ki vagy be a k\u00e9sz\u00fcl\u00e9k keret\u00e9nek megjelen\u00edt\u00e9s\u00e9t.</li> <li>Kamera opci\u00f3k:<ul> <li>WebcamX, hardveres kamera, ami a sz\u00e1m\u00edt\u00f3g\u00e9pre van csatlakoztatva</li> <li>Emulated, egy egyszer\u0171 szoftveres megold\u00e1s, most legal\u00e1bb az egyik kamera legyen ilyen.</li> <li>VirtualScene, egy kifinomultabb szoftveres megold\u00e1s, amelyben egy 3D vil\u00e1gban mozgathatjuk a kamer\u00e1t.</li> </ul> </li> <li>H\u00e1l\u00f3zat: \u00c1ll\u00edthatjuk a sebess\u00e9g\u00e9t \u00e9s a k\u00e9sleltet\u00e9s\u00e9t is kommunik\u00e1ci\u00f3s technol\u00f3gi\u00e1k szerint.</li> <li>V\u00e1lasszuk ki az alap\u00e9rtelmezett orient\u00e1ci\u00f3t.</li> <li>Default boot: Az Android emul\u00e1tor \u00e1llapot\u00e1r\u00f3l val\u00f3 pillanatk\u00e9p elment\u00e9s\u00e9nek lehet\u0151s\u00e9ge. Ez azt takarja, hogy a virtu\u00e1lis oper\u00e1ci\u00f3s rendszer csak felf\u00fcggeszt\u00e9sre ker\u00fcl az emul\u00e1tor bez\u00e1r\u00e1skor (p\u00e9ld\u00e1ul a megnyitott alkalmaz\u00e1s is megmarad, a teljes \u00e1llapot\u00e1val), \u00e9s Quick esetben a teljes OS ind\u00edt\u00e1sa helyett m\u00e1sodperceken bel\u00fcl elindul az emul\u00e1lt rendszer. Cold esetben viszont minden alkalommal le\u00e1ll\u00edtja \u00e9s \u00fajra ind\u00edtja a virtu\u00e1lis eszk\u00f6z teljes oper\u00e1ci\u00f3s rendszer\u00e9t.</li> <li>Bels\u0151 \u00e9s k\u00fcls\u0151 t\u00e1rhely m\u00e9rete, esetleg konkr\u00e9t image be\u00e1ll\u00edt\u00e1sa a t\u00e1rhely tartalm\u00e1r\u00f3l.</li> <li>Teljes\u00edtm\u00e9ny:<ul> <li>A haszn\u00e1land\u00f3 CPU magok sz\u00e1ma.</li> <li>Grafikai gyors\u00edt\u00e1s t\u00edpusa. (Hardveres gyors\u00edt\u00e1s csak a megfelel\u0151 driver eset\u00e9n \u00e9rhet\u0151 el)     </li> <li>VM heap: az alkalmaz\u00e1sok virtu\u00e1lis g\u00e9p\u00e9nek sz\u00f3l, maradhat az alap\u00e9rt\u00e9k. Tudni kell, hogy k\u00e9sz\u00fcl\u00e9kek eset\u00e9ben gy\u00e1rt\u00f3nk\u00e9nt v\u00e1ltozik.</li> <li>A k\u00edv\u00e1nt bin\u00e1ris interface.</li> </ul> </li> <li>Ha mindent rendben tal\u00e1l az ablak, akkor Finish!</li> </ul> </li> </ol> <p></p> <p>Az Android Virtual Device Manager-ben megjelent az im\u00e9nt l\u00e9trehozott eszk\u00f6z\u00fcnk. Itt lehet\u0151s\u00e9g van a kor\u00e1bban megadott param\u00e9terek szerkeszt\u00e9s\u00e9re, k\u00fcls\u0151 eszk\u00f6z csatlakoztat\u00e1s\u00e1ra, a \"k\u00e9sz\u00fcl\u00e9kr\u0151l\" a felhaszn\u00e1l\u00f3i adatok t\u00f6rl\u00e9s\u00e9re (Wipe Data - Teljes vissza\u00e1ll\u00edt\u00e1s), illetve az emul\u00e1tor p\u00e9ld\u00e1ny duplik\u00e1l\u00e1s\u00e1ra vagy t\u00f6rl\u00e9s\u00e9re.</p> <p>A Play gombbal ind\u00edtsuk el az \u00faj emul\u00e1tort!</p> <p>Emul\u00e1tor probl\u00e9m\u00e1k</p> <p>Amennyiben az emul\u00e1tor nem indulna el, ellen\u0151rizz\u00fck az al\u00e1bbi tippeket:</p> <ul> <li>Van-e el\u00e9g hely (minimum 15-20 GB) a meghajt\u00f3n?</li> <li>Legfrissebb-e az Android Studio \u00e9s az sdk?</li> <li>SDK manager &gt; sdk tools: legrisebb-e az android emulator?</li> <li>Nincs-e az Android Studio vagy az sdk telep\u00edt\u00e9si \u00fatj\u00e1ban sz\u00f3k\u00f6z, \u00e9kezetes bet\u0171 vagy k\u00fcl\u00f6nleges karakter?</li> <li>Pr\u00f3b\u00e1lt\u00e1l-e m\u00e1s API-t, Play Store-ral, a n\u00e9lk\u00fcl?</li> <li>Virtualiz\u00e1ci\u00f3 be van-e kapcsolva/enged\u00e9lyezve van-e a g\u00e9pen?</li> <li>Grafikai gyors\u00edt\u00e1s t\u00edpus\u00e1t pr\u00f3b\u00e1ljuk meg \u00e1t\u00e1ll\u00edtani.</li> </ul> <p>Az elind\u00edtott emul\u00e1toron pr\u00f3b\u00e1ljunk ki n\u00e9h\u00e1ny el\u0151re telep\u00edt\u00e9tt alkalmaz\u00e1st!</p> <p>Megjegyz\u00e9s</p> <p>A gy\u00e1ri emul\u00e1toron k\u00edv\u00fcl t\u00f6bb alternat\u00edva is l\u00e9tezik, mint pl. a Genymotion vagy a BigNox, viszont a Google f\u00e9le emul\u00e1tor a legelterjedtebb, \u00edgy amennyiben ezzel nem jelentkeznek probl\u00e9m\u00e1ink, maradjunk enn\u00e9l.</p> <p>Tesztel\u00e9s c\u00e9lj\u00e1b\u00f3l nagyon j\u00f3l haszn\u00e1lhat\u00f3 az emul\u00e1tor, amely az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 plusz funkci\u00f3kat is adja. Lehet\u0151s\u00e9g van t\u00f6bbek k\u00f6z\u00f6tt egyedi hely be\u00e1ll\u00edt\u00e1s\u00e1ra, bej\u00f6v\u0151 h\u00edv\u00e1s szimul\u00e1l\u00e1s\u00e1ra, virtu\u00e1lisan szenzorok manipul\u00e1l\u00e1s\u00e1ra, stb. A panelt a fut\u00f3 emul\u00e1tor jobb oldal\u00e1n tal\u00e1lhat\u00f3 vez\u00e9rl\u0151 gombok k\u00f6z\u00fcl a ... gombbal lehet megnyitni:</p> <p></p>"},{"location":"laborok/01-android-hello-world/#fejlesztoi-kornyezet","title":"Fejleszt\u0151i k\u00f6rnyezet","text":"<p>Android fejleszt\u00e9sre a labor sor\u00e1n a JetBrains IntelliJ alapjain nyugv\u00f3 Android Studio-t fogjuk haszn\u00e1lni. A Studio-val ismerked\u0151k sz\u00e1m\u00e1ra hasznos funkci\u00f3 a Tip of the day, \u00e9rdemes egyb\u0151l kipr\u00f3b\u00e1lni, megn\u00e9zni az adott funkci\u00f3t. Indul\u00e1skor alap\u00e9rtelmezetten a legut\u00f3bbi projekt ny\u00edlik meg, ha nincs ilyen, vagy ha minden projekt\u00fcnket bez\u00e1rtuk, akkor a nyit\u00f3 k\u00e9perny\u0151. (A legut\u00f3bbi projekt \u00fajranyit\u00e1s\u00e1t a Settings -&gt; Appeareance &amp; Behavior -&gt; System Settings -&gt; Reopen projects on startup opci\u00f3val ki is kapcsolhatjuk.)</p> <p></p>"},{"location":"laborok/01-android-hello-world/#hello-world","title":"Hello World","text":"<p>K\u00e9sz\u00edts\u00fcnk egy egyszer\u0171 Hello World alkalmaz\u00e1st!</p> <ol> <li>Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get.</li> <li>A projekt neve legyen <code>HelloWorld</code>, a kezd\u0151 package <code>hu.bme.aut.mobweb.helloworld</code>, a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl a <code>HelloWorld</code> mappa.</li> <li>Nyelvnek v\u00e1lasszuk a Kotlin-t.</li> <li>A minimum API szint legyen API24: Android 7.0.</li> <li>A <code>Build configuration language</code> Kotlin DSL legyen.</li> </ol> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 HelloWorld k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n!</p> <p>FILE PATH</p> <p>A projektnek az el\u00e9r\u00e9si Path-je csak az angol \u00e1b\u00e9c\u00e9 kis bet\u0171it tartalmazza, ugyanis az Android Studio az \u00e9kezetekre \u00e9s a speci\u00e1lis karakterekre \u00e9rz\u00e9keny!</p>"},{"location":"laborok/01-android-hello-world/#android-studio","title":"Android Studio","text":"<p>Ez a r\u00e9sz azoknak sz\u00f3l, akik kor\u00e1bban m\u00e1r haszn\u00e1ltak m\u00e1s IntelliJ term\u00e9ket vagy az Eclipse nev\u0171 IDE-t, \u00e9s szeretn\u00e9k megismerni a k\u00fcl\u00f6nbs\u00e9geket az Android Studio-hoz k\u00e9pest.</p> <ul> <li> <p>Projektstrukt\u00fara: Az Android Studio Gradle-lel ford\u00edt, \u00e9s m\u00e1s fel\u00e9p\u00edt\u00e9st haszn\u00e1l. Projekten bel\u00fcl:</p> <ul> <li><code>.idea</code>: IDE f\u00e1jlok</li> <li><code>app</code>: forr\u00e1s<ul> <li><code>build</code>: ford\u00edtott \u00e1llom\u00e1nyok</li> <li><code>libs</code>: libraryk</li> <li><code>src</code>: forr\u00e1sk\u00f3d, azon bel\u00fcl is k\u00fcl\u00f6n projekt a tesztnek, \u00e9s azon bel\u00fcl pedig <code>res</code> k\u00f6nyvt\u00e1r, illetve <code>java</code>. Ut\u00f3bbin bel\u00fcl m\u00e1r a csomagok vannak.</li> </ul> </li> <li><code>gradle</code>: Gradle f\u00e1jlok</li> </ul> </li> <li> <p>Hasznos funkci\u00f3k:</p> <ul> <li>IntelliSense, fejlett refaktor\u00e1l\u00e1s t\u00e1mogat\u00e1s</li> <li>Ha egy sorban sz\u00ednre, vagy k\u00e9pi er\u0151forr\u00e1sra hivatkozunk, a sor elej\u00e9re kitesz egy miniat\u0171r v\u00e1ltozatot.</li> <li>Ha k\u00f6zvetve hivatkozott er\u0151forr\u00e1st (ak\u00e1r <code>resources.get...</code>, ak\u00e1r <code>R...</code>) adunk meg, \u00f6sszecsukja a hivatkoz\u00e1st \u00e9s a t\u00e9nyleges \u00e9rt\u00e9ket mutatja. Ha r\u00e1vissz\u00fck az egeret felfedi, ha kattintunk kibontja a hivatkoz\u00e1st.</li> <li>N\u00e9vtelen bels\u0151 oszt\u00e1lyokkal is hasonl\u00f3t tud, jav\u00edtva a k\u00f3d olvashat\u00f3s\u00e1g\u00e1t.</li> <li>K\u00f3dkieg\u00e9sz\u00edt\u00e9sn\u00e9l szabad a keres\u0151, a sz\u00f3t\u00f6red\u00e9ket keresi, nem pedig a sz\u00f3val kezd\u0151d\u0151 lehet\u0151s\u00e9geket (l\u00e1sd k\u00e9pen)</li> <li>V\u00e1ltoz\u00f3n\u00e9v aj\u00e1nl\u00e1s: amikor v\u00e1ltoz\u00f3n\u00e9vre van sz\u00fcks\u00e9g\u00fcnk, nyomjunk Ctrl+Space-t. Ha adottak a k\u00f6r\u00fclm\u00e9nyek, a Studio eg\u00e9sz j\u00f3 neveket tud felaj\u00e1nlani.</li> <li>Szigor\u00fa lint. A Studio megengedi a warningot. Ez\u00e9rt szigor\u00fabb a lint, t\u00f6bb mindenre figyelmeztet (olyan apr\u00f3s\u00e1gra is, hogy egy View egyik oldal\u00e1n van padding, a m\u00e1sikon nincs)</li> <li>Layout szerkeszt\u00e9s. A grafikus layout \u00e9p\u00edt\u00e9s lehets\u00e9ges.</li> <li>CTRL-t lenyomva navig\u00e1lhatunk a k\u00f3dban, pl. oszt\u00e1lyra, met\u00f3dush\u00edv\u00e1sra kattintva. Ezt a navig\u00e1ci\u00f3t (\u00e9s az egyszer\u0171 m\u00e1sik oszt\u00e1lyba kattint\u00e1st is) r\u00f6gz\u00edti, \u00e9s a historyban el\u0151re-h\u00e1tra gombokkal lehet l\u00e9pkedni. Ha van az eger\u00fcnk\u00f6n/billenty\u0171zet\u00fcnk\u00f6n ilyen gomb, \u00e9s netes b\u00f6ng\u00e9sz\u00e9s k\u00f6zben akt\u00edvan haszn\u00e1ljuk, ezt a funkci\u00f3t nagyon hasznosnak fogjuk tal\u00e1lni.</li> <li>Ha t\u00f6bb f\u00e1jl is meg van nyitva egyszerre, k\u00f6nnyen navig\u00e1lhatunk az ALT + BAL/JOBB nyilak seg\u00edts\u00e9g\u00e9vel az f\u00e1jlok k\u00f6z\u00f6tt.</li> </ul> </li> </ul> <p></p>"},{"location":"laborok/01-android-hello-world/#billentyukombinaciok","title":"Billenty\u0171kombin\u00e1ci\u00f3k","text":"<ul> <li>CTRL + ALT + L: K\u00f3dform\u00e1z\u00e1s</li> <li>CTRL + SPACE: K\u00f3dkieg\u00e9sz\u00edt\u00e9s</li> <li>SHIFT + F6 \u00c1tnevez\u00e9s (Mindenhol)</li> <li>F2: A k\u00f6vetkez\u0151 error-ra ugrik. Ha nincs error, akkor warningra.</li> <li>CTRL + Z illetve CTRL + SHIFT + Z: Visszavon\u00e1s \u00e9s M\u00e9gis</li> <li>CTRL + P: Param\u00e9terek mutat\u00e1sa</li> <li>ALT + INSERT: Met\u00f3dus gener\u00e1l\u00e1sa</li> <li>CTRL + O: Met\u00f3dus fel\u00fcldefini\u00e1l\u00e1sa</li> <li>CTRL + F9: Ford\u00edt\u00e1s</li> <li>SHIFT + F10: Ford\u00edt\u00e1s \u00e9s futtat\u00e1s</li> <li>SHIFT SHIFT: Keres\u00e9s mindenhol</li> <li>CTRL + N: Keres\u00e9s oszt\u00e1lyokban</li> <li>CTRL + SHIFT + N: Keres\u00e9s f\u00e1jlokban</li> <li>CTRL + ALT + SHIFT + N: Keres\u00e9s szimb\u00f3lumokban (p\u00e9ld\u00e1ul f\u00fcggv\u00e9nyek, property-k)</li> <li>CTRL + SHIFT + A: Keres\u00e9s a be\u00e1ll\u00edt\u00e1sokban, kiadhat\u00f3 parancsokban.</li> <li>ALT + ENTER hi\u00e1nyz\u00f3 elemek import\u00e1l\u00e1sa/l\u00e9trehoz\u00e1sa.</li> </ul> <p>Tov\u00e1bbi billenty\u0171kombin\u00e1ci\u00f3k.</p> <p>Keres\u00e9s</p> <p>Hogy ha b\u00e1rmikor sz\u00fcks\u00e9g\u00fcnk van valamire, de esetleg nem tal\u00e1ln\u00e1nk a men\u00fcpontok k\u00f6z\u00f6tt, akkor a dupla Shift lenyom\u00e1s\u00e1val (Shift+Shift) kereshet\u00fcnk az Android Studioban (illetve m\u00e1s JetBrains IDE-kben). Pr\u00f3b\u00e1ljuk is ki \u00e9s keress\u00fcnk r\u00e1 a \"Device Manager\" opci\u00f3ra.</p>"},{"location":"laborok/01-android-hello-world/#eszkozok-szerkesztok","title":"Eszk\u00f6z\u00f6k, szerkeszt\u0151k","text":"<p>A View men\u00fc Tool Windows men\u00fcpontj\u00e1ban lehet\u0151s\u00e9g van k\u00fcl\u00f6nb\u00f6z\u0151 ablakok ki- \u00e9s bekapcsol\u00e1s\u00e1ra. Tekints\u00fck \u00e1t az al\u00e1bbi eszk\u00f6z\u00f6ket:</p> <ul> <li>Project</li> <li>Structure</li> <li>TODO</li> <li>Logcat</li> <li>Terminal</li> <li>Event Log</li> <li>Gradle</li> </ul> <p>Lehet\u0151s\u00e9g van felosztani a szerkeszt\u0151ablakot, ehhez kattinsunk egy megnyitott f\u00e1jl tabf\u00fcl\u00e9re jobb gombbal, Split Right/Down vagy csak kattintsunk r\u00e1 hosszan \u00e9s kezdj\u00fck el h\u00fazni a k\u00f3dfel\u00fcletre!</p>"},{"location":"laborok/01-android-hello-world/#hasznos-beallitasok","title":"Hasznos be\u00e1ll\u00edt\u00e1sok","text":"<p>\u00c1ll\u00edtsuk be a k\u00f6vetkez\u0151 hasznos funkci\u00f3kat:</p> <ul> <li>kis- nagybet\u0171 \u00e9rz\u00e9kenys\u00e9g kikapcsol\u00e1sa a k\u00f3dkieg\u00e9sz\u00edt\u0151ben (settingsben keres\u00e9s: Match case)</li> <li>\"laptop m\u00f3d\" ki- \u00e9s bekapcsol\u00e1sa (File -&gt; Power Save Mode)</li> <li>sorsz\u00e1moz\u00e1s bekapcsol\u00e1sa (k\u00f3d melletti r\u00e9szen bal oldalt: jobb eg\u00e9rgomb, Appearance -&gt; Show Line Numbers)</li> </ul>"},{"location":"laborok/01-android-hello-world/#generalhato-elemek","title":"Gener\u00e1lhat\u00f3 elemek","text":"<p>A Studio sok sablont tartalmaz, r\u00f6viden tekints\u00fck \u00e1t a lehet\u0151s\u00e9geket:</p> <ul> <li>Projektf\u00e1ban, projektre jobb gombbal kattintva -&gt; new -&gt; module</li> <li>Projektf\u00e1ban, modulon bel\u00fcl, \"java\"-ra kattintva jobb gombbal -&gt; new</li> <li>Forr\u00e1sk\u00f3dban ALT+INSERT billenty\u0171kombin\u00e1ci\u00f3ra</li> </ul>"},{"location":"laborok/01-android-hello-world/#android-profiler","title":"Android Profiler","text":"<p>A k\u00e9sz\u00fcl\u00e9k er\u0151forr\u00e1shaszn\u00e1lata monitorozhat\u00f3 ezen a fel\u00fcleten, amelyet az eml\u00edtett View -&gt; Tool Windows-b\u00f3l \u00e9rhet\u00fcnk el.</p> <p></p> <p>P\u00e9ld\u00e1ul r\u00e9szletes inform\u00e1ci\u00f3t kaphatunk a processzor \u00e9s a mem\u00f3ria haszn\u00e1lat\u00e1r\u00f3l:</p> <p></p>"},{"location":"laborok/01-android-hello-world/#app-inspection","title":"App Inspection","text":"<p>A k\u00e9sz\u00fcl\u00e9ken debuggolt alkalmaz\u00e1sunk h\u00e1l\u00f3zati forgalm\u00e1t \u00e9s adatb\u00e1zis\u00e1t is meg tudjuk tekinteni. (View -&gt; Tool Windows -&gt; App Inspection)</p> <p></p> <p></p>"},{"location":"laborok/01-android-hello-world/#device-explorer","title":"Device Explorer","text":"<p>A k\u00e9sz\u00fcl\u00e9ken l\u00e9v\u0151 f\u00e1jlrendszert is b\u00f6ng\u00e9szhetj\u00fck. (View -&gt; Tool Windows -&gt; Device Explorer)</p> <p></p>"},{"location":"laborok/01-android-hello-world/#feladatok-10-x-05-pont","title":"Feladatok (10 x 0.5 pont)","text":"<ol> <li>Az \u00faj alkalmaz\u00e1st futtassuk emul\u00e1toron (akinek saj\u00e1t k\u00e9sz\u00fcl\u00e9ke van, az is pr\u00f3b\u00e1lja ki)!</li> <li>Helyezz\u00fcnk breakpointot a k\u00f3dba, \u00e9s ind\u00edtsuk el debug m\u00f3dban az alkalmaz\u00e1st! (\u00c9rdemes megfigyelni, hogy most m\u00e1sik Gradle Task fut a k\u00e9perny\u0151 alj\u00e1n.)</li> <li>Ind\u00edtsunk h\u00edv\u00e1st \u00e9s k\u00fcldj\u00fcnk SMS-t az emul\u00e1torra! Mit tapasztalunk?</li> <li>Ind\u00edtsunk h\u00edv\u00e1st \u00e9s k\u00fcldj\u00fcnk SMS-t az emul\u00e1torr\u00f3l! Mit tapasztalunk?</li> <li>K\u00e9sz\u00edts\u00fcnk egy k\u00e9pet az emul\u00e1torral \u00e9s keress\u00fck meg a f\u00e1jlrendszerben a Device Explorer seg\u00edts\u00e9g\u00e9vel!</li> <li>V\u00e1ltoztassuk meg a k\u00e9sz\u00fcl\u00e9k tart\u00f3zkod\u00e1si hely\u00e9t (GPS) az emul\u00e1tor megfelel\u0151 panelj\u00e9nek seg\u00edts\u00e9g\u00e9vel!</li> <li>Vizsg\u00e1ljuk meg az elind\u00edtott <code>HelloWorld</code> projekt nyitott sz\u00e1lait, mem\u00f3riafoglal\u00e1s\u00e1t!</li> <li>Vizsg\u00e1ljuk meg a Logcat panel tartalm\u00e1t!</li> <li>Vizsg\u00e1ljuk meg az Code -&gt; Inspect code eredm\u00e9ny\u00e9t!</li> <li>Keress\u00fck ki a l\u00e9trehozott <code>HelloWorld</code> projekt mapp\u00e1j\u00e1t \u00e9s a build k\u00f6nyvt\u00e1ron bel\u00fcl vizsg\u00e1lja meg az <code>.apk</code> \u00e1llom\u00e1ny tartalm\u00e1t! Hol tal\u00e1lhat\u00f3 a leford\u00edtott k\u00f3d? </li> </ol> <p>BEADAND\u00d3</p> <p>A labor teljes\u00edt\u00e9s\u00e9hez a fenti feladatokat kell v\u00e9grehajtani \u00e9s az eredm\u00e9nyeket dokument\u00e1lni. Ezt minden egyes feladatn\u00e1l egy k\u00e9perny\u0151k\u00e9ppel \u00e9s r\u00f6vid, n\u00e9h\u00e1ny mondatos magyar\u00e1zattal kell megtenni. A jegyz\u0151k\u00f6nyvet a repository-ban l\u00e9v\u0151 <code>README.md</code> f\u00e1jlban kell elk\u00e9sz\u00edteni.</p> <p>A dokument\u00e1ci\u00f3nak a k\u00e9pekkel egy\u00fctt helyesen kell megjelenni\u00fck a GitHub webes fel\u00fclet\u00e9n is! Ezt ellen\u0151rizd a bead\u00e1s sor\u00e1n: nyisd meg a repository-d webes fel\u00fclet\u00e9t, v\u00e1ltsd \u00e1t a megfelel\u0151 \u00e1gra, \u00e9s a GitHub automatikusan renderelni fogja a README.md f\u00e1jlt a k\u00e9pekkel egy\u00fctt.</p>"},{"location":"laborok/02-android-ui/","title":"Labor 02 - UI - T\u00f6megk\u00f6zleked\u00e9si alkalmaz\u00e1s","text":""},{"location":"laborok/02-android-ui/#bevezeto","title":"Bevezet\u0151","text":"<p>A labor sor\u00e1n egy t\u00f6megk\u00f6zleked\u00e9si v\u00e1llalat sz\u00e1m\u00e1ra meg\u00e1lmodott alkalmaz\u00e1s v\u00e1z\u00e1t k\u00e9sz\u00edtj\u00fck el. Az alkalmaz\u00e1ssal a felhaszn\u00e1l\u00f3k k\u00fcl\u00f6nb\u00f6z\u0151 j\u00e1rm\u0171vekre v\u00e1s\u00e1rolhatnak majd b\u00e9rleteket. Az \u00fczleti logik\u00e1t (az authentik\u00e1ci\u00f3t, a bevitt adatok ellen\u0151rz\u00e9s\u00e9t, a fizet\u00e9s lebonyol\u00edt\u00e1s\u00e1t) egyel\u0151re csak szimul\u00e1lni fogjuk, a labor f\u00f3kusza a fel\u00fcletek \u00e9s a k\u00f6zt\u00fck val\u00f3 navig\u00e1ci\u00f3 elk\u00e9sz\u00edt\u00e9se lesz.</p> <p> </p> <p>IMSc</p> <p>A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151.</p>"},{"location":"laborok/02-android-ui/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/02-android-ui/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol> <p>Android, Java, Kotlin</p> <p>Az Android hagyom\u00e1nyosan Java nyelven volt fejleszthet\u0151, azonban az ut\u00f3bbi \u00e9vekben a Google \u00e1t\u00e1llt a Kotlin nyelvre. Ez egy sokkal modernebb nyelv, mint a Java, sok olyan nyelvi elemet ad, amit k\u00e9nyelmes haszn\u00e1lni, valamint \u00faj nyelvi szab\u00e1lyokat, amikkel p\u00e9ld\u00e1ul elker\u00fclhet\u0151ek a Java nyelven gyakori <code>NullPointerException</code> jelleg\u0171 hib\u00e1k.</p> <p>M\u00e1sr\u00e9szr\u0151l viszont a nyelv sok mindenben t\u00e9r el a hagyom\u00e1nyosan C jelleg\u0171 szintaktik\u00e1t k\u00f6vet\u0151 nyelvekt\u0151l, amit majd l\u00e1tni is fogunk. A labor el\u0151tt \u00e9rdemes megismerkedni a nyelvvel, egyr\u00e9szt a fent l\u00e1that\u00f3 linken, m\u00e1sr\u00e9szt ezt az \u00f6sszefoglal\u00f3 cikket \u00e1tolvasva.</p>"},{"location":"laborok/02-android-ui/#projekt-letrehozasa","title":"Projekt l\u00e9trehoz\u00e1sa","text":"<p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd:</p> <ol> <li>Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get.</li> <li>A projekt neve legyen <code>PublicTransport</code>, a kezd\u0151 package <code>hu.bme.aut.android.publictransport</code>, a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl a PublicTransport mappa.</li> <li>Nyelvnek v\u00e1lasszuk a Kotlin-t.</li> <li>A minimum API szint legyen API24: Android 7.0.</li> <li>A Build configuration language Kotlin DSL legyen.</li> </ol> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 PublicTransport k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p> <p>A projekt l\u00e9trehoz\u00e1sakor, a ford\u00edt\u00f3 keretrendszernek rengeteg f\u00fcgg\u0151s\u00e9get kell let\u00f6ltenie. Am\u00edg ez nem t\u00f6rt\u00e9nt meg, addig a projektben neh\u00e9zkes navig\u00e1lni, hi\u00e1nyzik a k\u00f3dkieg\u00e9sz\u00edt\u00e9s, stb... \u00c9ppen ez\u00e9rt ezt tan\u00e1csos kiv\u00e1rni, azonban ez ak\u00e1r 5 percet is ig\u00e9nybe vehet az els\u0151 alkalommal! Az ablak alj\u00e1n l\u00e1that\u00f3 inform\u00e1ci\u00f3s s\u00e1vot kell figyelni.</p> <p>L\u00e1thatjuk, hogy l\u00e9trej\u00f6tt egy projekt, abban egy Activity, <code>MainActivity</code> n\u00e9ven. Ez be is lett \u00edrva automatikusan a Manifest f\u00e1jlba mint Activity komponens.</p> <p>K\u00f6vetkez\u0151 l\u00e9p\u00e9sk\u00e9nt vagy\u00fck fel a sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9geket a projektbe! Ehhez nyissuk meg a</p> <ul> <li>Modul szint\u0171 <code>build.gradle.kts</code> f\u00e1jlt (app -&gt; build.gradle.kts)</li> <li>Illetve a <code>libs.version.toml</code> f\u00e1jlt (gradle -&gt; libs.versions.toml)</li> </ul> <p>El\u0151sz\u00f6r m\u00e1soljuk be a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9geket a <code>libs.version.toml</code> verzi\u00f3 katal\u00f3gus f\u00e1jlba:</p> <pre><code>[versions]\nagp = \"8.12.3\"\nkotlin = \"2.2.20\"\ncoreKtx = \"1.17.0\"\njunit = \"4.13.2\"\njunitVersion = \"1.3.0\"\nespressoCore = \"3.7.0\"\nlifecycleRuntimeKtx = \"2.9.3\"\nactivityCompose = \"1.12.0-alpha08\"\ncomposeBom = \"2025.09.00\"\n\ncoreSplashscreen = \"1.0.1\"\nnav3Core = \"1.0.0-alpha09\"\nkotlinSerialization = \"2.2.20\"\nkotlinxSerializationCore = \"1.9.0\"\n\n\n[libraries]\n...\nandroidx-core-splashscreen = { module = \"androidx.core:core-splashscreen\", version.ref = \"coreSplashscreen\" }\nandroidx-navigation3-runtime = { module = \"androidx.navigation3:navigation3-runtime\", version.ref = \"nav3Core\" }\nandroidx-navigation3-ui = { module = \"androidx.navigation3:navigation3-ui\", version.ref = \"nav3Core\" }\nkotlinx-serialization-core = { module = \"org.jetbrains.kotlinx:kotlinx-serialization-core\", version.ref = \"kotlinxSerializationCore\" }\n\n\n[plugins]\njetbrains-kotlin-serialization = { id = \"org.jetbrains.kotlin.plugin.serialization\", version.ref = \"kotlinSerialization\"}\n</code></pre> <p>Itt a <code>[versions]</code> tag-en bel\u00fcl adhatunk egy v\u00e1ltoz\u00f3 nevet, majd egy verzi\u00f3 \u00e9rt\u00e9ket, amit majd a k\u00f6vetkez\u0151 l\u00e9p\u00e9sben \u00e1tadunk a <code>version.ref</code>-nek. Ez mondja meg, hogy melyik verzi\u00f3t haszn\u00e1lja az adott modulb\u00f3l. A <code>[libraries]</code> tag-en bel\u00fcl defini\u00e1lunk szint\u00e9n egy v\u00e1ltoz\u00f3t <code>androidx-navigation-compose</code> n\u00e9ven, amit majd k\u00e9s\u0151bb haszn\u00e1lunk fel a <code>build.gradle.kts</code> f\u00e1jlban. Ennek megadjuk, hogy melyik modul-t szeretn\u00e9nk beletenni a projektbe, valamint egy verzi\u00f3 sz\u00e1mot, amit kor\u00e1bban m\u00e1r defini\u00e1ltunk. </p> <p>Hogy ha ezzel megvagyunk, nyissuk meg a <code>build.gradle.kts</code> f\u00e1jlt, \u00e9s adjuk hozz\u00e1 az im\u00e9nt felvett modulokat a <code>dependencies</code> tag-en bel\u00fclre:</p> <pre><code>dependencies {\n    ...\n    implementation(libs.androidx.core.splashscreen)\n    implementation(libs.androidx.navigation3.ui)\n    implementation(libs.androidx.navigation3.runtime)\n    implementation(libs.kotlinx.serialization.core)\n}\n</code></pre> <p>Itt az <code>implementation</code> f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel tudunk \u00faj f\u00fcgg\u0151s\u00e9get felvenni a projektbe, \u00e9s ezen bel\u00fcl meg kell adnunk a modul nev\u00e9t, amit m\u00e1r kor\u00e1bban defini\u00e1ltunk a <code>libs.version.toml</code>-ban. Ezt a k\u00f6vetkez\u0151 k\u00e9ppen tehetj\u00fck meg: </p> <ul> <li>megadjuk a f\u00e1jl nev\u00e9t, jelen esetben <code>libs</code> </li> <li>majd ezut\u00e1n megadjuk annak a v\u00e1ltoz\u00f3nak a nev\u00e9t amihez hozz\u00e1rendelt\u00fck kor\u00e1bban a modulunkat.</li> </ul> <p>V\u00e9gezet\u00fcl kapcsoljuk be az al\u00e1bbi <code>plugint</code> a <code>build.gradle.kts</code> f\u00e1j tetej\u00e9n:</p> <pre><code>plugins {\n...\nalias(libs.plugins.jetbrains.kotlin.serialization)\n}\n</code></pre> <p>Hogy ha ezzel is megvagyunk kattintsunk a <code>Sync Now</code> gombra a jobb f\u00f6ls\u0151 sarokban, \u00e9s v\u00e1rjuk meg m\u00edg let\u00f6lti a sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9geket.</p> <p>Sync Now</p> <p>Figyelem ha ezt a l\u00e9p\u00e9st kihagyjuk, akkor az Android Studio nem fogja megtal\u00e1lni a sz\u00fcks\u00e9ges elemeket, \u00e9s ez k\u00e9s\u0151bb gondot okozhat!</p>"},{"location":"laborok/02-android-ui/#splash-kepernyo-05-pont","title":"Splash k\u00e9perny\u0151 (0.5 pont)","text":"<p>Miut\u00e1n a felhaszn\u00e1l\u00f3 elind\u00edtotta az alkalmaz\u00e1st, egy \"\u00fcdv\u00f6zl\u0151/splash\" k\u00e9perny\u0151vel szeretn\u00e9nk k\u00f6sz\u00f6nteni. Ez egy eleg\u00e1ns megold\u00e1s arra, hogy az alkalmaz\u00e1s bet\u00f6lt\u00e9s\u00e9ig ne egy egysz\u00edn\u0171 k\u00e9perny\u0151 legyen a felhaszn\u00e1l\u00f3 el\u0151tt, hanem jelen esetben egy alkalmaz\u00e1s logo, egy tetsz\u0151leges h\u00e1tt\u00e9r sz\u00ednnel.</p> <p> </p> Splash scheen Android 12 (API 31) alatt <p>(A sz\u00fcks\u00e9ges f\u00e1jl innen el\u00e9rhet\u0151)</p> <p>Hozzunk l\u00e9tre egy \u00faj XML f\u00e1jlt a <code>drawable</code> mapp\u00e1ban <code>splash_background.xml</code> n\u00e9ven. Ez lesz a splash k\u00e9perny\u0151nk\u00f6n megjelen\u0151 grafika. A tartalma az al\u00e1bbi legyen:</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\"&gt;\n\n&lt;item&gt;\n&lt;bitmap\nandroid:gravity=\"fill_horizontal|clip_vertical\"\nandroid:src=\"@drawable/splash_image\"/&gt;\n&lt;/item&gt;\n\n&lt;/layer-list&gt;\n</code></pre> <p>Jelen esetben egyetlen k\u00e9pet tesz\u00fcnk ide, de tov\u00e1bbi <code>item</code>-ek felv\u00e9tel\u00e9vel komplexebb dolgokat is \u00f6ssze\u00e1ll\u00edthatn\u00e1nk itt. Tipikus megold\u00e1s p\u00e9ld\u00e1ul egy egysz\u00edn\u0171 h\u00e1tt\u00e9r be\u00e1ll\u00edt\u00e1sa, amin az alkalmaz\u00e1s ikonja l\u00e1tszik.</p> <p>Nyissuk meg a <code>values/themes.xml</code> f\u00e1jlt. Ez defini\u00e1lja az alkalmaz\u00e1sban haszn\u00e1lt k\u00fcl\u00f6nb\u00f6z\u0151 t\u00e9m\u00e1kat. A splash k\u00e9perny\u0151h\u00f6z egy \u00faj t\u00e9m\u00e1t fogunk l\u00e9trehozni, amelyben az el\u0151bb l\u00e9trehozott drawable-t \u00e1ll\u00edtjuk be az alkalmaz\u00e1sablakunk h\u00e1tter\u00e9nek (mivel ez l\u00e1tszik val\u00f3j\u00e1ban, am\u00edg nem t\u00f6lt\u00f6tt be a UI t\u00f6bbi r\u00e9sze). Ezt \u00edgy tehetj\u00fck meg:</p> <pre><code>&lt;style name=\"SplashTheme\" parent=\"Theme.AppCompat.NoActionBar\"&gt;\n&lt;item name=\"android:windowBackground\"&gt;@drawable/splash_background&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>A fenti t\u00e9m\u00e1t illessz\u00fck be a <code>night</code> min\u0151s\u00edt\u0151vel ell\u00e1tott <code>themes.xml</code> f\u00e1jlba is.</p> <p>A t\u00e9ma haszn\u00e1lat\u00e1hoz az alkalmaz\u00e1sunk manifest f\u00e1jlj\u00e1t (<code>AndroidManifest.xml</code>) kell m\u00f3dos\u00edtanunk. Ezt megnyitva l\u00e1thatjuk, hogy jelenleg a teljes alkalmaz\u00e1s az <code>AppTheme</code> nev\u0171 t\u00e9m\u00e1t haszn\u00e1lja.</p> <pre><code>&lt;application\n...\nandroid:theme=\"@style/Theme.PublicTransport\" &gt;\n</code></pre> <p>Mi ezt nem akarjuk megv\u00e1ltoztatni, hanem csak a <code>LoginActivity</code>-nek akarunk egy \u00faj t\u00e9m\u00e1t adni. Ezt \u00edgy tehetj\u00fck meg:</p> <pre><code>&lt;activity\nandroid:name=\".LoginActivity\"\nandroid:theme=\"@style/SplashTheme\"&gt;\n...\n&lt;/activity&gt;\n</code></pre> <p>Mivel a bet\u00f6lt\u00e9s ut\u00e1n m\u00e1r nem lesz sz\u00fcks\u00e9g\u00fcnk erre a h\u00e1tt\u00e9rre, a <code>LoginActivity.kt</code> f\u00e1jlban a bet\u00f6lt\u00e9s befejezt\u00e9vel vissza\u00e1ll\u00edthatjuk az eredeti t\u00e9m\u00e1t, amely feh\u00e9r h\u00e1tt\u00e9rrel rendelkezik. Ezt az <code>onCreate</code> f\u00fcggv\u00e9ny elej\u00e9n tegy\u00fck meg, m\u00e9g a <code>super</code> h\u00edv\u00e1s el\u0151tt:</p> <pre><code>override fun onCreate(savedInstanceState: Bundle?) {\nsetTheme(R.style.Theme_PublicTransport)\n...\n}\n</code></pre> <p>Most m\u00e1r futtathatjuk az alkalmaz\u00e1st, \u00e9s bet\u00f6lt\u00e9s k\u00f6zben l\u00e1tnunk kell a berakott k\u00e9pet. A splash k\u00e9perny\u0151 \u00e1ltal\u00e1ban akkor hasznos, ha az alkalmaz\u00e1s inicializ\u00e1l\u00e1sa sok\u00e1ig tart. Mivel a mostani alkalmaz\u00e1sunk m\u00e9g nagyon gyorsan indul el, szimul\u00e1lhatunk egy kis t\u00f6lt\u00e9si id\u0151t az al\u00e1bbi m\u00f3don:</p> <pre><code>override fun onCreate(savedInstanceState: Bundle?) {\ntry {\nThread.sleep(1000)\n} catch (e: InterruptedException) {\ne.printStackTrace()\n}\nsetTheme(R.style.Theme_PublicTransport);\n...\n}\n</code></pre> <p>API 31 felett bevezet\u00e9sre ker\u00fclt egy Splash Screen API, most ezt fogjuk haszn\u00e1lni. Ehhez m\u00e1r kor\u00e1bban felvett\u00fck a sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9get a <code>build.gradle.kts</code> f\u00e1jlba.</p> <p>K\u00e9sz\u00edts\u00fcnk el egy tetsz\u0151leges ikont, amit majd fel fogunk haszn\u00e1lni a splash k\u00e9perny\u0151nk k\u00f6zep\u00e9n. Ehhez az Android Studio be\u00e9p\u00edtett <code>Asset Studio</code> eszk\u00f6z\u00e9t fogjuk haszn\u00e1lni. Bal oldalon a Project f\u00fcl alatt nyissuk meg a <code>Resource Manager</code>-t, majd nyomjunk a + gombra, ott pedig az <code>Image Asset</code> lehet\u0151s\u00e9gre.</p> <ol> <li>Itt Launcher Icon-t szeretn\u00e9nk majd gener\u00e1lni, teh\u00e1t v\u00e1lasszuk azt.</li> <li>A neve legyen ic_transport</li> <li>Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most Clip Art-b\u00f3l fogjuk elk\u00e9sz\u00edteni az ikonunkat, \u00edgy v\u00e1lasszuk azt, majd az alatta l\u00e9v\u0151 gombn\u00e1l v\u00e1lasszunk egy szimpatikusat (pl. a bus keres\u00e9si sz\u00f3val).</li> <li>Ez ut\u00e1n v\u00e1lasszunk egy szimpatikus sz\u00ednt.</li> <li>Ha akarunk, \u00e1ll\u00edthatunk a m\u00e9retez\u00e9sen is.</li> <li>A <code>Background Layer</code> f\u00fcl\u00f6n be\u00e1ll\u00edthatjuk a h\u00e1tt\u00e9r sz\u00edn\u00e9t is.</li> <li>A be\u00e1ll\u00edt\u00e1sokn\u00e1l \u00e1ll\u00edtsuk \u00e1t, hogy az ikon PNG form\u00e1ban k\u00e9sz\u00fclj\u00f6n el.</li> <li>Ezut\u00e1n nyomjunk a Next majd a Finish gombra.</li> </ol> <p> </p> <p>L\u00e1thatjuk, hogy t\u00f6bb f\u00e9le ikon k\u00e9sz\u00fclt, t\u00f6bb f\u00e9le m\u00e9retben. Ezekb\u0151l a rendszer a konfigur\u00e1ci\u00f3 f\u00fcggv\u00e9ny\u00e9ben fog v\u00e1lasztani.</p> <p>A splash k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9s\u00e9hez egy \u00faj st\u00edlust kell defini\u00e1lnunk a <code>themes.xml</code> f\u00e1jlban. Vegy\u00fck fel az al\u00e1bbi k\u00f3dr\u00e9szletet a megl\u00e9v\u0151 st\u00edlus al\u00e1. (A t\u00e1rgy keretein bel\u00fcl nagyon kev\u00e9s XML k\u00f3ddal fogunk foglalkozni.)</p> <pre><code>&lt;style name=\"Theme.PublicTransport.Starting\" parent=\"Theme.SplashScreen\"&gt;\n&lt;item name=\"windowSplashScreenBackground\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"windowSplashScreenAnimatedIcon\"&gt;@drawable/ic_transport_foreground&lt;/item&gt;\n&lt;item name=\"android:windowSplashScreenIconBackgroundColor\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"postSplashScreenTheme\"&gt;@style/Theme.PublicTransport&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> <p>Az \u00faj st\u00edlusunk a <code>Theme.PublicTransport.Starting</code> nevet viseli, \u00e9s a <code>Theme.SplashScreen</code> t\u00e9m\u00e1b\u00f3l sz\u00e1rmazik. Ezen k\u00edv\u00fcl be\u00e1ll\u00edtottuk benne, hogy</p> <ul> <li><code>windowSplashScreenBackground</code>: a splash k\u00e9perny\u0151 h\u00e1ttere (term\u00e9szetesen m\u00e1s is v\u00e1laszthat\u00f3),</li> <li><code>windowSplashScreenAnimatedIcon</code>: a k\u00f6z\u00e9pen megjelen\u0151 ikon a saj\u00e1t ikonunk legyen, annak is csak az el\u0151tere,</li> <li><code>android:windowSplashScreenIconBackgroundColor</code>: az ikonunk m\u00f6g\u00f6tt milyen h\u00e1tt\u00e9r legyen (ez is szem\u00e9lyre szabhat\u00f3 m\u00e1s sz\u00ednnel),</li> <li><code>postSplashScreenTheme</code>: a splash screen ut\u00e1n milyen st\u00edlusra kell visszav\u00e1ltania az alkalmaz\u00e1snak.</li> </ul> <p>Note</p> <p>A Splash Screen API enn\u00e9l j\u00f3val t\u00f6bbet tud, ak\u00e1r anim\u00e1lhatjuk is a megjelen\u00edtett k\u00e9pet, azonban ez sajnos t\u00falmutat a labor keretein.</p> <p>Most m\u00e1r, hogy bekonfigur\u00e1ltuk a splash k\u00e9perny\u0151nket, m\u00e1r csak be kell \u00e1ll\u00edtanunk a haszn\u00e1lat\u00e1t. Ehhez el\u0151sz\u00f6r az im\u00e9nt l\u00e9trehozott st\u00edlust kell alkalmaznunk <code>MainActivity</code>-re a <code>AndroidManifest.xml</code>-ben.</p> <pre><code>&lt;activity\nandroid:theme=\"@style/Theme.PublicTransport.Starting\"\nandroid:name=\".MainActivity\"\nandroid:exported=\"true\"&gt;\n...\n&lt;/activity&gt;\n</code></pre> <p>Ezut\u00e1n \u00e1ll\u00edtsuk be az alkalmaz\u00e1sunk ikonj\u00e1t is:</p> <pre><code>&lt;application\n...\nandroid:icon=\"@mipmap/ic_transport\"\nandroid:roundIcon=\"@mipmap/ic_transport_round\"&gt;\n...\n&lt;/application&gt;\n</code></pre> <p>Splash Screen-navig\u00e1ci\u00f3val</p> <p>A Splash Screent a navig\u00e1ci\u00f3 seg\u00edts\u00e9g\u00e9vel is meg lehet oldani, err\u0151l a labor v\u00e9g\u00e9n egy ismertet\u0151 feladat fog seg\u00edts\u00e9get mutatni. (Ez nem sz\u00fcks\u00e9ges a labor megszerz\u00e9s\u00e9hez, a feladat n\u00e9lk\u00fcl is el lehet \u00e9rni a maxim\u00e1lis pontot, azonban az \u00e9rdekess\u00e9g kedv\u00e9\u00e9rt \u00e9rdemes v\u00e9gig csin\u00e1lni.)</p> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1sunkat!</p> <p>BEADAND\u00d3 (0.5 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a splash k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/02-android-ui/#login-kepernyo-05-pont","title":"Login k\u00e9perny\u0151 (0.5 pont)","text":"<p>Most m\u00e1r elk\u00e9sz\u00edthetj\u00fck a login k\u00e9perny\u0151t. A felhaszn\u00e1l\u00f3t\u00f3l egy e-mail c\u00edmet, illetve egy sz\u00e1mokb\u00f3l \u00e1ll\u00f3 jelsz\u00f3t fogunk bek\u00e9rni, \u00e9s egyel\u0151re csak azt fogjuk ellen\u0151rizni, hogy be\u00edrt-e valamit a mez\u0151be.</p> <p> </p>"},{"location":"laborok/02-android-ui/#felulet","title":"Fel\u00fclet","text":"<p>El\u0151sz\u00f6r hozzunk l\u00e9tre egy \u00faj Packaget <code>screen</code> n\u00e9ven a projekt mapp\u00e1ban, majd ezen bel\u00fcl hozzunk l\u00e9tre egy \u00faj Kotlin Filet <code>LoginScreen</code> n\u00e9ven. Ezen a k\u00e9perny\u0151n fognak elhelyezkedni a sz\u00fcks\u00e9ges feliratok, gombok, \u00e9s beviteli mez\u0151k. Ehhez haszn\u00e1ljuk fel az al\u00e1bbi k\u00f3dot:</p> <pre><code>@Composable\nfun LoginScreen(\nonSuccess: () -&gt; Unit\n) {\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n.padding(16.dp),\nverticalArrangement = Arrangement.Center,\nhorizontalAlignment = Alignment.CenterHorizontally\n) {\n\n//TODO Logo\n\n//TODO Header Text\n\n\n//TODO Email Field\n\n\n//TODO Password Field\n\n\n//TODO Login Button\n\n}\n}\n\n\nprivate fun isEmailValid(email: String) = email.isEmpty()\n\nprivate fun isPasswordValid(password: String) = password.isEmpty()\n\n@Preview\n@Composable\nfun PreviewLoginScreen() {\nLoginScreen(onSuccess = {})\n}\n</code></pre> <p>Hogy ha megvan a <code>LoginScreen</code> v\u00e1za, akkor kezdj\u00fck el belepakolni az egyes elemeket. (Image, Text, TextField, Button)</p> <p>Kezdj\u00fck az <code>Image</code> Composable-lel. Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt az alkalmaz\u00e1s ikonj\u00e1t fogjuk betenni a bejelentkez\u0151 k\u00e9perny\u0151 tetej\u00e9re diz\u00e1jn elemk\u00e9nt.</p> <pre><code>//Logo\nImage(\npainter = painterResource(id = R.mipmap.ic_transport_round),\ncontentDescription = \"Logo\",\nmodifier = Modifier.size(160.dp)\n)\n</code></pre> <p>Mivel az <code>Image</code> Composable csak vektoros er\u0151forr\u00e1st fogad el, els\u0151re hib\u00e1t kapunk. Ezt most a legegyszer\u0171bben \u00fagy oldhatjuk meg, ha az ic_transport \u00e9s az ic_transport_round er\u0151forr\u00e1soknak kir\u00f6r\u00f6lj\u00fck az xml-es verzi\u00f3it, \u00e9s csak a png-ket hagyjuk meg. Innen m\u00e1r az alkalmaz\u00e1s buildel\u00e9se ut\u00e1n megjelenik a fel\u00fclet\u00fcnk el\u0151n\u00e9zete is.</p> <p>Folytassuk a <code>Text</code> Composable-lel. Ez egy \u00fczenetk\u00e9nt fog szolg\u00e1lni a form tetej\u00e9n <code>\"Please enter your credentials!\"</code> felirattal.</p> <pre><code>//Header Text\nText(\nmodifier = Modifier.padding(16.dp),\ntext = \"Please enter your credentials!\"\n)\n</code></pre> <p>K\u00f6vetkez\u0151nek hozzuk l\u00e9tre a k\u00e9t <code>TextField</code>-et, amit egy <code>OutlinedTextField</code> Composable seg\u00edts\u00e9g\u00e9vel fogunk megval\u00f3s\u00edtani. Itt sz\u00fcks\u00e9g lesz egy\u00e9b v\u00e1ltoz\u00f3kra is.</p> <p>Email Field</p> <pre><code>//Email Field\nvar email by remember { mutableStateOf(\"\") }\nvar emailError by remember { mutableStateOf(false) }\n\nOutlinedTextField(\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp),\nlabel = { Text(\"Email\") },\nvalue = email,\nonValueChange =\n{\nemail = it\nemailError = isEmailValid(email)\n},\nkeyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Email),\nisError = emailError,\ntrailingIcon = {\nif (emailError) {\nIcon(Icons.Filled.Warning, contentDescription = \"Error\", tint = Color.Red)\n}\n},\nsupportingText = {\nif (emailError) {\nText(\"Please enter your e-mail address!\", color = Color.Red)\n}\n}\n\n)\n</code></pre> <p>Password Field</p> <pre><code>//Password Field\nvar password by remember { mutableStateOf(\"\") }\nvar passwordError by remember { mutableStateOf(false) }\n\nOutlinedTextField(\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp),\nlabel = { Text(\"Password\") },\nvalue = password,\nonValueChange =\n{\npassword = it\npasswordError = isPasswordValid(it)\n},\nvisualTransformation = PasswordVisualTransformation(),\nkeyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Decimal),\nisError = passwordError,\ntrailingIcon = {\nif (passwordError) {\nIcon(Icons.Filled.Warning, contentDescription = \"Error\", tint = Color.Red)\n}\n},\nsupportingText = {\nif (passwordError) {\nText(\"Please enter your password!\", color = Color.Red)\n}\n}\n)\n</code></pre> <p>Az <code>OutlinedTextField</code> fent haszn\u00e1lt haszn\u00e1lt param\u00e9terei:</p> <ol> <li>label: Ennek a seg\u00edts\u00e9g\u00e9vel tudjuk megadni azt a feliratot ami szerepelni fog az \u00fcres TextFieldben. Hogy ha \u00edrtunk m\u00e1r bele, akkor az <code>OutlinedTextField</code>-nek k\u00f6sz\u00f6nhet\u0151en a Label sz\u00f6veg, felcs\u00faszik a bal f\u00f6ls\u0151 sarokba.</li> <li>value: Ennek a pram\u00e9ternek adjuk \u00e1t, a be\u00edrt \u00e9rt\u00e9ket.</li> <li>onValueChange: Ez egy lambda, aminek a seg\u00edts\u00e9g\u00e9vel adunk \u00fajra \u00e9s \u00fajra \u00e9rt\u00e9ket annak a v\u00e1ltoz\u00f3nak amit \u00e1tadtunk a value param\u00e9ternek. Minden egyes v\u00e1ltoz\u00e1sn\u00e1l friss\u00fcl ez a param\u00e9ter a <code>remember</code>-nek k\u00f6sz\u00f6nhet\u0151en.</li> <li>visualTransformation: Ennek a seg\u00edt\u00e9s\u00e9gvel tudjuk v\u00e1ltoztatni, hogy Password vagy sima Input field legyen.</li> <li>keyboardOptions: Ezzel a param\u00e9terrel be tudjuk \u00e1ll\u00edtani, \u00e9s korl\u00e1tozni a felhaszn\u00e1l\u00f3t, hogy milyen adatot tudjon bele\u00edrni a beviteli mez\u0151be.</li> <li>isError: Ennek szint\u00e9n egy v\u00e1ltoz\u00f3t adunk \u00e1t, amely minden egyes alkalommal friss\u00fcl, hogy ha \u00fcres a beviteli mez\u0151. Ez az\u00e9rt lesz hasznos, ugyanis a feladatban azt szeretn\u00e9nk el\u00e9rni, hogy egy \u00fczenetet \u00edrjon ki a TextField, hogy ha \u00fcresen szeretn\u00e9nk bejelentkezni.</li> <li>trailingIcon: Itt be tudjuk \u00e1ll\u00edtani azt az Icon-t amit l\u00e1tni szeretn\u00e9nk a TextField jobb oldal\u00e1n.</li> <li>supportingText: Ez a param\u00e9ter felel az\u00e9rt, hogy a TextField alatt meg tudjunk jelen\u00edteni sz\u00f6veget.</li> </ol> <p>V\u00e9g\u00fcl csin\u00e1ljuk meg az utols\u00f3 elemet is, ez pedig a gomb lesz, amely a bejelentkez\u00e9s\u00e9rt fog felelni.</p> <pre><code>//Login Button\nButton(\nonClick = {\nif (isEmailValid(email)) {\nemailError = true\n} else if (isPasswordValid(password)) {\npasswordError = true\n} else {\nonSuccess()\n}\n},\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp)\n) {\nText(\"Login\")\n}\n</code></pre> <p>string er\u0151forr\u00e1sok haszn\u00e1lata</p> <p>\u00c9rdemes a Stringeket kiszervezni a <code>./values/strings.xml</code> f\u00e1jlba, \u00edgy lokaliz\u00e1lhatjuk az alkalmaz\u00e1sunkat <code>er\u0151forr\u00e1smin\u0151s\u00edt\u0151k</code> seg\u00edts\u00e9g\u00e9vel. Ezt az ALT + ENTER billenty\u0171kombin\u00e1ci\u00f3 seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg, hogy ha a string-re kattintunk, vagy ak\u00e1r k\u00e9zileg is felvehetj\u00fck a <code>strings.xml</code>-ben <pre><code>&lt;string name=\"label_email\"&gt;Email&lt;/string&gt;\n</code></pre></p> <p>k\u00f3d \u00e9rtelmez\u00e9se</p> <p>A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel besz\u00e9lj\u00fck \u00e1t, \u00e9s \u00e9rtelmezz\u00fck a k\u00f3dot!</p>"},{"location":"laborok/02-android-ui/#navigacio","title":"Navig\u00e1ci\u00f3","text":"<p>Ahhoz, hogy az \u00faj fel\u00fclet\u00fcnket meg tudjuk jelen\u00edteni, el\u00e9g lenne egyszer\u0171en megh\u00edvni a <code>LoginScreen</code> f\u00fcggv\u00e9nyt a <code>MainActivity</code> <code>onCreate</code> f\u00fcggv\u00e9ny\u00e9ben. Azomban jobban j\u00e1runk, ha m\u00e1r most elkezdj\u00fck el\u0151k\u00e9sz\u00edteni az alkalmaz\u00e1s navig\u00e1ci\u00f3j\u00e1t. Ehhez el\u0151sz\u00f6r hozzunk l\u00e9tre egy \u00faj Packaget a projekt mapp\u00e1ba <code>navigation</code> n\u00e9ven, majd ebbe hozzunk l\u00e9tre k\u00e9t Kotlin Filet (a Package-\u00fcnk\u00f6n jobb klikk -&gt; New -&gt; Kotlin Class/File) <code>AppNavigation</code> illetve <code>Screen</code> n\u00e9ven. Ez ut\u00f3bbira csak az\u00e9rt lesz sz\u00fcks\u00e9g, hogy a k\u00e9s\u0151bbiekben szebben tudjuk megoldani a navig\u00e1ci\u00f3t a k\u00e9perny\u0151k k\u00f6z\u00f6tt. Ezt az Extra feladat - \u00c1tl\u00e1that\u00f3bb navig\u00e1ci\u00f3 r\u00e9szn\u00e9l fogjuk r\u00e9szletezve le\u00edrni az \u00e9rdekl\u0151d\u0151k kedv\u00e9\u00e9rt.</p> <p>Nyissuk meg az <code>AppNavigation</code> f\u00e1jlt, k\u00e9sz\u00edts\u00fck el a k\u00f6vetkez\u0151 k\u00f3dot, majd n\u00e9zz\u00fck \u00e1t \u00e9s \u00e9rtelmezz\u00fck a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel!</p> <pre><code>data object LoginScreenDestination\n\n@Composable\nfun AppNavigation(modifier: Modifier = Modifier) {\nval backStack = remember { mutableStateListOf&lt;Any&gt;(LoginScreenDestination) }\n\nNavDisplay(\nmodifier = modifier,\nbackStack = backStack,\nonBack = { backStack.removeLastOrNull() },\nentryProvider = { key -&gt;\nwhen (key) {\nis LoginScreenDestination -&gt; NavEntry(key) {\nLoginScreen(onSuccess = {})\n}\n\nelse -&gt; {\nerror(\"Unknown route: $key\")\n}\n}\n}\n)\n}\n</code></pre> <p>Itt el\u0151sz\u00f6r l\u00e9trehozunk egy singleton adat oszt\u00e1lyt (<code>data object</code>) <code>LoginScreenDestination</code> n\u00e9ven. Ez reprezent\u00e1lja a navig\u00e1ci\u00f3nk egyik \"\u00e1llom\u00e1s\u00e1t\".</p> <p>Az <code>AppNavigation</code> f\u00fcggv\u00e9ny\u00fcnkben el\u0151sz\u00f6r l\u00e9trehozunk egy <code>backStack</code>-et, ami a navig\u00e1ci\u00f3s c\u00e9lpontjainkat fogja tartalmazni. L\u00e1that\u00f3, hogy igaz\u00e1b\u00f3l b\u00e1rmi belepakolhat\u00f3 ebbe a list\u00e1ba, mi jelenleg az egyetlen l\u00e9tez\u0151 c\u00e9lpontunkat, a <code>LoginScreenDestination</code>-t raktuk bele. Ezek ut\u00e1n a <code>NavDisplay</code> f\u00fcggv\u00e9nyparam\u00e9terek\u00e9nt be\u00e1ll\u00edtuk:</p> <ul> <li>a modifier dekor\u00e1tort,</li> <li>az im\u00e9nt l\u00e9trehozott backstack-et</li> <li>azt a viselked\u00e9st, amit a vissza gomb hat\u00e1s\u00e1ra v\u00e9gre kell hajtani (jelen esetben levenni a backstack fels\u0151 elem\u00e9t),</li> <li>illetve mag\u00e1t a navig\u00e1ci\u00f3s logik\u00e1t, ahol att\u00f3l f\u00fcgg\u0151en, hogy melyik \"\u00e1llom\u00e1s\"-on vagy\u00f6unk, megjelen\u00edt\u00fcnk valamit (jelen esetben a <code>LoginScreenDestination</code> eset\u00e9n a <code>LoginScreen</code>-t.</li> </ul> <p>M\u00e1r csak egyetlen l\u00e9p\u00e9s van, hogy ezt a k\u00e9perny\u0151t az emul\u00e1toron l\u00e1thassuk az ind\u00edt\u00e1s ut\u00e1n. Nyissuk meg a <code>MainActivity</code> f\u00e1jlt, \u00e9s m\u00f3dos\u00edtsuk a k\u00f6vetkez\u0151 szerint:</p> <pre><code>class MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nPublicTransportTheme {\nAppNavigation(modifier = Modifier.safeDrawingPadding())\n}\n}\n}\n}\n</code></pre> <p>EdgeToEdge</p> <p>Android 15-t\u0151l (API 35) az alkalmaz\u00e1sunk k\u00e9pes a rendszer UI (StatusBar, NavigationBar, soft keyboard, stb.) al\u00e1 is rajzolni. Ezzel val\u00f3s\u00edtott\u00e1k meg azt, hogy a k\u00e9sz\u00fcl\u00e9k teljes k\u00e9perny\u0151j\u00e9t haszn\u00e1lni tudjuk a sz\u00e9l\u00e9t\u0151l a sz\u00e9l\u00e9ig. Ez hasznos lehet sz\u00e1mtalan esetben, amikor \"teljes k\u00e9perny\u0151s\" alkalmaz\u00e1st szeretn\u00e9nk \u00edrni, nem korl\u00e1toz minket az elfed\u0151 rendszer UI. A funkci\u00f3 term\u00e9szetesen alacsonyabb API szinteken is el\u00e9rhet\u0151, erre val\u00f3 a fent is l\u00e1that\u00f3 <code>enableEdgeToEdge</code> f\u00fcggv\u00e9nyh\u00edv\u00e1s.</p> <p>Ez viszont amennyire hasznos, annyi probl\u00e9m\u00e1t is tud okozni, ha e miatt valami vez\u00e9rl\u0151nk becs\u00faszik mondjuk a szoftveres billenty\u0171zet al\u00e1, amit \u00edgy nem tudunk el\u00e9rni. Ennek kik\u00fcsz\u00f6b\u00f6l\u00e9s\u00e9re tal\u00e1lt\u00e1k ki az inseteket. Ennek sz\u00e1mos be\u00e1ll\u00edt\u00e1sa van, amellyel nem kell nek\u00fcnk k\u00e9zzel megtippelni, hogy p\u00e9ld\u00e1ul a status bar h\u00e1ny dp magas, k\u00fcl\u00f6n\u00f6sen, hogy ezek az \u00e9rt\u00e9kek fut\u00e1sid\u0151ben v\u00e1ltozhatnak (l\u00e1sd szoftveres billenty\u0171zet). A sz\u00e1mos be\u00e1ll\u00edt\u00e1s k\u00f6z\u00fcl mi most a fent l\u00e1that\u00f3 <code>safeDrawindPadding</code>-et haszn\u00e1ljuk, ami mint neve is mutatja, pont akkora paddinget \u00e1ll\u00edt mindenhova, hogy semmit se takarjon ki a rendszer UI. (Term\u00e9szetesen ez nem csak az <code>Activity</code>-ben, hanem minden <code>Screenen</code> \u00e9s <code>Composable</code>-\u00f6n k\u00f6l\u00fcn is haszn\u00e1lhat\u00f3.)</p> <p>A funkci\u00f3 egyik j\u00f3 demonstr\u00e1ci\u00f3ja, hogy a LoginScreen vez\u00e9rl\u0151i, amik a teljes oldal k\u00f6zep\u00e9re vannak helyezve, a szoftveres billenty\u0171zet megjelen\u00e9sekor nem takar\u00f3dnak le, hanem a szabadon marad\u00f3 hely k\u00f6zep\u00e9re cs\u00fasznak.</p> <p><p> </p></p> <p>BEADAND\u00d3 (0.5 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a login k\u00e9perny\u0151 egy input hib\u00e1val (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod az e-mail mez\u0151be beg\u00e9pelve! A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/02-android-ui/#lehetosegek-listaja-1-pont","title":"Lehet\u0151s\u00e9gek list\u00e1ja (1 pont)","text":"<p>A k\u00f6vetkez\u0151 k\u00e9perny\u0151n a felhaszn\u00e1l\u00f3 a k\u00fcl\u00f6nb\u00f6z\u0151 j\u00e1rm\u0171t\u00edpusok k\u00f6z\u00fcl v\u00e1laszthat. Egyel\u0151re csak h\u00e1rom szolg\u00e1ltat\u00e1s m\u0171k\u00f6dik a fikt\u00edv v\u00e1llalatunkban: bicikli, buszok illetve vonatok.</p> <p> </p> <p>El\u0151sz\u00f6r t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9pi er\u0151forr\u00e1sait tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt, ami tartalmazza az \u00f6sszes k\u00e9pet, amire sz\u00fcks\u00e9g\u00fcnk lesz. A tartalm\u00e1t m\u00e1soljuk be a projekt\u00fcnk\u00f6n bel\u00fcl az <code>app/src/main/res</code> mapp\u00e1ba (ehhez seg\u00edt, ha Android Studio-ban bal fent a szok\u00e1sos Android n\u00e9zetr\u0151l a Project n\u00e9zetre v\u00e1ltunk, esetleg a mapp\u00e1n jobb klikk &gt; Show in Explorer).</p> <p>Hozzunk ehhez l\u00e9tre egy \u00faj Kotlin Filet a <code>screen</code> Packageban \u00e9s nevezz\u00fck el <code>ListScreen</code> n\u00e9ven, majd \u00edrjuk bele a k\u00f6vetkez\u0151t:</p> <pre><code>@Composable\nfun ListScreen(\nonTransportClick: (s: String) -&gt; Unit\n) {\n//TODO\n}\n</code></pre> <p>Menj\u00fcnk vissza az <code>AppNavigation</code> file-ba \u00e9s eg\u00e9sz\u00edts\u00fck ki a k\u00f6vetkez\u0151vel:</p> <pre><code>data object LoginScreenDestination\ndata object ListScreenDestination\n\n@Composable\nfun AppNavigation(modifier: Modifier = Modifier) {\nval backStack = remember { mutableStateListOf&lt;Any&gt;(LoginScreenDestination) }\n\nNavDisplay(\nmodifier = modifier,\nbackStack = backStack,\nonBack = { backStack.removeLastOrNull() },\nentryProvider = { key -&gt;\nwhen (key) {\nis LoginScreenDestination -&gt; NavEntry(key) {\nLoginScreen(onSuccess = {\nbackStack.add(ListScreenDestination)\n})\n}\n\nis ListScreenDestination -&gt; NavEntry(key) {\nListScreen(onTransportClick = {})\n}\n\nelse -&gt; {\nerror(\"Unknown route: $key\")\n}\n}\n}\n)\n}\n</code></pre> <p>Itt h\u00e1rom friss\u00edt\u00e9s t\u00f6rt\u00e9nt:</p> <ul> <li>hozz\u00e1adtunk egy \u00faj \u00e1llom\u00e1st reprezent\u00e1l\u00f3 singleton adat oszt\u00e1lyt a <code>ListScreen</code>-\u00fcnknek,</li> <li>hozz\u00e1adtuk az \u00faj navig\u00e1ci\u00f3s \u00e1llom\u00e1st,</li> <li>megval\u00f3s\u00edtottuk a <code>LoginScreen</code> <code>onSuccess</code> f\u00fcggv\u00e9ny\u00e9t, amiben elv\u00e9gezt\u00fck a navig\u00e1ci\u00f3t.</li> </ul> <p>Ezut\u00e1n k\u00e9sz\u00edts\u00fck el a <code>ListScreen</code>-t:</p> <pre><code>@Composable\nfun ListScreen(\nonTransportClick: (s: String) -&gt; Unit\n) {\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n) {\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"Bike clicked\")\nonTransportClick(\"Bike\")\n},\n) {\n\nImage(\npainter = painterResource(id = R.drawable.bikes),\ncontentDescription = \"Bike Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = \"Bike\",\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"Bus clicked\")\nonTransportClick(\"Bus\")\n},\n) {\n\nImage(\npainter = painterResource(id = R.drawable.bus),\ncontentDescription = \"Bus Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = \"Bus\",\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"Train clicked\")\nonTransportClick(\"Train\")\n},\n) {\n\nImage(\npainter = painterResource(id = R.drawable.trains),\ncontentDescription = \"Train Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = \"Train\",\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\n}\n}\n\n@Preview\n@Composable\nfun PreviewListScreen() {\nListScreen(onTransportClick = {})\n}\n</code></pre> kompakt megold\u00e1s <p>Vagy az \u00e9rdekl\u0151d\u0151k kedv\u00e9\u00e9rt az al\u00e1bbi k\u00f3dot adtuk. Ezzel a k\u00f3ddal ugyanazt \u00e9rhetj\u00fck el mint az el\u0151z\u0151vel, csak kevesebbet kell \u00edrni, illetve kicsit \u00f6sszetettebb.</p> <pre><code>@Composable\nfun ListScreen(\nonTransportClick: (s: String) -&gt; Unit\n) {\nColumn (\nmodifier = Modifier\n.fillMaxSize()\n) {\nval type = mapOf(\n\"Bike\" to R.drawable.bikes,\n\"Bus\" to R.drawable.bus,\n\"Train\" to R.drawable.trains\n)\n\nfor (i in type) {\nBox(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(1f)\n.clickable {\nLog.d(\"ListScreen\", \"${i.key} clicked\")\nonTransportClick(i.key)\n},\n) {\n\nImage(\npainter = painterResource(id = i.value),\ncontentDescription = \"$i Button\",\nmodifier = Modifier.fillMaxSize(),\ncontentScale = ContentScale.FillBounds\n)\nText(\ntext = i.key,\nfontSize = 36.sp,\ncolor = Color.White,\nmodifier = Modifier\n.align(Alignment.Center)\n)\n}\n}\n}\n}\n</code></pre> <p>Az itt haszn\u00e1lt <code>Box</code>-r\u00f3l tudjuk, hogy a benne elhelyezett Composable-k egym\u00e1sra pakol\u00f3dnak, \u00edgy k\u00f6nnyen el tudjuk \u00e9rni azt, hogy egy k\u00e9pen felirat legyen. A <code>Box</code>-nak a <code>modifier</code> seg\u00edts\u00e9g\u00e9vel tudunk kattint\u00e1s eventet adni neki (<code>Modifier.clickable{..}</code>), \u00edgy k\u00f6nnyen el\u00e9rhetj\u00fck a tov\u00e1bbi navig\u00e1ci\u00f3. Azonban ez a funkci\u00f3 m\u00e9g nem m\u0171k\u00f6dik, mert hi\u00e1nyzik a navig\u00e1ci\u00f3b\u00f3l az el\u00e9r\u00e9si \u00fat, illetve az onClick param\u00e9ter. Ezt a k\u00f6vetkez\u0151 feladatban fogjuk orvosolni. </p> <p>Az <code>Image</code> Composable f\u00fcggv\u00e9nynek egy <code>painter</code>, egy <code>contentDescription</code> \u00e9s egy <code>contentScale</code> param\u00e9tere van. Ezeket \u00e1t is tudjuk adni sorban a <code>painterResource</code>, <code>String</code> \u00e9s a <code>ContentScale</code> seg\u00edts\u00e9g\u00e9vel. A <code>painterResource</code>-nak megadjuk a k\u00e9p el\u00e9r\u00e9si \u00fatj\u00e1t, a <code>painterDescription</code>-nek, egy le\u00edr\u00e1st, illetve a <code>contentScale</code>-nek egy <code>FillBounds</code>-ot. Ennek a seg\u00edts\u00e9g\u00e9vel el tudjuk \u00e9rni, hogy a <code>Box</code> teljes ter\u00fclet\u00e9n k\u00e9p legyen.</p> <p>k\u00f3d \u00e9rtelmez\u00e9se</p> <p>A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel besz\u00e9lj\u00fck \u00e1t, \u00e9s \u00e9rtelmezz\u00fck a k\u00f3dot!</p> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1sunkat!</p> <p>A bejelentkez\u00e9s ut\u00e1n az elk\u00e9sz\u00edtett lista n\u00e9zetet kell l\u00e1tnunk. Hab\u00e1r a lista elemein val\u00f3 kattint\u00e1s m\u00e9g nem navig\u00e1l minket tov\u00e1bb, \u00e9rdemes a <code>LogCat</code> seg\u00edts\u00e9g\u00e9vel leellen\u0151rizni a logol\u00e1st, ugyanis, ha mindent j\u00f3l csin\u00e1ltunk, akkor l\u00e1tnunk kell az adott j\u00e1rm\u0171re val\u00f3 kattint\u00e1st.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a j\u00e1rm\u00favek list\u00e1ja (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/02-android-ui/#reszletes-nezet-1-pont","title":"R\u00e9szletes n\u00e9zet (1 pont)","text":"<p>Miut\u00e1n a felhaszn\u00e1l\u00f3 kiv\u00e1lasztotta a k\u00edv\u00e1nt k\u00f6zleked\u00e9si eszk\u00f6zt, n\u00e9h\u00e1ny tov\u00e1bbi opci\u00f3t fogunk m\u00e9g felaj\u00e1nlani sz\u00e1m\u00e1ra. Ezen a k\u00e9perny\u0151n tudja be\u00e1ll\u00edtani a b\u00e9rleten szerepl\u0151 d\u00e1tumokat, illetve a r\u00e1 vonatkoz\u00f3 kedvezm\u00e9nyt, amennyiben van ilyen.</p> <p> </p> <p>Hozzuk l\u00e9tre az \u00faj k\u00e9perny\u0151t <code>DetailsScreen</code> n\u00e9ven a <code>screen</code> Packageban, \u00e9s k\u00e9sz\u00edts\u00fck el a fel\u00e9p\u00edt\u00e9s\u00e9t, az al\u00e1bbi szerint:</p> <pre><code>@Composable\nfun DetailsScreen(\nonSuccess: (s: String) -&gt; Unit,\ntransportType: String\n) {\nval context = LocalContext.current\n\nval calendar = Calendar.getInstance()\nval year = calendar.get(Calendar.YEAR)\nval month = calendar.get(Calendar.MONTH)\nval day = calendar.get(Calendar.DAY_OF_MONTH)\n\nvar startDate by remember {\nmutableStateOf(\nString.format(\nLocale.US,\n\"%d. %02d. %02d\",\nyear,\nmonth + 1,\nday\n)\n)\n}\nvar endDate by remember {\nmutableStateOf(\nString.format(\nLocale.US,\n\"%d. %02d. %02d\",\nyear,\nmonth + 1,\nday\n)\n)\n}\nval currentDate = \"$year. ${month + 1}. $day\"\n\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n.padding(16.dp),\nverticalArrangement = Arrangement.Top,\nhorizontalAlignment = Alignment.Start\n) {\n//Pass category\n\n\n//Start date\n\n\n//End date\n\n\n//Price category\n\n\n//Price\n\n\n//Buy button\n\n}\n}\n\n@Preview\n@Composable\nfun PreviewDetailsScreen() {\nDetailsScreen(onSuccess = {}, transportType = \"Senior Bus Pass\")\n}\n</code></pre> <p>Pass category <pre><code>Text(\nmodifier = Modifier\n.align(Alignment.CenterHorizontally)\n.padding(top = 16.dp),\ntext = \"${transportType} pass\",\nfontSize = 24.sp\n)\n</code></pre></p> <p>Ez a <code>Text</code> Composable egy fejl\u00e9c lesz, ami azt fogja mutatni, hogy jelenleg milyen jegyet pr\u00f3b\u00e1lunk megv\u00e1s\u00e1rolni. Ennek a <code>transportType</code> param\u00e9tert adjuk \u00e1t sz\u00f6vegk\u00e9nt, majd a <code>Modifier.align()</code> seg\u00edts\u00e9g\u00e9vel k\u00f6z\u00e9pre igaz\u00edtjuk az oszlopban.</p> <p>Start date <pre><code>Text(\nmodifier = Modifier.padding(top = 16.dp),\ntext = \"Start date\",\nfontSize = 16.sp\n)\nTextButton(\nmodifier = Modifier.padding(top = 16.dp),\nonClick = {\nDatePickerDialog(\ncontext,\n{ _, selectedYear, selectedMonth, selectedDay -&gt;\nstartDate = String.format(\nLocale.US,\n\"%d. %02d. %02d\",\nselectedYear,\nselectedMonth + 1,\nselectedDay\n)\n},\nyear, month, day\n).show()\n}) {\nText(\ntext = if (startDate.isEmpty()) currentDate else startDate,\nfontSize = 24.sp\n)\n}\n</code></pre> Egy <code>Text</code> \u00e9s egy <code>TextButton</code> seg\u00edt\u00e9s\u00e9gvel egy d\u00e1tumv\u00e1laszt\u00f3 mez\u0151t val\u00f3s\u00edtunk meg. A <code>Text</code> csak fejl\u00e9ck\u00e9nt ny\u00fajt inform\u00e1ci\u00f3t, a <code>TextButton</code>-nak pedig egy onClick eventet adunk \u00e1t, aminek a seg\u00edts\u00e9g\u00e9vel egy DatePicker dial\u00f3gust val\u00f3s\u00edtunk meg. Ennek \u00e1tadjuk a sz\u00fcks\u00e9ges param\u00e9tereket:</p> <ol> <li>context</li> <li>Lambda param\u00e9ter, ami azt \u00edrja le, hogy a d\u00e1tum v\u00e1laszt\u00e1s sor\u00e1n mi t\u00f6rt\u00e9njen. Jelen esetben nek\u00fcnk arra van sz\u00fcks\u00e9g, hogy a startDate v\u00e1ltoz\u00f3nkat fel\u00fcl\u00edrjuk.</li> <li>Year - jelenlegi \u00e9v</li> <li>Month - jelenlegi h\u00f3nap</li> <li>Day - jelenlegi nap</li> </ol> <p>Ez ut\u00f3bbi h\u00e1rom a DatePicker dial\u00f3gus jelenlegi nap helyzet\u00e9t fogja befoly\u00e1solni.</p> <p>End date <pre><code>Text(\nmodifier = Modifier.padding(top = 16.dp),\ntext = \"End date\",\nfontSize = 16.sp\n)\n\nTextButton(\nmodifier = Modifier.padding(top = 16.dp),\nonClick = {\nDatePickerDialog(\ncontext,\n{ _, selectedYear, selectedMonth, selectedDay -&gt;\nendDate = String.format(\nLocale.US,\n\"%d. %02d. %02d\",\nselectedYear,\nselectedMonth + 1,\nselectedDay\n)\n},\nyear, month, day\n).show()\n}) {\nText(\ntext = if (endDate.isEmpty()) currentDate else endDate,\nfontSize = 24.sp\n)\n}\n</code></pre></p> <p>A Start Date-hez hasonl\u00f3an m\u0171k\u00f6dik.</p> <p>Price category <pre><code>val categories = listOf(\"Full price\", \"Senior\", \"Public servant\")\nvar selectedCategory by remember { mutableStateOf(\"Full price\") }\nText(\nmodifier = Modifier.padding(top = 16.dp),\ntext = \"Price category\",\nfontSize = 16.sp\n)\nColumn(\nmodifier = Modifier.padding(top = 16.dp)\n) {\ncategories.forEach { category -&gt;\nRow(\nverticalAlignment = Alignment.CenterVertically,\nmodifier = Modifier\n.fillMaxWidth()\n.selectable(\nselected = (category == selectedCategory),\nonClick = { selectedCategory = category },\nrole = Role.RadioButton\n)\n.padding(vertical = 4.dp)\n) {\nRadioButton(\nselected = (category == selectedCategory),\nonClick = { selectedCategory = category }\n)\nSpacer(modifier = Modifier.width(8.dp))\nText(category)\n}\n}\n}\n</code></pre></p> <p>Az \u00e1rkateg\u00f3ria r\u00e9sznek szint\u00e9n adunk egy fejl\u00e9cet a <code>Text</code> Composable seg\u00edts\u00e9g\u00e9vel, majd ezen bel\u00fcl elhelyez\u00fcnk egy radio gomb szekci\u00f3t, ami 3 kateg\u00f3ri\u00e1b\u00f3l \u00e1ll.</p> <p>Price</p> <pre><code>Text(\nfontSize = 24.sp,\ntext = \"Price: 42000\",\nmodifier = Modifier\n.align(Alignment.CenterHorizontally)\n.padding(top = 16.dp),\n)\n</code></pre> <p>Az \u00e1r r\u00e9sz jelenleg csak statikus \u00e1rat \u00edr ki, ezt az iMSc feladat sor\u00e1n lehet v\u00e1ltoztatni.</p> <p>Buy button</p> <pre><code>Button(\nmodifier = Modifier\n.align(Alignment.CenterHorizontally)\n.fillMaxWidth()\n.padding(top = 16.dp),\nonClick = {\nonSuccess(\"${startDate};$endDate;${\"$selectedCategory $transportType\"}\")\n}) {\nText(\"Buy\")\n}\n</code></pre> <p>A gombnak szint\u00e9n \u00e1tadunk egy onClick event esem\u00e9nyt, m\u00e9gpedig a lambda param\u00e9tert amit param\u00e9terk\u00e9nt kaptunk. Ennek a m\u00f3dos\u00edt\u00e1sa is az iMSc feladat sor\u00e1n t\u00f6rt\u00e9nhet meg.</p> <p>\u00c9rtelmez\u00e9s</p> <p>Az al\u00e1bbi k\u00f3dban nagyon sok form\u00e1z\u00e1s van, \u00edgy jelent\u0151sen megnehez\u00edtheti az \u00e9rtelmez\u00e9s\u00e9t, ezt a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel n\u00e9zz\u00fck \u00e1t, \u00e9s \u00e9rtelmezz\u00fck.</p> <p>Ezut\u00e1n b\u0151v\u00edts\u00fck ki az <code>AppNavigation</code>-\u00fcnket a k\u00f6vetkez\u0151 szerint, majd besz\u00e9j\u00fck \u00e1t a laborvezet\u0151vel a k\u00f3d m\u0171k\u00f6d\u00e9s\u00e9t.</p> <pre><code>data object LoginScreenDestination\ndata object ListScreenDestination\ndata class DetailsScreenDestination(val type: String)\n\n@Composable\nfun AppNavigation(modifier: Modifier = Modifier) {\nval backStack = remember { mutableStateListOf&lt;Any&gt;(LoginScreenDestination) }\n\nNavDisplay(\nmodifier = modifier,\nbackStack = backStack,\nonBack = { backStack.removeLastOrNull() },\nentryProvider = { key -&gt;\nwhen (key) {\nis LoginScreenDestination -&gt; NavEntry(key) {\nLoginScreen(onSuccess = {\nbackStack.add(ListScreenDestination)\n})\n}\n\nis ListScreenDestination -&gt; NavEntry(key) {\nListScreen(onTransportClick = { backStack.add(DetailsScreenDestination(it)) })\n}\n\nis DetailsScreenDestination -&gt; NavEntry(key) {\nDetailsScreen(onSuccess = {}, transportType = key.type)\n}\n\nelse -&gt; {\nerror(\"Unknown route: $key\")\n}\n}\n}\n)\n}\n</code></pre> <p>Figyelj\u00fck meg, ho hogyan hoztunk l\u00e9tre olyan \u00e1llom\u00e1st, ami param\u00e9tert fogad, illetve hogyan adjuk \u00e1t ezt a param\u00e9tert navig\u00e1ci\u00f3 eset\u00e9n!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a r\u00e9szletes n\u00e9zet (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/02-android-ui/#a-berlet-1-pont","title":"A b\u00e9rlet (1 pont)","text":"<p>Az alkalmaz\u00e1s utols\u00f3 k\u00e9perny\u0151je m\u00e1r kifejezetten egyszer\u0171 lesz, ez maga a b\u00e9rletet fogja reprezent\u00e1lni. Itt a b\u00e9rlet t\u00edpus\u00e1t \u00e9s \u00e9rv\u00e9nyess\u00e9gi idej\u00e9t fogjuk megjelen\u00edteni, illetve egy QR k\u00f3dot, amivel ellen\u0151rizni lehet a b\u00e9rletet.</p> <p> </p> <p>Hozzuk l\u00e9tre a sz\u00fcks\u00e9ges Kotlin Filet szint\u00e9n a <code>screen</code> packageba, <code>PassScreen</code> n\u00e9ven, majd \u00edrjuk bele az al\u00e1bbiakat.</p> <pre><code>@Composable\nfun PassScreen(\npassDetails: String\n) {\n\nval parts = passDetails.split(\";\")\n\nval startDate = parts[0]\nval endDate = parts[1]\nval category = parts[2]\n\nBox(\nmodifier = Modifier\n.fillMaxSize()\n.padding(16.dp)\n) {\nColumn(\nmodifier = Modifier.fillMaxWidth(),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Top\n) {\nText(\ntext = \"$category Pass\",\nfontSize = 24.sp,\nmodifier = Modifier.padding(16.dp)\n)\nText(\ntext = \"$startDate - $endDate\",\nfontSize = 16.sp,\nmodifier = Modifier.padding(16.dp)\n)\n\n}\nImage(\npainter = painterResource(\nid = R.drawable.qrcode\n),\ncontentDescription = \"Ticket\",\nmodifier = Modifier\n.fillMaxWidth()\n.align(Alignment.Center),\ncontentScale = ContentScale.FillWidth\n)\n}\n}\n\n@Composable\n@Preview\nfun PreviewPassScreen() {\nPassScreen(passDetails = \"2024. 09. 01.;2024. 12. 08.;Senior Train\")\n}\n</code></pre> <p>Mivel a <code>PassScreen</code>-nek sz\u00fcks\u00e9ge van a jegy t\u00edpus\u00e1ra, valamint az \u00e9rv\u00e9nyess\u00e9gi idej\u00e9re, ezt egy param\u00e9terk\u00e9nt kapja meg, majd ezt egy f\u00fcggv\u00e9nyen bel\u00fcl feldolgozzuk, \u00e9s az al\u00e1bbiak szerint haszn\u00e1ljuk fel.</p> <ul> <li><code>yyyy. mm. dd.;yyyy. mm. dd.;category</code> a fel\u00e9p\u00edt\u00e9se a kapott Stringnek</li> <li>Ezt feldaraboljuk a <code>;</code> ment\u00e9n, majd a d\u00e1tumot string interpol\u00e1ci\u00f3 seg\u00edts\u00e9g\u00e9vel \u00e1tadjuk a <code>Text</code> Composable \u00e9rt\u00e9k\u00e9nek, a category-t pedig egy m\u00e1sik <code>Text</code> Composable-nak</li> </ul> <p>L\u00e1that\u00f3, hogy a Java-val ellent\u00e9tben a Kotlin t\u00e1mogatja a string interpol\u00e1ci\u00f3t.</p> <p>V\u00e9g\u00fcl itt is k\u00f6ss\u00fck be az <code>AppNavigation</code>-be az \u00faj k\u00e9perny\u0151nket az el\u0151z\u0151h\u00f6z hasonl\u00f3an, valamint adjuk meg a lambda esem\u00e9nyt az el\u0151z\u0151 composable-nek:</p> <pre><code>data object LoginScreenDestination\ndata object ListScreenDestination\ndata class DetailsScreenDestination(val type: String)\ndata class PassScreenDestination(val details: String)\n\n@Composable\nfun AppNavigation(modifier: Modifier = Modifier) {\nval backStack = remember { mutableStateListOf&lt;Any&gt;(LoginScreenDestination) }\n\nNavDisplay(\nmodifier = modifier,\nbackStack = backStack,\nonBack = { backStack.removeLastOrNull() },\nentryProvider = { key -&gt;\nwhen (key) {\nis LoginScreenDestination -&gt; NavEntry(key) {\nLoginScreen(onSuccess = {\nbackStack.add(ListScreenDestination)\n})\n}\n\nis ListScreenDestination -&gt; NavEntry(key) {\nListScreen(onTransportClick = { backStack.add(DetailsScreenDestination(it)) })\n}\n\nis DetailsScreenDestination -&gt; NavEntry(key) {\nDetailsScreen(\nonSuccess = { backStack.add(PassScreenDestination(it)) },\ntransportType = key.type\n)\n}\n\nis PassScreenDestination -&gt; NavEntry(key) {\nPassScreen(passDetails = key.details)\n}\n\nelse -&gt; {\nerror(\"Unknown route: $key\")\n}\n}\n}\n)\n}\n</code></pre> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a b\u00e9rlet k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt. A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l. </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/02-android-ui/#onallo-feladat-hajo-berlet-1-pont","title":"\u00d6n\u00e1ll\u00f3 feladat - Haj\u00f3 b\u00e9rlet (1 pont)","text":"<p>V\u00e1llalatunk terjeszked\u00e9s\u00e9vel elindult a haj\u00f3j\u00e1ratokat aj\u00e1nl\u00f3 szolg\u00e1ltat\u00e1sunk is. Adjuk hozz\u00e1 ezt az \u00faj b\u00e9rlet t\u00edpust az alkalmaz\u00e1sunkhoz!</p> Seg\u00edts\u00e9g <p>A sz\u00fcks\u00e9ges v\u00e1ltoztat\u00e1sok nagy r\u00e9sze a <code>ListScreen</code>-ben lesz. Az eddigi 3 lehet\u0151s\u00e9g mell\u00e9 fel kell venni egy \u00faj <code>Box</code>-ot, \u00e9s az el\u0151z\u0151ekhez hasonl\u00f3an \u00e1t kell alak\u00edtani az \u00faj opci\u00f3t.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts k\u00e9t k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a j\u00e1rm\u0171 v\u00e1laszt\u00f3 k\u00e9perny\u0151 illetve a haj\u00f3 b\u00e9rlet k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), \u00e9s az ezekhez tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9peket a megold\u00e1sban a repository-ba f6.png \u00e9s f7.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9pek sz\u00fcks\u00e9ges felt\u00e9telei a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/02-android-ui/#extra-feladatok","title":"Extra feladatok","text":"<p>Ismertet\u0151</p> <p>Ezek a feladatok nem sz\u00fcks\u00e9gesek a labor maxim\u00e1lis pontsz\u00e1m\u00e1nak megszerz\u00e9s\u00e9hez, csup\u00e1n csak ismertet\u0151 jelleggel vannak a labor anyag\u00e1ban azok sz\u00e1m\u00e1ra akik jobban bele\u00e1sn\u00e1k magukat a t\u00e9m\u00e1ba.</p>"},{"location":"laborok/02-android-ui/#extra-feladat-splashscreen-animacio","title":"Extra feladat - SplashScreen anim\u00e1ci\u00f3","text":"<p>A SplashScreen API-nak k\u00f6sz\u00f6nhet\u0151en, m\u00e1r l\u00e1ttuk, hogy k\u00f6nnyed\u00e9n l\u00e9tre tudunk hozni egy kezd\u0151 k\u00e9perny\u0151t amit az alkalmaz\u00e1s megnyit\u00e1sa ut\u00e1n k\u00f6zvetlen l\u00e1tunk. Ezen az a megjelen\u0151 Icont k\u00f6nnyen tudjuk anim\u00e1lni is, ehhez mind\u00f6ssze p\u00e1r <code>.xml</code> f\u00e1jlt kell l\u00e9trehozunk az Android Studio seg\u00edts\u00e9g\u00e9vel, amelyekben megval\u00f3s\u00edtjuk ezeket a m\u0171veleteket.</p> <p>Sz\u00fcks\u00e9g\u00fcnk van a k\u00f6vetkez\u0151kre:</p> <ul> <li>Logo - Ezt fogjuk megjelen\u00edteni a kezd\u0151k\u00e9perny\u0151n. (Ezt m\u00e1r kor\u00e1bban l\u00e9trehoztuk, csak m\u00f3dos\u00edtani fogjuk)</li> <li>Animator - Ebben fogjuk le\u00edrni az anim\u00e1ci\u00f3t amit szeretn\u00e9nk haszn\u00e1lni az adott Logo-n.</li> <li>Animated Vector Drawable - Ennek a seg\u00edts\u00e9g\u00e9vel lesz \u00f6sszek\u00f6tve az Animator, \u00e9s a Logo.</li> <li>Themes - Ezt is csak m\u00f3dos\u00edtani fogjuk</li> <li>Animation - Ebben meg tudunk adni Interpol\u00e1ci\u00f3kat m\u00e9g az anim\u00e1ci\u00f3k mell\u00e9</li> </ul> <p>Logo m\u00f3dos\u00edt\u00e1sa</p> <p>M\u00f3dos\u00edtsuk a m\u00e1r megl\u00e9v\u0151 Logo-t az al\u00e1bbiak szerint. (<code>ic_transport_foreground.xml</code>)</p> <pre><code>&lt;vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:width=\"108dp\"\nandroid:height=\"108dp\"\nandroid:viewportWidth=\"24\"\nandroid:viewportHeight=\"24\"\nandroid:tint=\"#FFFF00\"&gt;\n&lt;group\nandroid:name=\"animationGroup\"\nandroid:pivotX=\"12\"\nandroid:pivotY=\"12\"&gt;\n&lt;path\nandroid:fillColor=\"@android:color/white\"\nandroid:pathData=\"M4,16c0,0.88 0.39,1.67 1,2.22L5,20c0,0.55 0.45,1 1,1h1c0.55,0 1,-0.45 1,-1v-1h8v1c0,0.55 0.45,1 1,1h1c0.55,0 1,-0.45 1,-1v-1.78c0.61,-0.55 1,-1.34 1,-2.22L20,6c0,-3.5 -3.58,-4 -8,-4s-8,0.5 -8,4v10zM7.5,17c-0.83,0 -1.5,-0.67 -1.5,-1.5S6.67,14 7.5,14s1.5,0.67 1.5,1.5S8.33,17 7.5,17zM16.5,17c-0.83,0 -1.5,-0.67 -1.5,-1.5s0.67,-1.5 1.5,-1.5 1.5,0.67 1.5,1.5 -0.67,1.5 -1.5,1.5zM18,11L6,11L6,6h12v5z\"/&gt;\n&lt;/group&gt;\n&lt;/vector&gt;\n</code></pre> <p>A m\u00e1r megl\u00e9v\u0151 path-et belecsomagoltuk egy group tag-be, amire az\u00e9rt van sz\u00fcks\u00e9g, hogy tudjuk anim\u00e1lni az icont. Ennek a groupnak adunk egy nevet, amit az anim\u00e1l\u00e1sn\u00e1l fogunk felhaszn\u00e1lni, hogy melyik csoportot szeretn\u00e9nk, illetve be\u00e1ll\u00edtjuk a pivotX, \u00e9s pivotY pontokat. Ezt jelen esetben k\u00f6z\u00e9pre tessz\u00fck, ugyanis a Logo-t k\u00f6z\u00e9pr\u0151l szeretn\u00e9nk anim\u00e1lni.</p> <p>Animator l\u00e9trehoz\u00e1sa</p> <p>Ahhoz hogy a Logo-t anim\u00e1lni tudjuk, l\u00e9tre kell hozunk egy Animator t\u00edpus\u00fa f\u00e1jlt. Kattintsunk a <code>res</code> mapp\u00e1ra jobb klikkel, majd New-&gt;Android Resource file, n\u00e9vnek adjuk meg a <code>logo_animator</code>-t, type-nak az <code>Animator</code> t\u00edpust, \u00e9s Root elementnek pedig <code>objectAnimator</code>-t, majd kattintsunk az OK gombra. Ez l\u00e9trehozta a sz\u00fcks\u00e9ges f\u00e1jlt, m\u00e1r csak meg kell \u00edrni az anim\u00e1ci\u00f3kat. Els\u0151 sorban \u00e1ll\u00edtsuk be az anim\u00e1ci\u00f3 id\u0151tartam\u00e1t, ezt az <code>android:duration</code> seg\u00edts\u00e9g\u00e9vel tehetj\u00fck meg az <code>objectAnimator</code> tagen bel\u00fcl. </p> <ul> <li>Kezdetben \u00e1ll\u00edtsuk egy m\u00e1sodpercre (1000). </li> <li>Ezut\u00e1n adjunk a Logo-nak egy Scale anim\u00e1ci\u00f3t, ennek a seg\u00edts\u00e9g\u00e9vel el tudjuk \u00e9rni azt, hogy a semmib\u0151l megjelenjen, \u00e9s az anim\u00e1ci\u00f3 id\u0151tartam\u00e1val line\u00e1risan megn\u00f6vekedjen. Ehhez sz\u00fcks\u00e9g\u00fcnk van egy <code>propertyValuesHolder</code> tag-re az <code>objectAnimator</code>-on bel\u00fcl. </li> </ul> <pre><code>&lt;objectAnimator xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:duration=\"1000\"\nandroid:interpolator=\"@android:anim/overshoot_interpolator\"&gt;\n\n&lt;propertyValuesHolder\nandroid:propertyName=\"scaleX\"\nandroid:valueType=\"floatType\"\nandroid:valueFrom=\"0.0\"\nandroid:valueTo=\"0.5\" /&gt;\n\n&lt;propertyValuesHolder\nandroid:propertyName=\"scaleY\"\nandroid:valueType=\"floatType\"\nandroid:valueFrom=\"0.0\"\nandroid:valueTo=\"0.5\" /&gt;\n\n&lt;/objectAnimator&gt;\n</code></pre> <p>Ebben a r\u00f6vid anim\u00e1ci\u00f3s k\u00f3dban csak megn\u00f6velj\u00fck a m\u00e9ret\u00e9t a Logo-nak 0-r\u00f3l 0.5-re. A properyName-n bel\u00fcl tudjuk megadni az anim\u00e1ci\u00f3t, ez lehet scaleX, scaleY, roation, stb... valamint a valuesFrom/To-ban tudjuk megadni a kezd\u0151-c\u00e9l m\u00e9retet.</p> <p>Ahhoz, hogy ezt az anim\u00e1ci\u00f3t \u00f6sszek\u00f6ss\u00fck a Logo-val, l\u00e9tre kell hoznunk egy Animated Vector Drawable-t.</p> <p>Animated Vector Drawable</p> <p>Hozzuk l\u00e9tre az Animated Vector Drawable file-t az Android Studio seg\u00edts\u00e9g\u00e9vel. Kattintsunk jobb klikkel a drawable mapp\u00e1nkra, majd New-&gt;Drawable Resource File. Itt n\u00e9vnek adjuk meg a <code>animated_logo</code>-t, valamint root element-nek <code>animated-vector</code>-t, majd kattintsunk az OK gombra. Ez l\u00e9trehozta a sz\u00fcks\u00e9ges file-t. Eg\u00e9sz\u00edts\u00fck ki az al\u00e1bbiak szerint:</p> <pre><code>&lt;animated-vector xmlns:android=\"http://schemas.android.com/apk/res/android\"\nandroid:drawable=\"@drawable/ic_transport_foreground\"&gt;\n\n&lt;target\nandroid:animation=\"@animator/logo_animator\"\nandroid:name=\"animationGroup\" /&gt;\n\n&lt;/animated-vector&gt;\n</code></pre> <ul> <li>Az <code>android:drawable</code> seg\u00edts\u00e9g\u00e9vel megadjuk azt a f\u00e1jlt amit szeretn\u00e9nk anim\u00e1lni.</li> <li>Az <code>android:animation</code> seg\u00edts\u00e9g\u00e9vel pedig, hogy melyik anim\u00e1ci\u00f3t szeretn\u00e9nk haszn\u00e1lni.</li> <li>Valamint az <code>android:name</code> seg\u00edts\u00e9g\u00e9vel azt a csoportot amelyiket szeretn\u00e9nk anim\u00e1lni az adott Logo-n bel\u00fcl.</li> </ul> <p>A kor\u00e1bbiakban m\u00e1r elk\u00e9sz\u00edtett\u00fck a sz\u00fcks\u00e9ges t\u00e9m\u00e1t a splashscreenhez, viszont az m\u00e9g csak a sima Logo-ra t\u00f6rt\u00e9nt meg. Ahhoz hogy az anin\u00e1lt Logo legyen haszn\u00e1lva m\u00f3dos\u00edtsuk az al\u00e1bbiak szerint.</p> <p>Themes m\u00f3dos\u00edt\u00e1sa</p> <p><pre><code>&lt;style name=\"Theme.PublicTransport.Starting\" parent=\"Theme.SplashScreen\"&gt;\n&lt;item name=\"windowSplashScreenBackground\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"windowSplashScreenAnimatedIcon\"&gt;@drawable/animated_logo&lt;/item&gt;\n&lt;item name=\"android:windowSplashScreenIconBackgroundColor\"&gt;#5A3DDC&lt;/item&gt;\n&lt;item name=\"postSplashScreenTheme\"&gt;@style/Theme.PublicTransport&lt;/item&gt;\n&lt;/style&gt;\n</code></pre> Itt csak az AnimatedIcon-t lecser\u00e9lt\u00fck az <code>animated_logo</code>-ra, a sima helyett.</p> <p>Animation - Interpol\u00e1ci\u00f3k</p> <p>Az instalSplashScreen-nek van egy lambda param\u00e9tere: <code>apply{}</code>. Ezen bel\u00fcl meg tudunk adni k\u00fcl\u00f6nb\u00f6z\u0151 m\u0171k\u00f6d\u00e9seket is. P\u00e9ld\u00e1ul <code>setKeepOnScreenCondition</code> ennek a seg\u00edts\u00e9g\u00e9vel a SplashScreent addig tudjuk a k\u00e9perny\u0151n tartani am\u00edg nem teljes\u00fcl valamilyen felt\u00e9tel. \u00c1ltal\u00e1nan ezen a blokkon bel\u00fcl \u00e9rdemes v\u00e9gezni az adatb\u00e1zis kiolvas\u00e1sokat, vagy olyan dolgokat amik id\u0151ig\u00e9nyesek \u00e9s csak az alkalmaz\u00e1s ind\u00edt\u00e1sa sor\u00e1n egyszer kell v\u00e9grehajtani. Hogy ha ezek v\u00e9grehajt\u00f3dtak teljes\u00fcl egy felt\u00e9tel, \u00e9s elt\u0171nik a SplashScreen. <code>setOnExitAnimationListener</code> - Ezen bel\u00fcl meg tudunk adni olyan anim\u00e1ci\u00f3t ami akkor hajt\u00f3dik v\u00e9gre, hogy ha a <code>setKeepOnScreenCondition</code> nem tartja el\u0151t\u00e9rben a SplashScreen-t, \u00e9s \u00e9ppen v\u00e1ltana k\u00e9perny\u0151t az alkalmaz\u00e1s. Ilyenkor v\u00e9grehajthatunk egy kil\u00e9p\u0151 anim\u00e1ci\u00f3t is. P\u00e9ld\u00e1ul az al\u00e1bbit:</p> <pre><code>installSplashScreen().apply {\nsetOnExitAnimationListener{ splashScreenView -&gt;\nval zoomX = ObjectAnimator.ofFloat(\nsplashScreenView.iconView,\n\"scaleX\",\n0.5f,\n0f\n)\nzoomX.interpolator = OvershootInterpolator()\nzoomX.duration = 500\nzoomX.doOnEnd { splashScreenView.remove() }\nval zoomY = ObjectAnimator.ofFloat(\nsplashScreenView.iconView,\n\"scaleY\",\n0.5f,\n0f\n)\nzoomY.interpolator = OvershootInterpolator()\nzoomY.duration = 500\nzoomY.doOnEnd { splashScreenView.remove()}\nzoomX.start()\nzoomY.start()\n}\n}\n</code></pre> <p>Illessz\u00fck ezt be a <code>MainActivity</code> <code>onCreate()</code> f\u00fcggv\u00e9ny\u00e9be a megfelel\u0151 helyre, majd pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!</p>"},{"location":"laborok/02-android-ui/#extra-feladat-navigacio-splash","title":"Extra feladat - Navig\u00e1ci\u00f3-Splash","text":"<p>Kor\u00e1bban ezt a k\u00e9perny\u0151t a Splash Screen API seg\u00edts\u00e9g\u00e9vel oldottuk meg, azonban t\u00f6bbfajta lehet\u0151s\u00e9g is van, ezek k\u00f6z\u00fcl most n\u00e1vig\u00e1ci\u00f3 seg\u00edts\u00e9g\u00e9vel fogunk egyet megn\u00e9zni.</p> <p>Ez a k\u00e9perny\u0151 l\u00e9nyeg\u00e9ben egy ugyanolyan k\u00e9perny\u0151 mint a t\u00f6bbi. Itt els\u0151 sorban hozzunk l\u00e9tre egy \u00faj Kotlin Filet a <code>screen</code> packagen bel\u00fcl, majd nevezz\u00fck el <code>SplashScreen</code>-nek, \u00e9s \u00edrjuk bele az al\u00e1bbi k\u00f3dot:</p> <pre><code>@Composable\nfun SplashScreen(\nonSuccess: () -&gt; Unit\n) {\nLaunchedEffect(key1 = true) {\ndelay(1000)\nonSuccess()\n}\nColumn(\nmodifier = Modifier\n.fillMaxSize()\n.background(Color.Blue),\nverticalArrangement = Arrangement.Center,\nhorizontalAlignment = Alignment.CenterHorizontally\n) {\nImage(\nmodifier = Modifier\n.size(128.dp),\npainter = painterResource(id = R.drawable.ic_transport_foreground),\ncontentDescription = \"Public Transport\",\n)\n}\n}\n</code></pre> <p>A LaunchedEffect-r\u0151l b\u0151vebben el\u0151ad\u00e1son lesz sz\u00f3. Itt sz\u00fcks\u00e9g volt r\u00e1, ugyanis a benne l\u00e9v\u0151 delay f\u00fcggv\u00e9nyt nem lehet csak \u00f6nmag\u00e1ban megh\u00edvni: egy suspend f\u00fcggv\u00e9nyen vagy egy coroutinon bel\u00fcl lehet haszn\u00e1lni. A delay f\u00fcggv\u00e9ny felel az\u00e9rt, hogy mennyi ideig legyen a k\u00e9perny\u0151n a SplashScreen. Jelen esetben ez 1 m\u00e1sodperc (1000 milisec), majd ezut\u00e1n megh\u00edv\u00f3dik az onSucces lambda, ami \u00e1tnavig\u00e1l minket a LoginScreen-re.</p> <p>M\u00f3dos\u00edtsuk az <code>AppNavigation</code>-\u00fcnkat a k\u00f6vetkez\u0151 szerint:</p> <pre><code>data object SplashScreenDestination\n...\n\n@Composable\nfun AppNavigation(modifier: Modifier = Modifier) {\nval backStack = remember { mutableStateListOf&lt;Any&gt;(SplashScreenDestination) }\n\nNavDisplay(\nmodifier = modifier,\nbackStack = backStack,\nonBack = { backStack.removeLastOrNull() },\nentryProvider = { key -&gt;\nwhen (key) {\nis SplashScreenDestination -&gt; NavEntry(key) {\nSplashScreen(onSuccess = {\nbackStack.removeLastOrNull()\nbackStack.add(LoginScreenDestination)\n})\n}\n\n...\n}\n}\n)\n}\n</code></pre> <p>A <code>SplashScreen</code> k\u00e9perny\u0151 testreszab\u00e1s\u00e1val a labor keretein bel\u00fcl nem fogunk foglalkozni, ez teljesen egy\u00e9nre szabhat\u00f3. </p> <p>Figyelj\u00fck meg, hogy itt nem csak a navig\u00e1ci\u00f3t v\u00e9gezz\u00fck el az <code>onSuccess</code> callback-ben, hanem el\u0151sz\u00f6r levessz\u00fck a <code>SplashScreen</code>-t a backstack-r\u0151l, hogy oda semmi esetre se lehessen visszanavig\u00e1lni.</p> <p>Majd ezut\u00e1n a <code>Manifest</code> f\u00e1jl szem\u00e9lyre szabhat\u00f3, hogy milyen t\u00e9m\u00e1t jelen\u00edtsen meg.</p>"},{"location":"laborok/02-android-ui/#extra-feladat-atlathatobb-navigacio","title":"Extra feladat - \u00c1tl\u00e1that\u00f3bb navig\u00e1ci\u00f3","text":"<p>Nagy projektekben, ahol t\u00f6bb k\u00e9perny\u0151 tal\u00e1lhat\u00f3, egy id\u0151 ut\u00e1n nagyra n\u0151het a navig\u00e1ci\u00f3s f\u00e1jl. Egyr\u00e9szt ilyenkor a navig\u00e1ci\u00f3t sz\u00e9tszedhetj\u00fck kisebb al navig\u00e1ci\u00f3kra, majd ezeket egyes\u00edthetj\u00fck egy f\u0151bb navig\u00e1ci\u00f3s f\u00e1jlban. M\u00e1sr\u00e9szt kicsit jobban megszervezhetj\u00fck az \u00e1llom\u00e1saink kezel\u00e9s\u00e9t.  Erre \u00e1ltal\u00e1nos megold\u00e1s, hogy a k\u00e9perny\u0151ket, \u00e9s a hozz\u00e1juk kapcsol\u00f3d\u00f3 navig\u00e1ci\u00f3s utakat egy k\u00fcl\u00f6n\u00e1ll\u00f3 <code>Screen</code> oszt\u00e1lyba gy\u0171jtj\u00fck, majd a navig\u00e1ci\u00f3s f\u00e1jlban csak a bel\u0151l\u00fck k\u00e9pzett objektumokat haszn\u00e1ljuk. A kor\u00e1bban l\u00e9trehozott <code>Screen</code> f\u00e1jl az al\u00e1bbi k\u00f3dot fogja tartalmazni:</p> <p><pre><code>sealed interface Screen : NavKey {\n@Serializable\ndata object SplashScreenDestination : Screen\n@Serializable\ndata object LoginScreenDestination : Screen\n@Serializable\ndata object ListScreenDestination : Screen\n@Serializable\ndata class DetailsScreenDestination(val type: String) : Screen\n@Serializable\ndata class PassScreenDestination(val details: String) : Screen\n}\n</code></pre> L\u00e1that\u00f3, hogy az interface-\u00fcnk megval\u00f3s\u00edt egy <code>NavKey</code> interface-t. Ez nem tartalmaz relev\u00e1ns k\u00f3dot, csak egy jelz\u00e9s arra, hogy ezeket az objektumokat navig\u00e1ci\u00f3 sor\u00e1n fogjuk haszn\u00e1lni.</p> <p>sealed class</p> <p>A Kotlin sealed class-ai olyan oszt\u00e1lyok, amelyekb\u0151l korl\u00e1tozott az \u00f6r\u00f6kl\u00e9s, \u00e9s ford\u00edt\u00e1si id\u0151ben minden lesz\u00e1rmazott oszt\u00e1lya ismert. Ezeket az oszt\u00e1lyokat az enumokhoz hasonl\u00f3 m\u00f3don tudjuk alkalmazni. Jelen esetben a <code>Details</code> val\u00f3j\u00e1ban nem a <code>Screen</code> k\u00f6zvetlen lesz\u00e1rmazottja, hanem anonim lesz\u00e1rmazott oszt\u00e1lya, mivel a felhaszn\u00e1l\u00f3n\u00e9v param\u00e9terk\u00e9nt t\u00f6rt\u00e9n\u0151 kezel\u00e9s\u00e9t is tartalmazza.</p> <p>Ez ut\u00e1n teh\u00e1t az <code>AppNavigation</code>-\u00fcnkb\u0151l kit\u00f6r\u00f6lhetj\u00fck az \u00e1llom\u00e1sokat, valamint az <code>entryProvider</code>-t is egyszer\u0171s\u00edthetj\u00fck:</p> <pre><code>@Composable\nfun AppNavigation(modifier: Modifier = Modifier) {\nval backStack = remember { mutableStateListOf&lt;Screen&gt;(Screen.LoginScreenDestination) }\n\nNavDisplay(\nmodifier = modifier,\nbackStack = backStack,\nonBack = { backStack.removeLastOrNull() },\nentryProvider = entryProvider {\n\nentry&lt;Screen.LoginScreenDestination&gt; {\nLoginScreen(onSuccess = {\nbackStack.add(Screen.ListScreenDestination)\n})\n}\n\nentry&lt;Screen.ListScreenDestination&gt; {\nListScreen(onTransportClick = { backStack.add(Screen.DetailsScreenDestination(it)) })\n}\n\nentry&lt;Screen.DetailsScreenDestination&gt; { key -&gt;\nDetailsScreen(\nonSuccess = { backStack.add(Screen.PassScreenDestination(it)) },\ntransportType = key.type\n)\n}\n\nentry&lt;Screen.PassScreenDestination&gt; { key -&gt;\nPassScreen(passDetails = key.details)\n}\n}\n)\n}\n</code></pre> <p>A labor sor\u00e1n \u00e9szrevehett\u00fck, hogy amennyiben elforgattuk az eszk\u00f6z\u00fcnket, mindig a visszaker\u00fclt\u00fcnk a bejelentkez\u0151 oldalra. Ez az\u00e9rt van, mert az Activity megsz\u0171n\u00e9s\u00e9vel megsz\u0171nik a benne l\u00e9v\u0151 backstack is. Ha szeretn\u00e9nk, hogy az alkalmaz\u00e1sunk megfelel\u0151en m\u0171k\u00f6dj\u00f6n \u00e9s megmaradjon a navig\u00e1ci\u00f3nk \u00e1llapota, akkor jelezn\u00fcnk kell, hogy amit a <code>backStack</code>-ben t\u00e1rolunk az egy val\u00f3s navig\u00e1ci\u00f3s backstack.</p> <p>V\u00e1ltoztassuk meg teh\u00e1t az <code>AppNavigation</code>-\u00fcnkben a <code>backStack</code> defin\u00edci\u00f3j\u00e1t:</p> <pre><code>val backStack = rememberNavBackStack(Screen.LoginScreenDestination)\n</code></pre> <p>Pr\u00f3b\u00e1ljuk ki, hogy \u00edgy m\u00e1r elforgat\u00e1s eset\u00e9n is helyesen m\u0171k\u00f6dik az alkalmaz\u00e1sunk!</p>"},{"location":"laborok/02-android-ui/#imsc-feladat","title":"iMSc feladat","text":"<p>Kor\u00e1bban a r\u00e9szletes n\u00e9zetben egy fix \u00e1rat \u00edrtunk ki a k\u00e9perny\u0151re. \u00cdrjuk meg a b\u00e9rlet \u00e1r\u00e1t kisz\u00e1mol\u00f3 logik\u00e1t, \u00e9s ahogy a felhaszn\u00e1l\u00f3 v\u00e1ltoztatja a b\u00e9rlet param\u00e9tereit, friss\u00edts\u00fck a megjelen\u00edtett \u00e1rat.</p> <p>Az \u00e1raz\u00e1s a k\u00f6vetkez\u0151 m\u00f3don m\u0171k\u00f6dj\u00f6n:</p> K\u00f6zleked\u00e9si eszk\u00f6z B\u00e9rlet \u00e1ra naponta Bicikli 700 Busz 1000 Vonat 1500 Haj\u00f3 2500 <p>Ebb\u0151l m\u00e9g az al\u00e1bbi kedvezm\u00e9nyeket adjuk:</p> \u00c1rkateg\u00f3ria Kedvezm\u00e9ny m\u00e9rt\u00e9ke Teljes \u00e1r\u00fa 0% Nyugd\u00edjas 90% K\u00f6zalkalmazott 50% Tipp <p>A sz\u00e1mol\u00e1sokhoz \u00e9s az esem\u00e9nykezel\u00e9shez a <code>Calendar</code> oszt\u00e1lyt, a valamint a Calendar.set f\u00fcggv\u00e9nyt \u00e9rdemes haszn\u00e1lni.</p> <p>\u00c9rdemes k\u00e9t f\u00fcggv\u00e9nyt \u00edrni, a sz\u00e1mol\u00e1shoz:</p> <ul> <li>Az egyik f\u00fcggv\u00e9ny egy k\u00fcl\u00f6nbs\u00e9g sz\u00e1m\u00edt\u00f3, ami k\u00e9t d\u00e1tum k\u00f6z\u00f6tt eltelt napokat sz\u00e1mol</li> <li>A m\u00e1sik f\u00fcggv\u00e9ny pedig ami a napok, \u00e9s a kateg\u00f3ria alapj\u00e1n kisz\u00e1molja az \u00e1rat</li> </ul>"},{"location":"laborok/02-android-ui/#kulonbozo-berlet-napi-arak-1-imsc-pont","title":"K\u00fcl\u00f6nb\u00f6z\u0151 b\u00e9rlet napi \u00e1rak (1 IMSc pont)","text":"<p>BEADAND\u00d3 (1 IMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik egy t\u00f6bb napos b\u00e9rlet r\u00e9szletes n\u00e9zete az \u00e1rral (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a b\u00e9rlet\u00e1rakkal kapcsolatos k\u00f3ddal, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f8.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/02-android-ui/#szazalekos-kedvezmenyek-1-imsc-pont","title":"Sz\u00e1zal\u00e9kos kedvezm\u00e9nyek ( 1 IMSc pont)","text":"<p>BEADAND\u00d3 (1 IMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik egy t\u00f6bb napos kedvezm\u00e9nyes b\u00e9rlet r\u00e9szletes n\u00e9zete az \u00e1rral (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a b\u00e9rletkedvezm\u00e9nyekkel kapcsolatos k\u00f3ddal, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f9.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek!</p>"},{"location":"laborok/03-android-ui-adv/","title":"Labor 03 - UI, LazyColumn - Kiad\u00e1s \u00e9s bev\u00e9tel kezel\u0151 alkalmaz\u00e1s","text":""},{"location":"laborok/03-android-ui-adv/#bevezeto","title":"Bevezet\u0151","text":"<p>A labor c\u00e9lja egy egyszer\u0171 felhaszn\u00e1l\u00f3i fel\u00fclet tervez\u00e9se \u00e9s kivitelez\u00e9se Android platformon, Jetpack Compose felhaszn\u00e1l\u00e1s\u00e1val. </p> <p>A feladat egy kiad\u00e1s \u00e9s bev\u00e9tel napl\u00f3z\u00e1s\u00e1ra alkalmas alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se AndroidWallet n\u00e9ven. Az alkalmaz\u00e1s alap funkcionalit\u00e1sa, hogy a felhaszn\u00e1l\u00f3 fel tudja venni egy list\u00e1ba a kiad\u00e1sait \u00e9s a bev\u00e9teleit, t\u00f6r\u00f6lni tudja \u0151ket, illetve t\u00f6r\u00f6lni tudja az eg\u00e9sz lista tartalm\u00e1t.</p> <p>A k\u00e9sz alkalmaz\u00e1s mintak\u00e9pe: </p> <p> </p> <p>Az alkalmaz\u00e1s fel\u00e9p\u00edt\u00e9se \u00e9s m\u0171k\u00f6d\u00e9se a k\u00f6vetkez\u0151:</p> <ul> <li>Kezd\u0151k\u00e9perny\u0151 egy list\u00e1val (LazyColumn) illetve egy beviteli r\u00e9sszel rendelkezik. Itt a felhaszn\u00e1l\u00f3 be\u00edr egy megnevez\u00e9st \u00e9s egy \u00f6sszeget, megadja a p\u00e9nzforgalom ir\u00e1ny\u00e1t, majd ezut\u00e1n el tudja menteni a list\u00e1ba a tranzakci\u00f3j\u00e1t. Amennyiben itt b\u00e1rmelyik mez\u0151 \u00fcres, a ment\u00e9st meg kell akad\u00e1lyoznunk.</li> <li>Egy listaelem fel\u00e9p\u00edt\u00e9se:<ul> <li>Ikon a p\u00e9nzforgalom ir\u00e1ny\u00e1t\u00f3l f\u00fcgg\u0151en.</li> <li>A megadott megnevez\u00e9s \u00e9s alatta az \u00f6sszeg.</li> <li>Egy gomb a t\u00e9tel t\u00f6rl\u00e9s\u00e9re.</li> </ul> </li> </ul>"},{"location":"laborok/03-android-ui-adv/#felhasznalt-technologiak","title":"Felhaszn\u00e1lt technol\u00f3gi\u00e1k:","text":"<ul> <li>Scaffold, TopBar, BottomBar, FloatingActionButton, Column, Row, Image, Text, Spacer, OutlinedTextField, IconButton, IconToggleButton, LazyColumn</li> <li>data class</li> </ul>"},{"location":"laborok/03-android-ui-adv/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/03-android-ui-adv/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol>"},{"location":"laborok/03-android-ui-adv/#projekt-letrehozasa","title":"Projekt l\u00e9trehoz\u00e1sa","text":"<p>Hozzunk l\u00e9tre egy AndroidWallet nev\u0171 projektet Android Studioban:</p> <ol> <li>Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get.</li> <li>A projekt neve legyen <code>AndroidWallet</code>, a kezd\u0151 package <code>hu.bme.aut.android.androidwallet</code>, a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl az AndroidWallet mappa.</li> <li>Nyelvnek v\u00e1lasszuk a Kotlin-t.</li> <li>A minimum API szint legyen API24: Android 7.0.</li> <li>A Build configuration language Kotlin DSL legyen.</li> </ol> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 AndroidWallet k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p> <p>FILE PATH</p> <p>A repository el\u00e9r\u00e9si helye ne tartalmazzon \u00e9kezeteket, illetve speci\u00e1lis karaktereket, mert az AndroidStudio ezekre \u00e9rz\u00e9keny, \u00edgy nem fog a k\u00f3d lefordulni. \u00c9rdemes a C:\\ meghajt\u00f3 gy\u00f6ker\u00e9ben dolgozni.</p>"},{"location":"laborok/03-android-ui-adv/#fokepernyo-elkeszitese","title":"F\u0151k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se","text":"<p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt, hogy ezzel a fejleszt\u00e9s sor\u00e1n a k\u00e9s\u0151bbiekben ne legyen gond, illessz\u00fck be a sz\u00f6veges er\u0151forr\u00e1sainkat a <code>strings.xml</code> f\u00e1jlba:</p> <pre><code>&lt;resources&gt;\n&lt;string name=\"app_name\"&gt;AndroidWallet&lt;/string&gt;\n&lt;string name=\"item\"&gt;Item&lt;/string&gt;\n&lt;string name=\"price\"&gt;Price&lt;/string&gt;\n&lt;string name=\"label_empty_list\"&gt;List is empty. Start adding salary.&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre> <p>M\u00e1sodik l\u00e9p\u00e9sk\u00e9nt, hogy a felhaszn\u00e1l\u00f3i fel\u00fclet\u00fclet\u00e9t akad\u00e1lytalanul el tudjuk k\u00e9sz\u00edteni, k\u00e9sz\u00edts\u00fck el az adat strukt\u00far\u00e1t, ami a t\u00e1roland\u00f3 adatokat fogja tartalmazni. Sz\u00fck\u00e9g\u00fcnk vagy egy list\u00e1ra, amely az adatokat tartalmazza. Ebben a list\u00e1ban az al\u00e1bbi <code>SalaryData</code> data class objektumokat fogunk t\u00e1rolni. Hozzunk l\u00e9tre egy <code>data</code> package-et a f\u0151 package-\u00fcnk\u00f6n bel\u00fcl, majd abba tegy\u00fck bele a <code>SalaryData</code> oszt\u00e1lyt:</p> <pre><code>package hu.bme.aut.android.androidwallet.data\n\ndata class SalaryData(\nval isIncome: Boolean,\nval item: String,\nval price: String\n)\n</code></pre> <p>Az oszt\u00e1ly h\u00e1rom v\u00e1ltoz\u00f3ja az al\u00e1bbiakat reprezent\u00e1lja:</p> <ul> <li><code>isIncome - Boolean v\u00e1ltoz\u00f3 amely a kiad\u00e1s/bev\u00e9tel \u00e1llapot\u00e9rt felel.</code> </li> <li><code>item - kiad\u00e1s/bev\u00e9tel neve</code></li> <li><code>price - kiad\u00e1s/bev\u00e9tel \u00e9rt\u00e9ke</code></li> </ul> <p>Miut\u00e1n megvagyunk a modell oszt\u00e1llyal, \u00e1tt\u00e9rhet\u00fcnk a felhaszn\u00e1l\u00f3i fel\u00fcletre. K\u00e9sz\u00edts\u00fck el a f\u0151k\u00e9perny\u0151 v\u00e1z\u00e1t, amit majd a labor sor\u00e1n felt\u00f6lt\u00fcnk tartalommal. Ehhez hozzunk l\u00e9tre egy <code>screen</code> package-et a <code>ui</code> package-en bel\u00fcl, majd ebbe egy <code>MainScreen</code> nev\u0171 \u00faj Kotlin classt. \u00cdrjuk meg a f\u0151k\u00e9perny\u0151nek a fel\u00e9p\u00edt\u00e9s\u00e9t az al\u00e1bbi k\u00f3d alapj\u00e1n:</p> <pre><code>package hu.bme.aut.android.androidwallet.ui.screen\n\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.safeDrawingPadding\nimport androidx.compose.material3.BottomAppBar\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateListOf\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.tooling.preview.Preview\nimport hu.bme.aut.android.androidwallet.data.SalaryData\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun MainScreen() {\nval context = LocalContext.current\nval salaryItems = remember { mutableStateListOf&lt;SalaryData&gt;() }\n\nvar isIncome by remember { mutableStateOf(false) }\nvar item by remember { mutableStateOf(\"\") }\nvar price by remember { mutableStateOf(\"\") }\n\n\n\nScaffold(\nmodifier = Modifier.safeDrawingPadding(),\ntopBar = {\n\n///TODO (topbar)\nTopAppBar(title = { Text(text = \"TopAppbar\") })\n\n},\nfloatingActionButton = {\n///TODO (floatingactionbutton)\n\n},\ncontent =\n{ innerPadding -&gt;\n\n///TODO (lista)\nText(\ntext = \"content\",\nmodifier = Modifier.padding(innerPadding)\n)\n\n\n},\nbottomBar = {\nBottomAppBar {\n///TODO (TextFields)\nText(text = \"BottomAppBar\")\n\n}\n\n}\n)\n}\n\n@Composable\n@Preview\nfun PreviewMainScreen() {\nMainScreen()\n}\n</code></pre> <p>A <code>MainScreen</code> tartalmaz egy <code>Scaffold</code>-ot, ami seg\u00edt minket a fel\u00fclet strukt\u00far\u00e1j\u00e1nak kialak\u00edt\u00e1ban. A <code>Scaffold</code> l\u00e9nyege, hogy megad egy v\u00e1zat (\u00e1llv\u00e1nyt), aminek az el\u0151re defini\u00e1lt helyeire (lyukaiba) tudunk saj\u00e1t Composable-\u00f6ket illeszteni.</p> <p>Ahhoz, hogy az alkalmaz\u00e1sunk m\u00e1ris futtathat\u00f3 legyen, \u00e9s ki tudjuk pr\u00f3b\u00e1lni minden l\u00e9p\u00e9s ut\u00e1n, cser\u00e9lj\u00fck le a <code>MainActivity</code> tartalm\u00e1t:</p> <pre><code>package hu.bme.aut.android.androidwallet\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.enableEdgeToEdge\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.tooling.preview.Preview\nimport hu.bme.aut.android.androidwallet.ui.screen.MainScreen\nimport hu.bme.aut.android.androidwallet.ui.theme.AndroidWalletTheme\n\nclass MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nAndroidWalletTheme {\nMainScreen()\n}\n}\n}\n}\n\n@Preview(showBackground = true)\n@Composable\nfun PreviewMainActivity() {\nAndroidWalletTheme {\nMainScreen()\n}\n}\n</code></pre> <p>Jelenleg \u00edgy n\u00e9z ki az alkalmaz\u00e1sunk:</p> <p> </p>"},{"location":"laborok/03-android-ui-adv/#a-menusav-elkeszitese-1-pont","title":"A men\u00fcs\u00e1v elk\u00e9sz\u00edt\u00e9se ( 1 pont)","text":"<p>Azt szeretn\u00e9nk, hogy a k\u00e9perny\u0151 tetej\u00e9n legyen egy <code>ActionBar</code> az alkalmaz\u00e1s nev\u00e9vel \u00e9s egy t\u00f6rl\u00e9si opci\u00f3val, vagy ak\u00e1r egy leg\u00f6rd\u00fcl\u0151 men\u00fcvel. Mint feljebb l\u00e1ttuk, ehhez a megval\u00f3s\u00edt\u00e1shoz, nagyon j\u00f3l alkalmazhat\u00f3 a <code>Scaffold</code> Composable, ugyanis ennek van egy topBar attrib\u00fatuma, aminek k\u00f6nnyen adhatunk egy ilyen <code>ActionBar</code>-t. </p> <p>Hozzunk l\u00e9tre egy \u00faj package-et a m\u00e1r megl\u00e9v\u0151 <code>ui</code> csomagban <code>view</code> n\u00e9ven, majd ezen bel\u00fcl egy \u00faj Kotlin classt <code>TopBar</code> n\u00e9ven. T\u00f6lts\u00fck f\u00f6l a f\u00e1jlt az al\u00e1bbi k\u00f3ddal:</p> <pre><code>package hu.bme.aut.android.androidwallet.ui.view\n\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Clear\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.vector.ImageVector\nimport androidx.compose.ui.tooling.preview.Preview\n\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun TopBar(title: String, icon: ImageVector, onIconClick: () -&gt; Unit) {\nTopAppBar(\ntitle = { Text(text = title) },\nactions = {\nIconButton(onClick = onIconClick) {\nIcon(imageVector = icon, contentDescription = \"Delete\", tint = Color.Red)\n}\n},\ncolors = TopAppBarDefaults.topAppBarColors(containerColor = MaterialTheme.colorScheme.inversePrimary)\n)\n}\n\n@Preview\n@Composable\n@OptIn(ExperimentalMaterial3Api::class)\nfun PreviewTopBar() {\nTopBar(title = \"AndroidWallet\", icon = Icons.Default.Clear) {\n\n}\n}\n</code></pre> <p>A <code>TopAppBar</code>-nak a c\u00edm \u00e9s a sz\u00edn mellett megadtunk egy akci\u00f3t is: egy <code>IconButton</code>-t amivel a lista t\u00f6rl\u00e9s\u00e9t fogjuk majd megval\u00f3s\u00edtani.</p> <p>Miut\u00e1n elk\u00e9sz\u00fclt\u00fcnk a <code>TopBar</code>-unkkal, illessz\u00fck is ezt be a <code>MainScreen</code> beli <code>Scaffold</code> megfelel\u0151 hely\u00e9re. Ezt a k\u00f6vetkez\u0151 k\u00e9ppen tessz\u00fck meg: adunk neki egy tetsz\u0151leges title-t (\u00e1ltal\u00e1ban az alkalmaz\u00e1s nev\u00e9t), ez most Android Wallet lesz, majd egy icon-t. Haszn\u00e1ljuk az Android Studio be\u00e9p\u00edtett iconjait. Ezut\u00e1n meg kell adnunk egy Lambd\u00e1t, aminek a seg\u00edts\u00e9g\u00e9vel le\u00edrjuk, hogy mi t\u00f6rt\u00e9njen, hogyha a felhaszn\u00e1l\u00f3 r\u00e1kattint az iconra. Jelen esetben ki kell \u00fcr\u00edten\u00fcnk a list\u00e1nkat. Mivel a list\u00e1nk \u00e1llapotk\u00e9nt van t\u00e1rolva <code>val salaryItems = remember { mutableStateListOf&lt;SalaryData&gt;() }</code>, ez\u00e9rt ha v\u00e1ltoz\u00e1s t\u00f6rt\u00e9nik, akkor az \u00f6sszes Composable \u00fajrafordul ami f\u00fcgg t\u0151le:</p> <pre><code>Scaffold(\nmodifier = Modifier.safeDrawingPadding(),\ntopBar = {\nTopBar(\ntitle = stringResource(id = R.string.app_name),\nicon = Icons.Default.Clear,\nonIconClick = {\nsalaryItems.clear()\n}\n)\n},\nfloatingActionButton = {\n...\n</code></pre> <p>Ha ezzel megvagyunk, akkor m\u00e1r a k\u00f6vetkez\u0151t kell l\u00e1tnunk az alkalmaz\u00e1sunkban:</p> <p> </p> <p>Ezzel a <code>TopBar</code> k\u00e9sz is. Folytassuk most a beviteli r\u00e9sszel, amit az oldal alj\u00e1n tal\u00e1lhat\u00f3 <code>BottomAppBar</code>-ban fogunk megval\u00f3s\u00edtani.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a TopBar Composable Kotlin k\u00f3dja, a neptun k\u00f3dod kommentk\u00e9nt, illetve a fut\u00f3 alkalmaz\u00e1s (emul\u00e1toron vagy a k\u00e9sz\u00fcl\u00e9ket t\u00fcrk\u00f6zve)! A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/03-android-ui-adv/#beviteli-mezok-megvalositasa-1-pont","title":"Beviteli mez\u0151k megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>A beviteli r\u00e9szt ez\u00fattal nem egy k\u00fcl\u00f6n Composable-ben, hanem a <code>MainScreen</code>-en bel\u00fcli <code>Scaffold</code>-ban, helyben fogjuk megval\u00f3s\u00edtani. </p> <p>Ide ker\u00fcl egy <code>IconButton</code>, ami a tranzakci\u00f3 ir\u00e1ny\u00e1t mutatja, majd k\u00e9t <code>OutlinedTextField</code> a n\u00e9vnek \u00e9s az \u00e1rnak. </p> <p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt t\u00f6lts\u00fck le a tranzakci\u00f3 ir\u00e1ny\u00e1hoz haszn\u00e1lt er\u0151forr\u00e1sokat! </p> <p>Let\u00f6lt\u00e9s ut\u00e1n m\u00e1soljuk be a mappa tartalm\u00e1t a projekt\u00fcnk er\u0151forr\u00e1sait tartalmaz\u00f3 res mapp\u00e1ba. (...\\AndroidWallet\\app\\src\\main\\res)</p> <p>Illessz\u00fck be az al\u00e1bbi k\u00f3dot a <code>Scaffold</code> megfelel\u0151 pontj\u00e1ra:</p> <pre><code>bottomBar = {\nBottomAppBar {\n\nRow(\nmodifier = Modifier\n.fillMaxWidth(),\n) {\nIconToggleButton(\nmodifier = Modifier.size(64.dp),\nchecked = isIncome,\nonCheckedChange = { isIncome = !isIncome },\n) {\nImage(\nmodifier = Modifier.size(64.dp),\npainter = painterResource(id = if (isIncome) R.drawable.ic_income else R.drawable.ic_expense),\ncontentDescription = \"expense/income button\"\n)\n}\nOutlinedTextField(\nlabel = { Text(stringResource(R.string.item)) },\nmodifier = Modifier\n.padding(start = 8.dp, end = 8.dp)\n.weight(2f),\nsingleLine = true,\nkeyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Text),\nvalue = item,\nonValueChange = {\nitem = it\n}\n)\nOutlinedTextField(\nlabel = { Text(stringResource(R.string.price)) },\nmodifier = Modifier\n.padding(start = 8.dp, end = 8.dp)\n.weight(1f),\nsingleLine = true,\nkeyboardOptions = KeyboardOptions(keyboardType = KeyboardType.Number),\nvalue = price,\nonValueChange = {\nprice = it\n}\n)\n}\n}\n}\n</code></pre> <p>Itt szint\u00e9n elv\u00e9gezz\u00fck a sz\u00fcks\u00e9ges be\u00e1ll\u00edt\u00e1sokat. A legt\u00f6bb az\u00e9rt felel, hogy bar\u00e1tibb UI-t l\u00e1thassunk, viszont a legfontosabb a <code>value</code>, valamint az <code>onValueChange</code> \u00e9rt\u00e9ke, ugyanis, ha ezek nincsenek be\u00e1ll\u00edtva, akkor nem fog megjelenni a beg\u00e9pelt sz\u00f6veg. A <code>value</code>-nak \u00e1tadjuk az item \u00e9rt\u00e9ket, valamint az <code>onValueChange</code> eset\u00e9n be\u00e1ll\u00edtjuk, hogy minden egyes karakter le\u00fct\u00e9sn\u00e9l \u00faj \u00e9rt\u00e9ket kapjon a v\u00e1ltoz\u00f3. Ezzel \u00e9rhetj\u00fck el azt, hogy fut\u00e1si id\u0151ben l\u00e1thassuk a TextField \u00e9rt\u00e9k\u00e9t.</p> <p>\u00c1llapott\u00f3l f\u00fcgg\u0151 megjelen\u00edt\u00e9s</p> <p>Az <code>Image</code> painter attrib\u00fatum\u00e1n\u00e1l j\u00f3l megfigyelhet\u0151 a Jetpack Compose egyik nagy el\u0151nye. A megjelen\u00edtett k\u00e9pet egy \u00e1llapott\u00f3l tessz\u00fck f\u00fcgg\u0151v\u00e9, amit ott helyben meg tudunk oldani: <pre><code>...\npainter = painterResource(id = if (isIncome) R.drawable.ic_income else R.drawable.ic_expense)\n...\n</code></pre></p>"},{"location":"laborok/03-android-ui-adv/#uj-elem-felvetele","title":"\u00daj elem felv\u00e9tele","text":"<p>\u00daj elem felv\u00e9tel\u00e9t a <code>FloatingActionButton</code> gomb megnyom\u00e1s\u00e1nak hat\u00e1s\u00e1ra fogunk felvenni. Szerencs\u00e9re a <code>Scaffold</code> ennek is biztos\u00edt helyet. Illessz\u00fck teh\u00e1t be az al\u00e1bbi k\u00f3dot:</p> <pre><code>floatingActionButton = {\nLargeFloatingActionButton(\nshape = CircleShape,\nonClick = {\nif (item.isNotEmpty() &amp;&amp; price.isNotEmpty()) {\nsalaryItems += SalaryData(isIncome, item, price)\n} else {\n\nToast.makeText(\ncontext,\n\"\",\nToast.LENGTH_SHORT\n)\n.show()\n}\n})\n{\nImage(\nimageVector = Icons.Default.Add,\ncontentDescription = \"save button\"\n)\n}\n},\n</code></pre> <p>Az itteni gomb eset\u00e9n az onClick esem\u00e9nyt el\u0151sz\u00f6r egy felt\u00e9tellel ellen\u0151rizz\u00fck. Ha \u00fcresen maradt a n\u00e9v vagy az \u00e1r, akkor egy <code>Toast</code> \u00fczenettel figyelmeztetj\u00fck a felhaszn\u00e1l\u00f3t. Ha megfelel\u0151 a kit\u00f6lt\u00e9s, akkor a salaryItems list\u00e1hoz hozz\u00e1adunk egy \u00faj elemet a bevitt adatnak megfelel\u0151en. Ez az elem a m\u00e1r kor\u00e1bban defini\u00e1lt <code>data class</code> egy p\u00e9ld\u00e1nya. </p> <p>Jelenleg \u00edgy n\u00e9z ki a fel\u00fclet\u00fcnk:</p> <p> </p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a MainScreen k\u00f3dja, a fut\u00f3 alkalmaz\u00e1s (emul\u00e1toron vagy a k\u00e9sz\u00fcl\u00e9ket t\u00fcrk\u00f6zve), valamint a neptun k\u00f3dod a beviteli mez\u0151be bele\u00edrva elemk\u00e9nt a list\u00e1ban, vagy a k\u00f3dban kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/03-android-ui-adv/#lista-elkeszitese-1-pont","title":"Lista elk\u00e9sz\u00edt\u00e9se (1 pont)","text":""},{"location":"laborok/03-android-ui-adv/#listaelem-letrehozasa","title":"Listaelem l\u00e9trehoz\u00e1sa","text":"<p>A vez\u00e9rl\u0151ink megvannak, azonban ahhoz, hogy a list\u00e1t elk\u00e9sz\u00edts\u00fck, l\u00e9tre kell hoznunk egy listaelemet, amit majd a <code>LazyColumn</code>-ben fogunk l\u00e1tni. </p> <ul> <li>Egy listaelem fel\u00e9p\u00edt\u00e9se:<ul> <li>Ikon a p\u00e9nzforgalom ir\u00e1ny\u00e1t\u00f3l f\u00fcgg\u0151en.</li> <li>A megadott megnevez\u00e9s \u00e9s alatta az \u00f6sszeg.</li> <li>Egy gomb a t\u00e9tel t\u00f6rl\u00e9s\u00e9re.</li> </ul> </li> </ul> <p>Hozzunk l\u00e9tre egy a <code>ui/view</code> package-be egy \u00faj Kotlin f\u00e1jlt <code>SalaryCard</code> n\u00e9ven.</p> <p>Ennek a k\u00f6vetkez\u0151 k\u00e9ppen kell kin\u00e9znie:</p> <pre><code>package hu.bme.aut.android.androidwallet.ui.view\n\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Delete\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport hu.bme.aut.android.androidwallet.R\n\n@Composable\nfun SalaryCard(isIncome: Boolean, item: String, price: String) {\nRow(\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp)\n) {\nImage(\nmodifier = Modifier.size(64.dp),\npainter = painterResource(id = if (isIncome) R.drawable.ic_income else R.drawable.ic_expense),\ncontentDescription = \"Income/Expense\"\n)\nSpacer(modifier = Modifier.size(8.dp))\nColumn(modifier = Modifier.weight(1f)) {\nText(\nfontSize = 24.sp,\nfontWeight = FontWeight.Bold,\ntext = item,\nmaxLines = 1\n)\nSpacer(modifier = Modifier.size(12.dp))\nText(\ntext = price,\ncolor = Color.Gray,\nmaxLines = 1\n)\n}\nSpacer(modifier = Modifier.size(8.dp))\nIconButton(\nmodifier = Modifier.align(Alignment.CenterVertically),\nonClick = {\n///TODO\n}\n) {\nImage(\nimageVector = Icons.Default.Delete,\ncontentDescription = \"delete button\",\n)\n}\n}\n}\n\n@Composable\n@Preview(showBackground = true)\nfun PreviewIncomeSalaryCard() {\nSalaryCard(isIncome = true, item = \"item\", price = \"500 Ft\")\n}\n\n@Composable\n@Preview(showBackground = true)\nfun PreviewExpenseSalaryCard() {\nSalaryCard(isIncome = false, item = \"item\", price = \"500 Ft\")\n}\n</code></pre> <p>A SalaryCard Composable f\u00fcggv\u00e9ny 3 param\u00e9tert tartalmaz:</p> <ul> <li><code>isIncome - Boolean v\u00e1ltoz\u00f3 amely a kiad\u00e1s/bev\u00e9tel \u00e1llapot\u00e9rt felel.</code> </li> <li><code>item - kiad\u00e1s/bev\u00e9tel neve</code></li> <li><code>price - kiad\u00e1s/bev\u00e9tel \u00e9rt\u00e9ke</code></li> </ul> <p>A f\u00fcggv\u00e9nyen bel\u00fcl megtal\u00e1lhat\u00f3 egy <code>Row</code>, egy <code>Spacer</code>, egy <code>Column</code>, m\u00e9g egy <code>Spacer</code>, valamint egy <code>ImageButton</code>. A <code>Row</code> felel az\u00e9rt, hogy az elemeket horizont\u00e1lisan egym\u00e1s mell\u00e9 lehessen rakni, a <code>Column</code> pedig, hogy az elemeket egym\u00e1s al\u00e1. (A kiad\u00e1s/bev\u00e9tel neve, illetve \u00e9rt\u00e9ke.) A k\u00e9pet egy <code>Image</code> Composable-lel helyezz\u00fck el. Itt a <code>modifier</code> seg\u00edts\u00e9g\u00e9vel sok fajta be\u00e1ll\u00edt\u00e1sra van lehet\u0151s\u00e9g, most csak a size-zal foglalkozunk, hogy \u00e1tl\u00e1that\u00f3bb legyen a k\u00f3d. A <code>painter</code> seg\u00edts\u00e9g\u00e9vel adhatjuk meg a k\u00e9pet, amit szeretn\u00e9nk megjelen\u00edteni, ezt egy if-else el\u00e1gaz\u00e1ssal oldjuk meg, m\u00e9gpedig a param\u00e9terk\u00e9nt kapott isIncome seg\u00edts\u00e9g\u00e9vel. Miut\u00e1n megvagyunk az <code>Image</code>-dzsel, a <code>Row</code>-n bel\u00fcl a <code>Column</code>-be elhelyez\u00fcnk kett\u0151 <code>Text</code>-et a marad\u00e9k kett\u0151 param\u00e9terrel. A sor v\u00e9gi t\u00f6rl\u0151 gomb funkcionalit\u00e1s\u00e1nak megold\u00e1sa \u00f6n\u00e1ll\u00f3 feladat lesz.</p>"},{"location":"laborok/03-android-ui-adv/#listaelem-peldanyositasa-lazycolumn-ben","title":"Listaelem p\u00e9ld\u00e1nyos\u00edt\u00e1sa LazyColumn-ben","text":"<p>V\u00e9g\u00fcl a <code>MainScreen</code>-\u00fcnk\u00f6n a <code>Scaffold</code> content r\u00e9sz\u00e9be val\u00f3s\u00edtsuk meg a list\u00e1t:</p> <pre><code>content =\n{ innerPadding -&gt;\nBox(\nmodifier = Modifier\n.fillMaxSize()\n.padding(innerPadding)\n) {\nif (salaryItems.size == 0) {\nText(\ntext = stringResource(R.string.label_empty_list),\nmodifier = Modifier.fillMaxSize(),\ntextAlign = TextAlign.Center,\n)\n} else\nLazyColumn(\nmodifier = Modifier\n.fillMaxSize()\n) {\nitems(salaryItems.size) {\nSalaryCard(\nisIncome = salaryItems[it].isIncome,\nitem = salaryItems[it].item,\nprice = \"${salaryItems[it].price} Ft\",\n)\nif (salaryItems.size - 1 &gt; it) {\nHorizontalDivider(modifier = Modifier.fillMaxWidth())\n}\n}\n}\n\n}\n},\n</code></pre> <p>Itt is megfigyelhetj\u00fck, hogy a lista elemsz\u00e1m\u00e1t\u00f3l (\u00e1llapot\u00e1t\u00f3l) f\u00fcgg\u0151en vagy egy sz\u00f6veget, vagy a <code>LazyColumn</code> list\u00e1t helyezz\u00fck el a fel\u00fcletre. </p> <p>A <code>LazyColumn</code>-\u00f6n bel\u00fcl az <code>items(..)</code> f\u00fcggv\u00e9nynek egy m\u00e9retet kell \u00e1tadni, ami azt jel\u00f6li, hogy mekkora a lista. Ez ut\u00e1n a blokk t\u00f6rzs\u00e9ben el kell helyezni azt a Composable elemet amit l\u00e1tni szeretn\u00e9nk a list\u00e1ban. Ez a <code>SalaryCard</code> Composable lesz, amit m\u00e1r kor\u00e1bban implement\u00e1ltunk. Ennek param\u00e9terk\u00e9nt megadjuk az salaryItems aktu\u00e1lis (<code>it</code>) elemeit. Ezen fog v\u00e9gig iter\u00e1lni a <code>LazyColumn</code>, \u00e9s minden elemet ki fog rajzolni.</p> <p>Ezzel a l\u00e9p\u00e9ssel el\u00e9rkezt\u00fcnk a k\u00e9sz alkalmaz\u00e1shoz, \u00e9s ind\u00edt\u00e1s sor\u00e1n a k\u00f6vetkez\u0151t kell l\u00e1tnunk:</p> <p> </p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a LazyColumn k\u00f3dja, a fut\u00f3 alkalmaz\u00e1s (emul\u00e1toron vagy a k\u00e9sz\u00fcl\u00e9ket t\u00fcrk\u00f6zve), valamint a neptun k\u00f3dod egy elemk\u00e9nt a list\u00e1ban, vagy a k\u00f3dban kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/03-android-ui-adv/#onallo-feladatok","title":"\u00d6n\u00e1ll\u00f3 feladatok","text":""},{"location":"laborok/03-android-ui-adv/#osszegzo-mezo-1-pont","title":"\u00d6sszegz\u0151 mez\u0151 (1 pont)","text":"<p>Vegy\u00fcnk fel egy \u00f6sszegz\u0151 mez\u0151t valahova a fel\u00fcletre, amely minden bevitt \u00e9rt\u00e9k ut\u00e1n friss\u00fcl. Figyelj\u00fcnk arra, hogyha nincs m\u00e9g egyetlen bejegyz\u00e9s sem, akkor ne jelenjen meg semmi, valamint a felhaszn\u00e1l\u00f3 nem m\u00ednusz karakter alapj\u00e1n \u00e1ll\u00edtja a kiad\u00e1s/bev\u00e9tel \u00e1llapotot, hanem a kapcsol\u00f3 alapj\u00e1n kell eld\u00f6nten\u00fcnk, hogy pozit\u00edv vagy negat\u00edv \u00e9rt\u00e9k. </p> <p>Tipp</p> <p>\u00c9rdemes haszn\u00e1lni a <code>Modifier.alpha()</code> param\u00e9tert.</p> <p>Figyelem</p> <p>Figyelj\u00fcnk az \u00f6sszegz\u0151 mez\u0151 helyes m\u0171k\u00f6d\u00e9s\u00e9re! Ha t\u00f6r\u00f6lj\u00fck a list\u00e1b\u00f3l a bejegyz\u00e9seket, akkor a sz\u00e1ml\u00e1l\u00f3 is null\u00e1z\u00f3djon \u00e9s t\u0171nj\u00f6n el! (Nem el\u00e9g csak akkor elt\u00fcntetni, hogyha a <code>sum</code> 0 \u00e9rt\u00e9ket vesz fel.) (-0.5 pont)</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az \u00f6sszegz\u0151 mez\u0151 haszn\u00e1lata (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a k\u00f3dja, valamint a neptun k\u00f3dod valamelyik term\u00e9k nevek\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/03-android-ui-adv/#egyes-elemek-torlese-1-pont","title":"Egyes elemek t\u00f6rl\u00e9se (1 pont)","text":"<p>Az egyes listaelemeken m\u00e1r jelen van a t\u00f6rl\u00e9s gomb, azonban m\u00e9g nem m\u0171k\u00f6dik. Val\u00f3s\u00edtsuk meg az egyedi t\u00f6rl\u00e9st!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a t\u00f6rl\u00e9s k\u00f3dja, az emul\u00e1tor a m\u0171k\u00f6d\u0151 alkalmaz\u00e1sr\u00f3l, valamint a neptun k\u00f3dod egy elemk\u00e9nt a list\u00e1ban, vagy a k\u00f3dban kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/03-android-ui-adv/#bonus","title":"Bonus","text":"<p>M\u00f3dos\u00edtsuk a TopBar men\u00fc gombj\u00e1t, \u00fagy hogy leg\u00f6rd\u00fcl\u0151 men\u00fc lista legyen bel\u0151le, ahol 3 opci\u00f3 tal\u00e1lhat\u00f3 meg.</p> <ul> <li>Delete Expenses</li> <li>Delete Incomes</li> <li>Delete All</li> </ul> <p>Ehhez m\u00f3dos\u00edtsuk a TopBar Composable f\u00fcggv\u00e9ny\u00fcnket.</p> Seg\u00edts\u00e9g <ul> <li>Plusz k\u00e9t lambda oper\u00e1tor</li> <li>DropdownMenu</li> <li>DropdownMenuItem</li> <li>.filter haszn\u00e1lata a list\u00e1n/sum-on</li> </ul>"},{"location":"laborok/04-android-ui-charts/","title":"Labor 04 - UI,HorizontalPager, Charts - HR alkalmaz\u00e1s","text":""},{"location":"laborok/04-android-ui-charts/#bevezeto","title":"Bevezet\u0151","text":"<p>A labor sor\u00e1n egy HR alkalmaz\u00e1st k\u00e9sz\u00edt\u00fcnk el, amelybe bel\u00e9pve a felhaszn\u00e1l\u00f3 meg tudja tekinteni szem\u00e9lyes adatait, illetve szabads\u00e1got tud r\u00f6gz\u00edteni. Az alkalmaz\u00e1s nem haszn\u00e1l perzisztens adatt\u00e1rol\u00e1st \u00e9s val\u00f3s bejelentkeztet\u00e9st, csak demo adatokkal dolgozik. A labor f\u0151 t\u00e9m\u00e1i a HorizontalPagerrel val\u00f3 fel\u00fcletk\u00e9sz\u00edt\u00e9s, illetve a Chartok lesznek.</p> <p> </p> <p>IMSc</p> <p>A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151.</p>"},{"location":"laborok/04-android-ui-charts/#ertekeles","title":"\u00c9rt\u00e9kel\u00e9s","text":"<p>Oszt\u00e1lyz\u00e1s:</p> <ul> <li>F\u0151men\u00fc k\u00e9perny\u0151: 1 pont</li> <li>Profil k\u00e9perny\u0151: 1 pont</li> <li>Szabads\u00e1g k\u00e9perny\u0151: 1 pont</li> <li>D\u00e1tumv\u00e1laszt\u00f3, napok cs\u00f6kkent\u00e9se: 1 pont</li> <li>\u00d6n\u00e1ll\u00f3 feladat (szabads\u00e1g tov\u00e1bbfejleszt\u00e9se): 1 pont</li> </ul> <p>IMSc: Fizet\u00e9s men\u00fcpont megval\u00f3s\u00edt\u00e1sa</p> <ul> <li>K\u00f6rdiagram: 1 IMSc pont</li> <li>Oszlopdiagram: 1 IMSc pont</li> </ul>"},{"location":"laborok/04-android-ui-charts/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/04-android-ui-charts/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol>"},{"location":"laborok/04-android-ui-charts/#projekt-letrehozasa","title":"Projekt l\u00e9trehoz\u00e1sa","text":"<p>Hozzunk l\u00e9tre egy \u00faj Android projektet 'Empty Activity' sablonnal! Az alkalmaz\u00e1s neve legyen <code>WorkplaceApp</code>, a Package name pedig <code>hu.bme.aut.android.workplaceapp</code>.</p> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 WorkplaceApp k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p> <p>Haszn\u00e1lhatjuk az alap\u00e9rtelmezett 24-es minimum SDK szintet \u00e9s a Kotlin DSL-t.</p> <p>El\u0151zetesen t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt \u00e9s bontsuk ki. A benne l\u00e9v\u0151 mipmap k\u00f6nyvt\u00e1rat m\u00e1soljuk be az app/src/main/res mapp\u00e1ba (Studio-ban res mapp\u00e1n \u00e1llva <code>Ctrl+V</code>).</p> <p>K\u00e9perny\u0151k kezel\u00e9se Android alkalmaz\u00e1sokban</p> <p>A legt\u00f6bb mobilalkalmaz\u00e1s j\u00f3l elk\u00fcl\u00f6n\u00edthet\u0151 oldalak/k\u00e9perny\u0151k kombin\u00e1ci\u00f3j\u00e1b\u00f3l \u00e9p\u00fcl fel. Az egyik els\u0151 f\u0151 d\u00f6nt\u00e9s, amit alkalmaz\u00e1stervez\u00e9s k\u00f6zben meg kell hoznunk, ezeknek a k\u00e9perny\u0151knek a fel\u00e9p\u00edt\u00e9se, illetve a k\u00e9perny\u0151k k\u00f6z\u00f6tti navig\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa. Egy Android alap\u00fa alkalmaz\u00e1s eset\u00e9n t\u00f6bb megold\u00e1s k\u00f6z\u00fcl is v\u00e1laszthatunk:</p> <ul> <li>Activity alap\u00fa megk\u00f6zel\u00edt\u00e9s: Minden k\u00e9perny\u0151 egy Activity. Mivel az Activity egy rendszerszint\u0171 komponense az Androidnak, ez\u00e9rt ennek kezel\u00e9s\u00e9\u00e9rt is az oper\u00e1ci\u00f3s rendszer a felel\u0151s. Mi k\u00f6zvetlen\u00fcl sose p\u00e9ld\u00e1nyos\u00edtjuk, hanem Intent-et k\u00fcld\u00fcnk a rendszer fel\u00e9. A navig\u00e1ci\u00f3\u00e9rt is a rendszer felel, bizonyos opci\u00f3kat flagek seg\u00edts\u00e9g\u00e9vel tudunk be\u00e1ll\u00edtani.</li> <li>Composable alap\u00fa megk\u00f6zel\u00edt\u00e9s: Ez esetben a k\u00e9perny\u0151ink egy vagy t\u00f6bb Composable elemb\u0151l \u00e9p\u00fclnek fel. Ezeknek a kezel\u00e9se az alkalmaz\u00e1s szintj\u00e9n t\u00f6rt\u00e9nik meg, emiatt mindenk\u00e9pp sz\u00fcks\u00e9ges egy Activity, mely a megjelen\u00edt\u00e9s\u00e9rt felel. A megjelen\u00edt\u00e9st illetve a navig\u00e1ci\u00f3t a NavGraph oszt\u00e1ly v\u00e9gzi.</li> <li>Egy\u00e9b egyedi megold\u00e1s: K\u00fcls\u0151 vagy saj\u00e1t k\u00f6nyvt\u00e1r haszn\u00e1lata a megjelen\u00edt\u00e9shez, mely tipikusan az alap View oszt\u00e1lyb\u00f3l sz\u00e1rmazik le. Ilyen p\u00e9ld\u00e1ul a r\u00e9gi Conductor, illetve a Jetpack Compose.</li> </ul> <p>R\u00e9gebben az alkalmaz\u00e1sok az Activity alap\u00fa megk\u00f6zel\u00edt\u00e9st haszn\u00e1lt\u00e1k, k\u00e9s\u0151bb azonban \u00e1tt\u00e9rtek a Fragmentekre. Az ilyen alkalmaz\u00e1sokn\u00e1l \u00f6sszesen egy f\u0151 Activity van, mely tartalmazza azt a FragmentManager p\u00e9ld\u00e1nyt, amit a k\u00e9s\u0151bbiekben a Fragment alap\u00fa k\u00e9perny\u0151k megjelen\u00edt\u00e9s\u00e9re haszn\u00e1lunk.</p> <p>Ez egy alapvet\u0151en rugalmas \u00e9s j\u00f3l haszn\u00e1lhat\u00f3 megold\u00e1s volt, azonban ehhez r\u00e9szleteiben meg kellett ismerni a FragmentManager m\u0171k\u00f6d\u00e9s\u00e9t, k\u00fcl\u00f6nben k\u00f6nnyen hib\u00e1kba futhattunk. Ennek a megold\u00e1s\u00e1ra fejlesztette ki a Google a Navigation Component csomagot, mellyel az Android Studi\u00f3 k\u00f6rnyezet\u00e9ben egy grafikus eszk\u00f6zzel k\u00f6nnyen l\u00e9tre tudjuk hozni az oldalak k\u00f6z\u00f6tti navig\u00e1ci\u00f3t, illetve ezt a k\u00f3db\u00f3l egyszer\u0171en el tudjuk ind\u00edtani. </p> <p>A Jetpack Compose-ban m\u00e1r a NavHost felel a navig\u00e1ci\u00f3\u00e9rt, \u00e9s k\u00fcl\u00f6n-k\u00fcl\u00f6n h\u00edvja meg az egyes Composable f\u00fcggv\u00e9nyeket.</p>"},{"location":"laborok/04-android-ui-charts/#navhost-compose-inicializalas","title":"NavHost Compose inicializ\u00e1l\u00e1s","text":"<p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt adjuk hozz\u00e1 a Navigation Component csomagot az \u00fcres projekt\u00fcnkh\u00f6z. Ehhez a modul szint\u0171 <code>build.gradle.kts</code> f\u00e1jlra illetve a <code>libs.versions.toml</code> f\u00e1jlra lesz sz\u00fcks\u00e9g\u00fcnk. Keress\u00fck meg ezeket, majd \u00edrjuk bele a k\u00f6vetkez\u0151 f\u00fcgg\u0151s\u00e9get:</p> <p><code>libs.versions.toml</code> <pre><code>[versions]\n...\nnavigationCompose = \"2.7.7\"\n\n\n[libs]\n...\nandroidx-navigation-compose = { module = \"androidx.navigation:navigation-compose\", version.ref = \"navigationCompose\" }\n</code></pre></p> <p><code>build.gradle.kts</code></p> <pre><code>dependencies {\n    ...\n    implementation(libs.androidx.navigation.compose)\n\n}\n</code></pre> <p>Ha ezzel megvagyunk akkor Syncelj\u00fck a projektet, a jobb f\u00f6ls\u0151 sarokban l\u00e9v\u0151 <code>Sync Now</code> gombbal.</p> <p>Sync</p> <p>Figyelj\u00fcnk r\u00e1, hogy Syncelj\u00fck, ugyanis, hogy ha ez a l\u00e9p\u00e9s kimarad, akkor nem fogja megtal\u00e1lni a sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9geket, \u00e9s k\u00e9s\u0151bb ez gondot okozhat!</p> <p>A Navigation Component Jetpack Compose haszn\u00e1lat\u00e1val is navig\u00e1ci\u00f3s gr\u00e1fot alkalmaz a k\u00e9perny\u0151k \u00e9s a k\u00f6z\u00f6tt\u00fck l\u00e9v\u0151 kapcsolatok defini\u00e1l\u00e1s\u00e1ra. Ezt a gr\u00e1fot azonban k\u00f6zvetlen\u00fcl Kotlin k\u00f3dban tudjuk megadni. L\u00e9trehoz\u00e1s\u00e1hoz k\u00f6vess\u00fck az al\u00e1bbi l\u00e9p\u00e9seket:</p> <ol> <li> <p>Hozzuk l\u00e9tre a navig\u00e1ci\u00f3s gr\u00e1fot a Jetpack Compose haszn\u00e1lat\u00e1val.</p> </li> <li> <p>K\u00e9sz\u00edts\u00fcnk egy package-et <code>navigation</code> n\u00e9ven, majd ebbe a package-be egy \u00faj Kotlin File-t <code>NavGraph</code> n\u00e9ven (jobb klikk -&gt; New Kotlin Class/File)</p> </li> <li> <p>Az el\u0151z\u0151 laborokon l\u00e1tott <code>NavGraph</code>-hoz hasonl\u00f3an hozzuk l\u00e9tre a <code>NavGraph</code>-ot: <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nimport androidx.compose.runtime.Composable\nimport androidx.navigation.NavHostController\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.rememberNavController\n\n@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n){\nNavHost(\nnavController = navController,\nstartDestination = Screen.Screen1.route\n){\n//        composable(Screen.Screen1.route){\n//            Screen1()\n//        }\n//        composable(Screen.Screen2.route){\n//            Screen2()\n//        }\n}\n}\n</code></pre></p> </li> <li> <p>Mint l\u00e1that\u00f3, itt a sima k\u00e9zzel megadott stringek helyett hivatkoz\u00e1sokat haszn\u00e1lunk a destination-\u00f6k azonos\u00edt\u00e1s\u00e1ra. Ezeket a hivatkoz\u00e1sokat egy k\u00fcl\u00f6n <code>Screen</code> sealed class-ban gy\u0171jtj\u00fck \u00f6ssze: <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nsealed class Screen(val route: String) {\nobject Menu : Screen(\"menu\")\nobject Screen1: Screen(\"screen1\")\nobject Screen2: Screen(\"screen2\")\n}\n</code></pre></p> </li> </ol> <p>sealed class</p> <p>A Kotlin sealed class-jai olyan oszt\u00e1lyok, amelyekb\u0151l korl\u00e1tozott az \u00f6r\u00f6kl\u00e9s, \u00e9s ford\u00edt\u00e1si id\u0151ben minden lesz\u00e1rmazott oszt\u00e1lya ismert. Ezeket az oszt\u00e1lyokat az enumokhoz hasonl\u00f3 m\u00f3don tudjuk alkalmazni. Jelen esetben a Menu val\u00f3j\u00e1ban nem a Screen k\u00f6zvetlen lesz\u00e1rmazottja, hanem anonim lesz\u00e1rmazott oszt\u00e1lya.</p> <ol> <li>Hogy ha ezzel megvagyunk, m\u00e1r, csak b\u0151v\u00edteni kell ig\u00e9ny szerint ezt a <code>NavGraph</code>-ot, illetve a <code>MainActivity</code>-ben, ezt a Composable f\u00fcggv\u00e9nyt kell megh\u00edvni, majd ez automatikusan a be\u00e1ll\u00edtott f\u0151k\u00e9perny\u0151t hozza be az alkalmaz\u00e1s elind\u00edt\u00e1sakor. <pre><code>package hu.bme.aut.android.workplaceapp\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.enableEdgeToEdge\nimport hu.bme.aut.android.workplaceapp.navigation.NavGraph\nimport hu.bme.aut.android.workplaceapp.ui.theme.WorkplaceAppTheme\n\nclass MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nWorkplaceAppTheme {\nNavGraph()\n}\n}\n}\n}\n</code></pre></li> </ol> <p>T\u00f6bb navig\u00e1ci\u00f3s gr\u00e1f</p> <p>A Jetpack Compose haszn\u00e1lat\u00e1val t\u00f6bb navig\u00e1ci\u00f3s gr\u00e1f l\u00e9trehoz\u00e1sa \u00e9s kezel\u00e9se is lehets\u00e9ges, azonban a legt\u00f6bb alkalmaz\u00e1sn\u00e1l elegend\u0151 egyetlen <code>NavGraph</code></p>"},{"location":"laborok/04-android-ui-charts/#fomenu-kepernyo-1-pont","title":"F\u0151men\u00fc k\u00e9perny\u0151 (1 pont)","text":"<p>Az els\u0151 k\u00e9perny\u0151, amit l\u00e9trehozunk, a f\u0151oldal lesz, melyr\u0151l a t\u00f6bbi oldalra tudunk navig\u00e1lni. A labor sor\u00e1n 2 funkci\u00f3t fogunk meghval\u00f3s\u00edtani, ezek a Profil \u00e9s a Szabads\u00e1g.</p> <p>A <code>MenuScreen</code>-en egy TopAppBar-t \u00e9s a gombokat szeretn\u00e9nk megjelen\u00edteni. </p> <p> </p> <p>El\u0151sz\u00f6r hozzunk l\u00e9tre egy <code>hu.bme.aut.android.workplaceapp.ui.view</code> package-et. Ebbe fognak ker\u00fclni az alapvet\u0151 fontoss\u00e1g\u00fa UI \u00e9p\u00edt\u0151elemeink:</p> <p><code>TopBar.kt</code>: </p> <pre><code>package hu.bme.aut.android.workplaceapp.ui.view\n\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.tooling.preview.Preview\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun TopBar(\nlabel: String = \"Title\"\n) {\nTopAppBar(\ntitle = { Text(text = label) },\ncolors = TopAppBarDefaults.topAppBarColors(\ncontainerColor = MaterialTheme.colorScheme.inversePrimary\n)\n)\n}\n\n@Composable\n@Preview\nfun PreviewTopBar() {\nTopBar(\"Workplace App\")\n}\n</code></pre> <p>Ez egy egyszer\u0171 AppBar, ennek seg\u00edts\u00e9g\u00e9vel elhelyezhet\u00fcnk c\u00edmet, k\u00fcl\u00f6nb\u0151z\u0151 action-\u00f6ket, valamint gombokat.</p> <p><code>ImageButton</code>:</p> <pre><code>package hu.bme.aut.android.workplaceapp.ui.view\n\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material3.OutlinedButton\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.darkColorScheme\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.painter.Painter\nimport androidx.compose.ui.layout.ContentScale\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.Dp\nimport androidx.compose.ui.unit.dp\nimport hu.bme.aut.android.workplaceapp.R\n\n@Composable\nfun ImageButton(\nmodifier: Modifier,\nlabel: String,\npainter: Painter,\nsize: Dp,\ncontentDescription: String? = null,\nonClick: () -&gt; Unit\n) {\nOutlinedButton(\nonClick = onClick,\nshape = RoundedCornerShape(16.dp),\ncontentPadding = PaddingValues(\nstart = 0.dp,\ntop = 0.dp,\nend = 0.dp,\nbottom = 0.dp\n),\nborder = BorderStroke(1.dp, darkColorScheme().onPrimary)\n\n) {\nBox(modifier = modifier.padding(0.dp)) {\nImage(\ncontentScale = ContentScale.Crop,\nmodifier = modifier\n.align(Alignment.Center)\n.size(size),\npainter = painter,\ncontentDescription = contentDescription\n)\nText(\ncolor = Color.Black,\nmodifier = modifier.align(Alignment.Center),\ntext = label\n)\n\n}\n}\n}\n\n@Composable\n@Preview\nfun PreviewImageButton() {\nImageButton(\nmodifier = Modifier,\nlabel = \"Holiday\",\npainter = painterResource(id = R.drawable.holiday),\nsize = 160.dp,\ncontentDescription = \"Holiday\",\nonClick = {}\n) }\n</code></pre> <p>Ez egy egyszer\u0171 gomb, amin k\u00e9peket \u00e9s sz\u00f6vekeget is k\u00f6nnyen tudunk elhelyezni. Az univerz\u00e1lis felhaszn\u00e1l\u00e1s \u00e9rdek\u00e9ben a l\u00e9nyeges attrib\u00fatumok kivezet\u00e9sre ker\u00fcltek param\u00e9terekk\u00e9nt. </p> <p>Most m\u00e1r minden rendelkez\u00e9s\u00fcnkre \u00e1ll, hogy meg\u00edrjuk a <code>MainScreen</code> k\u00e9perny\u0151nket is. Ehhez hozzunk l\u00e9tre egy \u00faj <code>hu.bme.aut.android.workplaceapp.feature</code> package-et. Ebben lesznek k\u00fcl\u00f6n package-ekben a k\u00e9perny\u0151ink. A <code>hu.bme.aut.android.workplaceapp.feature.menu</code> package-be hozzuk l\u00e9tre a  <code>MenuScreen</code> Kotlin File-t:</p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.menu\n\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport hu.bme.aut.android.workplaceapp.R\nimport hu.bme.aut.android.workplaceapp.ui.view.ImageButton\nimport hu.bme.aut.android.workplaceapp.ui.view.TopBar\n\n@Composable\nfun MenuScreen(\nmodifier: Modifier = Modifier,\nonProfileButtonClick: () -&gt; Unit,\nonHolidayButtonClick: () -&gt; Unit,\nonSalaryButtonClick: () -&gt; Unit,\nonCafeteriaButtonClick: () -&gt; Unit\n) {\nScaffold (\ntopBar = { TopBar(label = stringResource(id = R.string.app_name)) }\n) { innerPadding -&gt;\nBox(\nmodifier = modifier\n.fillMaxSize()\n.background(MaterialTheme.colorScheme.background)\n.padding(innerPadding),\ncontentAlignment = Alignment.Center\n) {\nRow(verticalAlignment = Alignment.CenterVertically) {\nColumn(horizontalAlignment = Alignment.CenterHorizontally) {\nImageButton(\nonClick = onProfileButtonClick,\nmodifier = modifier,\nlabel = stringResource(R.string.profile),\npainter = painterResource(id = R.drawable.profile),\nsize = 160.dp,\ncontentDescription = stringResource(R.string.profile)\n)\nSpacer(\nmodifier = Modifier.height(16.dp)\n)\nImageButton(\nonClick = onSalaryButtonClick,\nmodifier = modifier,\nlabel = stringResource(R.string.salary),\npainter = painterResource(id = R.drawable.payment),\nsize = 160.dp,\ncontentDescription = stringResource(R.string.salary)\n)\n\n}\nSpacer(\nmodifier = Modifier.width(16.dp)\n)\n///TODO\n}\n}\n}\n}\n\n@Preview\n@Composable\nfun MenuScreenPreview() {\nMenuScreen(\nonProfileButtonClick = {},\nonHolidayButtonClick = {},\nonCafeteriaButtonClick = {},\nonSalaryButtonClick = {}\n)\n}\n</code></pre> <p>Ennek mint\u00e1j\u00e1ra, val\u00f3s\u00edtsuk meg a m\u00e1sik k\u00e9t gombot is az al\u00e1bbi \u00e9rt\u00e9kekkel:</p> Sz\u00f6veg K\u00e9p <code>Holiday</code> <code>@drawable.holiday</code> <code>Cafeteria</code> <code>@drawable.cafeteria</code> <p>Hozzuk l\u00e9tre a hivatkozott sz\u00f6veges er\u0151forr\u00e1sokat! (A sz\u00f6vegen \u00e1llva ALT+ENTER)</p> <p>Ezek ut\u00e1n eg\u00e9sz\u00edts\u00fck ki a <code>Screen</code> oszt\u00e1lyunkat \u00e9s a <code>NavGraph</code>-unkat:</p> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nsealed class Screen(val route: String) {\nobject Menu : Screen(\"menu\")\n}\n</code></pre> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nimport androidx.compose.runtime.Composable\nimport androidx.navigation.NavHostController\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.rememberNavController\nimport hu.bme.aut.android.workplaceapp.feature.menu.MenuScreen\n\n@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n) {\nNavHost(\nnavController = navController,\nstartDestination = Screen.Menu.route\n) {\ncomposable(\"menu\") {\nMenuScreen(\nonProfileButtonClick = {},\nonHolidayButtonClick = {},\nonSalaryButtonClick = {},\nonCafeteriaButtonClick = {})\n}\n}\n}\n</code></pre> <p>Ha most elind\u00edtjuk az alkalmaz\u00e1st, akkor m\u00e1r mind a 4 gombot l\u00e1tjuk, azonban m\u00e9g egyik sem m\u0171k\u00f6dik. </p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a elk\u00e9sz\u00fclt f\u0151oldal k\u00e9p (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/04-android-ui-charts/#profil-kepernyo-elkeszitese-1-pont","title":"Profil k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se (1 pont)","text":"<p>A Profil k\u00e9perny\u0151 k\u00e9t lapozhat\u00f3 oldalb\u00f3l fog \u00e1llni (<code>HorizontalPager</code>), amelyen a k\u00f6vetkez\u0151 inform\u00e1ci\u00f3k lesznek megtal\u00e1lhat\u00f3ak:</p> <ul> <li>Els\u0151 oldal<ul> <li>N\u00e9v</li> <li>Email</li> <li>Lakc\u00edm</li> </ul> </li> <li>M\u00e1sodik oldal<ul> <li>Szem\u00e9lyi sz\u00e1m</li> <li>TAJ sz\u00e1m</li> <li>Ad\u00f3sz\u00e1m</li> <li>T\u00f6rzssz\u00e1m</li> </ul> </li> </ul> <p>Hozzunk l\u00e9tre egy <code>data</code> package-et, azon bel\u00fcl egy <code>Person</code> adatoszt\u00e1lyt. Ebben fogjuk t\u00e1rolni az oldalakon megjelen\u0151 adatokat. Az adat t\u00edpus\u00fa oszt\u00e1lyok eset\u00e9ben a Kotlin automatikusan gener\u00e1l gyakran haszn\u00e1lt f\u00fcggv\u00e9nyeket, mint p\u00e9ld\u00e1ul az <code>equals()</code> \u00e9s <code>hashCode()</code> f\u00fcggv\u00e9nyeket k\u00fcl\u00f6nb\u00f6z\u0151 objektumok \u00f6sszehasonl\u00edt\u00e1s\u00e1hoz, illetve egy <code>toString()</code> f\u00fcggv\u00e9nyt, mely visszaadja a t\u00e1rolt v\u00e1ltoz\u00f3k \u00e9rt\u00e9k\u00e9t.</p> <pre><code>package hu.bme.aut.android.workplaceapp.data\n\ndata class Person(\nval name: String,\nval email: String,\nval address: String,\nval id: String,\nval socialSecurityNumber: String,\nval taxId: String,\nval registrationId: String\n)\n</code></pre> <p>A Person oszt\u00e1ly p\u00e9ld\u00e1ny\u00e1nak el\u00e9r\u00e9s\u00e9re hozzunk l\u00e9tre egy <code>DataManager</code> oszt\u00e1lyt (szint\u00e9n a <code>data</code> package-en bel\u00fcl). Ezzel fogjuk szimul\u00e1lni a val\u00f3s adatel\u00e9r\u00e9st (Singleton mint\u00e1t haszn\u00e1lunk, hogy az alkalmaz\u00e1s minden r\u00e9sz\u00e9b\u0151l egyszer\u0171en el\u00e9rhet\u0151 legyen, ehhez a Kotlin \u00e1ltal biztos\u00edtott object kulcssz\u00f3t haszn\u00e1ljuk):</p> <pre><code>package hu.bme.aut.android.workplaceapp.data\n\nobject DataManager {\nval person = Person(\n\"Test User\", \"testuser@domain.com\",\n\"1234 Test, Random Street 1.\",\n\"123456AB\",\n\"123456789\",\n\"1234567890\",\n\"0123456789\"\n)\n}\n</code></pre> <p>A profiloldalon az a c\u00e9lunk, hogy k\u00e9t k\u00fcl\u00f6n r\u00e9szben megjelen\u00edts\u00fck a norm\u00e1l \u00e9s r\u00e9szletes adatokat. A k\u00e9t oldal k\u00f6z\u00f6tt v\u00edzszintes swipe-al lehet majd l\u00e9pni. Ehhez egy HorizontalPager-t fogunk haszn\u00e1lni, mely Composable f\u00fcggv\u00e9nyek k\u00f6z\u00f6tt k\u00e9pes ilyen interakci\u00f3kat megval\u00f3s\u00edtani.</p> <p>El\u0151sz\u00f6r hozzunk l\u00e9tre a <code>hu.bme.aut.android.workplaceapp.ui.view</code> package*be egy <code>InfoField</code> nev\u0171 seg\u00e9d *Composable-t, ami az adatok megjelen\u00edt\u00e9s\u00e9t fogja seg\u00edteni:</p> <pre><code>package hu.bme.aut.android.workplaceapp.ui.view\n\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\n\n@Composable\nfun InfoField(title: String, value: String) {\nColumn(\nmodifier = Modifier.padding(bottom = 16.dp)\n) {\nText(\ncolor = Color.Gray,\ntext = title,\nfontSize = 20.sp\n)\nText(\ntext = value,\nfontSize = 24.sp\n)\n}\n}\n\n@Preview\n@Composable\nfun PreviewInfoField() {\nInfoField(title = \"Name\", value = \"Test User\")\n}\n</code></pre> <p>Ezek ut\u00e1n k\u00e9sz\u00edts\u00fck el a k\u00e9t profil oldalunkat. A <code>hu.bme.aut.android.workplaceapp.feature.profile</code> package-be hozzuk l\u00e9tre az al\u00e1bbi f\u00e1jlokat:</p> <p><code>ProfileFirstPage</code></p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.profile\n\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport hu.bme.aut.android.workplaceapp.ui.view.InfoField\n\n@Composable\nfun ProfileFirstPage(\nname: String,\nemail: String,\naddress: String\n) {\nColumn(\nmodifier = Modifier\n.padding(16.dp)\n.fillMaxSize()\n) {\nInfoField(title = \"NAME:\", value = name)\nInfoField(title = \"EMAIL:\", value = email)\nInfoField(title = \"ADDRESS:\", value = address)\n}\n}\n\n@Preview(showBackground = true)\n@Composable\nfun PreviewProfileFirstPage() {\nProfileFirstPage(\nname = \"Test User\",\nemail = \"test@email\",\naddress = \"Test Street\"\n)\n}\n</code></pre> <p>Ez a Composable f\u00fcggv\u00e9ny fog felelni az els\u0151 oldal\u00e9rt, a k\u00f6vetkez\u0151 pedig a m\u00e1sodik oldal\u00e9rt.</p> <p><code>ProfileSecondPage</code></p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.profile\n\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport hu.bme.aut.android.workplaceapp.ui.view.InfoField\n\n@Composable\nfun ProfileSecondPage(\nid: String,\nsocialSecurityId: String,\ntaxId: String,\nregistrationId: String\n) {\nColumn(\nmodifier = Modifier\n.padding(16.dp)\n.fillMaxSize()\n) {\nInfoField(title = \"ID:\", value = id)\nInfoField(title = \"SOCIAL SECURITY ID:\", value = socialSecurityId)\nInfoField(title = \"TAX ID:\", value = taxId)\nInfoField(title = \"REGISTRATION ID:\", value = registrationId)\n}\n}\n\n@Preview(showBackground = true)\n@Composable\nfun PreviewProfileSecondPage() {\nProfileSecondPage(\nid = \"123456\",\nsocialSecurityId = \"A89FSE568TZ\",\ntaxId = \"GO894GE56\",\nregistrationId = \"R6879SDLTH\"\n)\n}\n</code></pre> <p>A f\u00fcggv\u00e9ny param\u00e9terei a profil egyes adatai lesznek String form\u00e1tumban. </p> <p>Ha ezekkel megvagyunk, k\u00e9sz\u00edts\u00fck el a <code>ProfileScreen</code> nev\u0171 Composable f\u00fcggv\u00e9ny\u00fcnket az al\u00e1bbiak szerint:</p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.profile\n\nimport androidx.compose.foundation.ExperimentalFoundationApi\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.PaddingValues\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.pager.HorizontalPager\nimport androidx.compose.foundation.pager.rememberPagerState\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport hu.bme.aut.android.workplaceapp.R\nimport hu.bme.aut.android.workplaceapp.data.DataManager\nimport hu.bme.aut.android.workplaceapp.ui.view.TopBar\n\n@OptIn(ExperimentalFoundationApi::class)\n@Composable\nfun ProfileScreen(\nmodifier: Modifier = Modifier\n) {\nScaffold(\ntopBar = {\nTopBar(stringResource(id = R.string.profile))\n}\n) { innerPadding -&gt;\nval pagerState = rememberPagerState(pageCount = { 2 })\nval profile = DataManager.person\n\nHorizontalPager(\nmodifier = modifier\n.padding(innerPadding)\n.fillMaxSize(),\nstate = pagerState\n) {\n\nwhen (it) {\n0 -&gt; {\nProfileFirstPage(\nname = profile.name,\nemail = profile.email,\naddress = profile.address\n)\n}\n\n1 -&gt; {\nProfileSecondPage(\nid = profile.id,\nsocialSecurityId = profile.socialSecurityNumber,\ntaxId = profile.taxId,\nregistrationId = profile.registrationId\n)\n}\n}\n}\n}\n}\n\n@Composable\n@Preview\nfun PreviewProfileScreen() {\nProfileScreen()\n}\n</code></pre> <p>Itt el\u0151sz\u00f6r is l\u00e9tre kell hozunk egy <code>pagerState</code> nev\u0171 v\u00e1ltoz\u00f3t, amit \u00e1t fogunk adni a <code>HorizontalPager</code>-nek. Ez tartalmazza, hogy h\u00e1ny oldal lesz az adott Composable-\u00f6n. Ezt k\u00f6vet\u0151en sz\u00fcks\u00e9g lesz egy profilra, amit m\u00e1r kor\u00e1bban defini\u00e1ltunk egy <code>object</code>-k\u00e9nt. V\u00e9g\u00fcl a <code>HorizontalPager</code> seg\u00edts\u00e9g\u00e9vel l\u00e9trehozzuk a lapozhat\u00f3 oldalt, amin elhelyezz\u00fck a k\u00e9t Composable f\u00fcggv\u00e9nyt 1-1 oldalk\u00e9nt. Az aktu\u00e1lis oldalt pedig az <code>it</code> seg\u00edts\u00e9g\u00e9vel v\u00e1lasztjuk ki.</p> <p>V\u00e9g\u00fck k\u00f6ss\u00fck be a <code>ProfileScreen</code>-t a navig\u00e1ciba:</p> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nsealed class Screen(val route: String) {\nobject Menu : Screen(\"menu\")\nobject Profile: Screen(\"profile\")\n}\n</code></pre> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nimport androidx.compose.runtime.Composable\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport androidx.navigation.NavHostController\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.rememberNavController\nimport hu.bme.aut.android.workplaceapp.feature.menu.MenuScreen\nimport hu.bme.aut.android.workplaceapp.feature.profile.ProfileScreen\n\n@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n) {\nNavHost(\nnavController = navController,\nstartDestination = Screen.Menu.route\n) {\ncomposable(\"menu\") {\nMenuScreen(\nonProfileButtonClick = { navController.navigate(Screen.Profile.route) },\nonHolidayButtonClick = {},\nonSalaryButtonClick = {},\nonCafeteriaButtonClick = {})\n}\ncomposable(Screen.Profile.route) {\nProfileScreen()\n}\n}\n}\n</code></pre> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st! A Profile gombra kattintva megjelennek a felhaszn\u00e1l\u00f3 adatai, \u00e9s lehet lapozni is.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a profil oldal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), melyben az egyik mez\u0151 hely\u00e9re a neptun k\u00f3dod van k\u00edrva, illetve a HorizontalPager k\u00f3dr\u00e9szlete! A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/04-android-ui-charts/#szabadsag-kepernyo-elkeszitese-1-pont","title":"Szabads\u00e1g k\u00e9perny\u0151 elk\u00e9sz\u00edt\u00e9se (1 pont)","text":"<p>A Szabads\u00e1g k\u00e9perny\u0151n egy k\u00f6rdiagrammot fogunk megjelen\u00edteni, ami azt mutatja meg sz\u00e1zal\u00e9kos ar\u00e1nyban, hogy mennyi szabads\u00e1got vett\u00fcnk m\u00e1r ki, \u00e9s mennyi maradt m\u00e9g. A fel\u00fcleten ezen k\u00edv\u00fcl egy gomb seg\u00edts\u00e9g\u00e9vel egy \u00faj szabads\u00e1g intervallum kiv\u00e9tel\u00e9t is megengedj\u00fck a felhaszn\u00e1l\u00f3nak.</p> <p>PieChart</p> <p>A PieChart kirajzol\u00e1shoz kor\u00e1bban, a View keretrendszerben az MPAndroidChart library-t haszn\u00e1ltuk, azonban ez sajnos Jetpack Compose-ra nem m\u0171k\u00f6dik.</p> <p>A diagram kirajzol\u00e1s\u00e1t a YCharts k\u00f6nyvt\u00e1rral fogjuk megoldani. Ehhez el\u0151sz\u00f6r vegy\u00fck is fel a f\u00fcgg\u0151s\u00e9get:</p> <p>Nyissuk meg a <code>settings.gradle.kts</code> f\u00e1jlt, \u00e9s vegy\u00fck fel a <code>repositories</code> tagen bel\u00fclre a k\u00f6vetkez\u0151t:</p> <pre><code>repositories {\n...\nmaven { url = uri(\"https://jitpack.io\")}\n}\n</code></pre> <p>Ezzel megadtuk, hogy a jitpack repository-b\u00f3l is h\u00fazhatunk be f\u00fcgg\u0151s\u00e9geket.</p> <p>Ezut\u00e1n pedig vegy\u00fck fel az kor\u00e1bbi f\u00fcgg\u0151s\u00e9gekhez hasonl\u00f3an a YCharts-ot is:</p> <p><code>libs.versions.toml</code>:</p> <pre><code>[versions]\n...\nycharts = \"2.1.0\"\n\n[libraries]\n...\nycharts = { module = \"co.yml:ycharts\", version.ref = \"ycharts\" }\n</code></pre> <p><code>build.gradle.kts</code> (modul szint\u0171):</p> <pre><code>dependencies {\n...\nimplementation(libs.ycharts)\n}\n</code></pre> <p>Valamint ezen a f\u00e1jlon bel\u00fcl keress\u00fck meg a <code>minSdk</code> v\u00e1ltoz\u00f3t, \u00e9s \u00edrjuk \u00e1t 26-ra, ugyanis ez sz\u00fcks\u00e9ges a YCharts haszn\u00e1lat\u00e1hoz:</p> <pre><code>android {\n...\ndefaultConfig{\n...\nminSdk = 26\n...\n}\n...\n}\n</code></pre> <p>Ezut\u00e1n Syncelj\u00fck a Projectet a jobb fent l\u00e9v\u0151 <code>Sync Now</code> gombbal. </p> <p>Ha a f\u00e1jlok let\u00f6lt\u0151dtek k\u00e9sz\u00edts\u00fck el a <code>hu.bme.aut.android.workplaceapp.feature.holiday</code> package-be a <code>HolidayScreen</code> Composable f\u00fcggv\u00e9ny\u00fcnket az al\u00e1bbiak szerint:</p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.holiday\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport hu.bme.aut.android.workplaceapp.ui.view.TopBar\n\n@Composable\nfun HolidayScreen(\nmodifier: Modifier = Modifier\n) {\nvar showDialog by remember { mutableStateOf(false) }\n\nScaffold (\ntopBar = {\nTopBar(\"Holiday\")\n}\n) { innerPadding -&gt;\n\nColumn(\nmodifier = modifier\n.padding(innerPadding)\n.fillMaxSize(),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\n\n//PieChartData l\u00e9trehoz\u00e1sa\n//...\n\n//PieChartConfig l\u00e9trehoz\u00e1sa\n//...\n\n//PieChart l\u00e9trehoz\u00e1sa - PieChartData, PieChartConfig seg\u00edts\u00e9g\u00e9vel\n//...\n\n//Holiday Button\n//...\n\n//DatePicker Dialog\n//...\n\n}\n}\n\n}\n\n@Composable\n@Preview\nfun PreviewHolidayScreen() {\nHolidayScreen()\n}\n</code></pre> <p>Majd ezt k\u00f6vet\u0151en t\u00f6lts\u00fck f\u00f6l a fel\u00fcletet tartalommal:</p> <ol> <li> <p>Hozzuk l\u00e9tre a <code>pieChardData</code> v\u00e1ltoz\u00f3nkat az al\u00e1bbiak szerint (M\u00e1soljuk be a <code>//PieChartData l\u00e9trehoz\u00e1sa</code> comment al\u00e1): <pre><code>val pieChartData = PieChartData(\nslices = listOf(\nPieChartData.Slice(\"Remaining\", 5f, Color(0xFFFFEB3B)),\nPieChartData.Slice(\"Taken\", 15f, Color(0xFF00FF00)),\n), plotType = PlotType.Pie\n)\n</code></pre></p> <ul> <li><code>PieChartData</code>-nak k\u00e9t param\u00e9tert tudunk \u00e1tadni ezek:<ul> <li>slices: Ez a param\u00e9ter fogja tartalmazni az adatokat, \u00e9s az adatok eloszl\u00e1s\u00e1t, valamint az adatok sz\u00edn\u00e9t.</li> <li>plotType: Ezzel a v\u00e1ltoz\u00f3val tudjuk megadni a diagram t\u00edpus\u00e1t. Jelen esetben ez most <code>Pie</code> t\u00edpus lesz.</li> </ul> </li> <li><code>PieChartData.Slice</code>-nak n\u00e9gy param\u00e9tert tudunk \u00e1tadni, mi most csak az els\u0151 h\u00e1rommal foglalkozunk:<ul> <li>label: Ez a String fog megjelenni az egyes \"szeleteken\".</li> <li>value: Ez az eloszl\u00e1s \u00e9rt\u00e9ke az adatoknak</li> <li>color: Ezzel tudjuk be\u00e1ll\u00edtani az egyes adatok sz\u00edn\u00e9t a diagramon.</li> </ul> </li> </ul> <p>Az eloszl\u00e1s \u00e9rt\u00e9k\u00e9nek \u00e1tadtuk a ViewModel-ben t\u00e1rolt k\u00e9t v\u00e1ltoz\u00f3nkat. Ez minden egyes alkalommal v\u00e1ltozni fog, hogy ha \u00faj szabads\u00e1g id\u0151intervallumot ny\u00fajtunk be, valamint, hogy ha kil\u00e9p\u00fcnk a Szabads\u00e1g k\u00e9perny\u0151r\u0151l a f\u0151men\u00fcbe, \u00e9s vissza, tov\u00e1bbra is meg fogja tartani az \u00e9rt\u00e9ket.</p> </li> <li> <p>Az el\u0151z\u0151h\u00f6z hasonl\u00f3an hozzuk l\u00e9tre a <code>pieChartConfig</code> v\u00e1ltoz\u00f3t is: <pre><code>val pieChartConfig = PieChartConfig(\nbackgroundColor = Color.Transparent,\nlabelType = PieChartConfig.LabelType.VALUE,\nisAnimationEnable = true,\nlabelVisible = true,\nsliceLabelTextSize = TextUnit(20f, TextUnitType.Sp),\nanimationDuration = 1000,\nsliceLabelTextColor = Color.Black,\ninActiveSliceAlpha = .8f,\nactiveSliceAlpha = 1.0f,\n)\n</code></pre></p> <ul> <li>A <code>PieChartConfig</code>-nak nagyon sok param\u00e9tere van, ezek k\u00f6z\u00fcl csak p\u00e1rat fogunk megn\u00e9zni a labor sor\u00e1n.<ul> <li>backgroundColor: Ezzel tudjuk m\u00f3dos\u00edtani a diagram h\u00e1tter\u00e9t. Jelen esetben \u00e1tl\u00e1tsz\u00f3ra van sz\u00fcks\u00e9g\u00fcnk.</li> <li>labelType: Ezzel lehet(ne) \u00e1ll\u00edtani, hogy az \u00e9rt\u00e9ket, vagy a sz\u00e1zal\u00e9kot \u00edrja ki a diagram egyes szeletein, de ez jelenleg nem m\u0171k\u00f6dik :)</li> <li>isAnimationEnable: Anim\u00e1ci\u00f3 ki-be kapcsol\u00e1sa.</li> <li>labelVisible: Ezzel tudjuk ki-be kapcsolni, hogy l\u00e1tsz\u00f3djon a felirat a diagram szeletein.</li> <li>sliceLabelTextSize: Felirat m\u00e9rete a szeleteken.</li> <li>animationDuration: Anim\u00e1ci\u00f3 id\u0151tartama.</li> <li>sliceLabelTextColor: Felirat sz\u00edne.</li> <li>inActiveSliceAlpha: Inakt\u00edv szeletek \u00e1tl\u00e1tsz\u00f3s\u00e1ga.</li> <li>activeSliceAlpha: Akt\u00edv szeletek \u00e1tl\u00e1tsz\u00f3s\u00e1ga.</li> </ul> </li> </ul> </li> <li> <p><code>PieChart</code> l\u00e9trehoz\u00e1sa: <pre><code>PieChart(\nmodifier = Modifier\n.width(400.dp)\n.height(400.dp),\npieChartData,\npieChartConfig\n)\n</code></pre></p> <ul> <li>Az el\u0151bb l\u00e9trehozott k\u00e9t v\u00e1ltoz\u00f3t \u00e1tadjuk a <code>PieChart</code> Composable f\u00fcggv\u00e9nynek, \u00e9s ezeknek a seg\u00edts\u00e9g\u00e9vel l\u00e9trehozza a k\u00f6rdiagrammot.</li> </ul> </li> </ol> <p>V\u00e9g\u00fcl pedig a <code>HolidayScreen</code>-t is k\u00f6ss\u00fck be a navig\u00e1ci\u00f3ba:</p> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nsealed class Screen(val route: String) {\nobject Menu : Screen(\"menu\")\nobject Profile: Screen(\"profile\")\nobject Holiday: Screen(\"holiday\")\n}\n</code></pre> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nimport androidx.compose.runtime.Composable\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport androidx.navigation.NavHostController\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.rememberNavController\nimport hu.bme.aut.android.workplaceapp.feature.holiday.HolidayScreen\nimport hu.bme.aut.android.workplaceapp.feature.holiday.HolidayViewModel\nimport hu.bme.aut.android.workplaceapp.feature.menu.MenuScreen\nimport hu.bme.aut.android.workplaceapp.feature.profile.ProfileScreen\n\n@Composable\nfun NavGraph(\nnavController: NavHostController = rememberNavController(),\n) {\nNavHost(\nnavController = navController,\nstartDestination = Screen.Menu.route\n) {\ncomposable(\"menu\") {\nMenuScreen(\nonProfileButtonClick = { navController.navigate(Screen.Profile.route) },\nonHolidayButtonClick = { navController.navigate(Screen.Holiday.route) },\nonSalaryButtonClick = {},\nonCafeteriaButtonClick = {})\n}\ncomposable(Screen.Profile.route) {\nProfileScreen()\n}\ncomposable(Screen.Holiday.route) {\nHolidayScreen()\n}\n}\n}\n</code></pre> <p>Hogy ha most elind\u00edtjuk az alkalmaz\u00e1st, akkor a Holiday opci\u00f3n\u00e1l m\u00e1r l\u00e1tjuk a diagrammot, azonban v\u00e1ltoztatni m\u00e9g nem tudunk rajta.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a szabads\u00e1gk\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/04-android-ui-charts/#datumvalaszto-megvalositasa-1-pont","title":"D\u00e1tumv\u00e1laszt\u00f3 megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>K\u00f6vetkez\u0151 l\u00e9p\u00e9sk\u00e9nt val\u00f3s\u00edtsuk meg a <code>Take Holiday</code> gombot:     * Ehhez sz\u00fcks\u00e9g\u00fcnk lesz a 4. l\u00e9p\u00e9sben egy <code>DialogWindow</code>-ra, de addig is be tudjuk \u00e1ll\u00edtani a Gomb m\u0171k\u00f6d\u00e9s\u00e9t. Ha megnyomjuk a gombot, a dialog megjelen\u00edt\u00e9s\u00e9t jelz\u0151 v\u00e1ltoz\u00f3t igazra \u00e1ll\u00edtjuk:</p> <pre><code>Button(\nonClick = { showDialog = true }\n) {\nText(\"Take holiday\")\n}\n</code></pre>"},{"location":"laborok/04-android-ui-charts/#kepernyok-kozotti-allapot-megtartasa-viewmodel-segitsegevel","title":"K\u00e9perny\u0151k k\u00f6z\u00f6tti \u00e1llapot megtart\u00e1sa ViewModel seg\u00edts\u00e9g\u00e9vel","text":"<p>Ahhoz, hogy a k\u00e9perny\u0151k k\u00f6z\u00f6tti navig\u00e1ci\u00f3kor ne vesz\u00edts\u00fck el a szabads\u00e1gok nyilv\u00e1ntart\u00e1s\u00e1t (\u00e9s persze architektur\u00e1lis szempontb\u00f3l is), nem t\u00e1rolhatjuk ezeket az \u00e1llapotokat a screen-ekben.  Hozzunk l\u00e9tre a <code>holiday</code> package-ben egy \u00faj Kotlin Filet <code>HolidayViewModel</code> n\u00e9ven. Itt fogjuk t\u00e1rolni a szabadnapok maxim\u00e1lis sz\u00e1m\u00e1t, illetve a m\u00e1r kivett szabadnapok sz\u00e1m\u00e1t. (Term\u00e9szetesen ezek az adatok egy val\u00f3s alkalmaz\u00e1sban valamilyen h\u00e1tt\u00e9rt\u00e1rr\u00f3l vagy h\u00e1l\u00f3zatr\u00f3l j\u00f6nn\u00e9nek, a viewmodel onnan szerezn\u00e9 be ezeket.) </p> <p>A <code>HolidayViewModel</code> k\u00f3dja:</p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.holiday\n\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.viewModelScope\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.StateFlow\nimport kotlinx.coroutines.launch\n\nclass HolidayViewModel : ViewModel() {\nprivate val _holidayMaxValue = MutableStateFlow(20)\nval maxHolidayValue: StateFlow&lt;Int&gt; = _holidayMaxValue\n\nprivate val _takenHolidayValue = MutableStateFlow(15)\nval takenHolidayValue: StateFlow&lt;Int&gt; = _takenHolidayValue\n\nfun takeHoliday(days: Int) {\nviewModelScope.launch {\n_takenHolidayValue.value += days\n}\n}\n}\n</code></pre> <p>ViewModel</p> <p>A viewmodel \"szebb\" \u00e9s komplexebb haszn\u00e1lat\u00e1ra a k\u00e9s\u0151bbi laborokon lesze p\u00e9lda.</p> <p>Ezut\u00e1n m\u00f3dos\u00edtsuk a <code>HolidayScreen</code> fejl\u00e9c\u00e9t, hogy \u00e1tvegye a viewmodel.t, majd azokb\u00f3l szerezz\u00fck be a megfelel\u0151 \u00e1lalpotokat:</p> <pre><code>package hu.bme.aut.android.workplaceapp.feature.holiday\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.material3.Button\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.collectAsState\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.TextUnit\nimport androidx.compose.ui.unit.TextUnitType\nimport androidx.compose.ui.unit.dp\nimport co.yml.charts.common.model.PlotType\nimport co.yml.charts.ui.piechart.charts.PieChart\nimport co.yml.charts.ui.piechart.models.PieChartConfig\nimport co.yml.charts.ui.piechart.models.PieChartData\nimport hu.bme.aut.android.workplaceapp.ui.view.TopBar\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport java.util.Calendar\n\n@Composable\nfun HolidayScreen(\nmodifier: Modifier = Modifier,\nviewModel: HolidayViewModel = viewModel()\n) {\n\nval maxHolidayValueVM by viewModel.maxHolidayValue.collectAsState()\nval takenHolidayValueVM by viewModel.takenHolidayValue.collectAsState()\nval remainingHolidaysVM = maxHolidayValueVM - takenHolidayValueVM\n\nval currentDate = Calendar.getInstance()\nval context = LocalContext.current\n\nvar showDialog by remember { mutableStateOf(false) }\n\nScaffold (\ntopBar = {\nTopBar(\"Holiday\")\n}\n) { innerPadding -&gt;\n\nColumn(\nmodifier = modifier\n.padding(innerPadding)\n.fillMaxSize(),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\n\n//PieChartData l\u00e9trehoz\u00e1sa\nval pieChartData = PieChartData(\nslices = listOf(\nPieChartData.Slice(\"Remaining\", remainingHolidaysVM.toFloat(), Color(0xFFFFEB3B)),\nPieChartData.Slice(\"Taken\", takenHolidayValueVM.toFloat(), Color(0xFF00FF00)),\n), plotType = PlotType.Pie\n)\n\n//PieChartConfig l\u00e9trehoz\u00e1sa\nval pieChartConfig = PieChartConfig(\nbackgroundColor = Color.Transparent,\nlabelType = PieChartConfig.LabelType.VALUE,\nisAnimationEnable = true,\nlabelVisible = true,\nsliceLabelTextSize = TextUnit(20f, TextUnitType.Sp),\nanimationDuration = 1000,\nsliceLabelTextColor = Color.Black,\ninActiveSliceAlpha = .8f,\nactiveSliceAlpha = 1.0f,\n)\n\n//PieChart l\u00e9trehoz\u00e1sa - PieChartData, PieChartConfig seg\u00edts\u00e9g\u00e9vel\nPieChart(\nmodifier = Modifier\n.width(400.dp)\n.height(400.dp),\npieChartData,\npieChartConfig\n)\n\n//Holiday Button\nButton(\nonClick = { showDialog = true }\n) {\nText(\"Take holiday\")\n}\n\n//DatePicker Dialog\n//...\n\n}\n}\n\n}\n\n@Composable\n@Preview\nfun PreviewHolidayScreen() {\nHolidayScreen()\n}\n</code></pre> <p>pieChartData</p> <p>Figyelj\u00fcnk arra, hogy a <code>pieChartData</code>-t is friss\u00edts\u00fck, ugyanis itt m\u00e1r nem be\u00e9getett eloszl\u00e1s \u00e9rt\u00e9ket haszn\u00e1lunk, hanem a viewModel-ben l\u00e9v\u0151 v\u00e1ltoz\u00f3t!</p> <p>viewModel</p> <p>Sokszor az Android Studio nem tudja megtal\u00e1lni a <code>viewModel()</code>-hez sz\u00fcks\u00e9ges importot. Ilyenkor k\u00e9zileg \u00edrjuk az importokhoz az al\u00e1bbi importot: <pre><code>import androidx.lifecycle.viewmodel.compose.viewModel\n</code></pre></p> <p>Ezek ut\u00e1n hozzuk l\u00e9tre a dial\u00f3gus ablakot az al\u00e1bbiak szerint:</p> <pre><code>//DatePicker Dialog\nif (showDialog) {\nDatePickerDialog(\ncontext,\n{ _, _year, _months, _days -&gt;\nshowDialog = false\nval selectedDate = Calendar.getInstance().apply{\nset(_year, _months, _days)\n}\nval diff = ((selectedDate.timeInMillis - currentDate.timeInMillis) / (24 * 60 * 60 * 1000)).toInt()\nviewModel.takeHoliday(\ndays = diff\n)\n},\ncurrentDate.get(Calendar.YEAR), currentDate.get(Calendar.MONTH), currentDate.get(Calendar.DAY_OF_MONTH)\n).apply {\nsetOnCancelListener { showDialog = false }\nshow()\n}\n}\n</code></pre> <p>Az el\u0151z\u0151 laborokon l\u00e1tottakhoz hasonl\u00f3 m\u00f3don haszn\u00e1ljuk a DataPicker Dial\u00f3gust. \u00c1tadunk neki egy context-et, ezut\u00e1n egy lambda param\u00e9tert, ami a m\u0171k\u00f6d\u00e9st fogja le\u00edrni, abban az esetben, hogy ha d\u00e1tumot v\u00e1lasztunk ki, majd v\u00e9g\u00fcl utols\u00f3 h\u00e1rom param\u00e9ternek \u00e1tadjuk a jelenlegi d\u00e1tumot.</p> <p>DatePickerDialog import</p> <p>A <code>DatePickerDialog</code>-n\u00e1l haszn\u00e1ljuk az al\u00e1bbi importot: <pre><code>import android.app.DatePickerDialog\n</code></pre></p> <p>Hogy ha ezzel megvagyunk, akkor m\u00e1r csak a <code>NavGraph</code>-ot kell \u00fagy m\u00f3dos\u00edtani, hogy az \u00e9rt\u00e9keket megtartsa az alkalmaz\u00e1s, hogy ha ki-\u00e9s bel\u00e9p\u00fcnk a Holiday k\u00e9perny\u0151re. Ezt a k\u00f6vetkez\u0151 k\u00e9ppen tudjuk megtenni:</p> <pre><code>package hu.bme.aut.android.workplaceapp.navigation\n\nsealed class Screen(val route: String) {\nobject Menu : Screen(\"menu\")\nobject Profile: Screen(\"profile\")\nobject Holiday: Screen(\"holiday\")\n}\n</code></pre> <pre><code>@Composable\nfun NavGraph(\n...\n){\nval holidayViewModel: HolidayViewModel = viewModel()\n\nNavHost(\n...\n){\n...\ncomposable(Screen.Holiday.route) {\nHolidayScreen(viewModel = holidayViewModel)\n}\n\n}\n}\n</code></pre> <p>Ezut\u00e1n az alkalmaz\u00e1st elind\u00edtva m\u00e1r m\u0171k\u00f6dik a <code>Take Holiday</code> gombunk.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a d\u00e1tumv\u00e1laszt\u00f3 k\u00e9p (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4a.png n\u00e9ven t\u00f6ltsd f\u00f6l! Emellett  k\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a d\u00e1tumv\u00e1laszt\u00e1s eredm\u00e9nye a szabads\u00e1g k\u00e9perny\u0151n (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy a kommunik\u00e1ci\u00f3hoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4b.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/04-android-ui-charts/#onallo-feladat-1-pont","title":"\u00d6n\u00e1ll\u00f3 feladat (1 pont)","text":"<ul> <li>Csak akkor engedj\u00fcnk \u00faj szabads\u00e1got kivenni, hogy ha a kiv\u00e1lasztott nap a mai napn\u00e1l k\u00e9s\u0151bbi. (0.5 pont)</li> <li>Ha elfogyott a szabads\u00e1gkeret\u00fcnk, akkor a Take Holiday gomb legyen letiltva. (0.5 pont)</li> </ul> <p>BEADAND\u00d3 (0.5 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a d\u00e1tumv\u00e1laszt\u00f3 oldal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a kor\u00e1bbi napok tilt\u00e1s\u00e1hoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f5a.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p> <p>BEADAND\u00d3 (0.5 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a letiltott gomb (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f5b.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/04-android-ui-charts/#imsc-feladat-2-pont","title":"iMSc feladat (2 pont)","text":""},{"location":"laborok/04-android-ui-charts/#fizetes-menupont-megvalositasa","title":"Fizet\u00e9s men\u00fcpont megval\u00f3s\u00edt\u00e1sa","text":"<p>A Payment men\u00fcpontra kattintva jelenjen meg egy <code>PaymentScreen</code> rajta egy HorizontalPager-rel \u00e9s k\u00e9t k\u00e9perny\u0151vel (A Profile men\u00fcponthoz hasonl\u00f3an): - <code>PaymentTaxesScreen</code>: k\u00f6rdiagram, aminek a k\u00f6zep\u00e9be van \u00edrva az aktu\u00e1lis fizet\u00e9s \u00e9s mutatja a nett\u00f3 j\u00f6vedelmet illetve a levont ad\u00f3kat (ad\u00f3nk\u00e9nt k\u00fcl\u00f6n) - <code>MonthlyPaymentScreen</code>: egy oszlopdiagramot mutasson 12 oszloppal, a havi szinten lebontott fizet\u00e9seket mutatva - \u00e9rdemes az adatokat itt is a DataManager oszt\u00e1lyban t\u00e1rolni</p> <p>Seg\u00edts\u00e9g</p> <p>BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az aktu\u00e1lis fizet\u00e9s \u00e9s nett\u00f3 j\u00f6vedelem a levont ad\u00f3kkal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f6.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p> <p>BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a 12 oszlop a havi fizet\u00e9si adatokkal (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f7.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/04-android-ui-charts/#extra-feladat","title":"Extra feladat","text":"<p>Az \u00e9rdekl\u0151d\u0151k kedv\u00e9\u00e9rt ezen a laboron egy extra feladat is van, viszont ez csak saj\u00e1t tapasztalat szerz\u00e9s\u00e9rt. Ez\u00e9rt a feladat\u00e9rt nem j\u00e1r pont!</p> <ul> <li>Az \u00f6n\u00e1ll\u00f3 feladathoz hasonl\u00f3an most azt \u00e1ll\u00edtsuk be, hogy a DatePicker dial\u00f3gus ablakon csak a mai illetve a mai + maxim\u00e1lis szabadnapok k\u00f6z\u00f6tt lehessen v\u00e1lasztani. </li> </ul>"},{"location":"laborok/05-android-sqlite/","title":"Labor 05 - SQLite - Rajzol\u00f3 alkalmaz\u00e1s","text":""},{"location":"laborok/05-android-sqlite/#bevezeto","title":"Bevezet\u0151","text":"<p>A labor sor\u00e1n egy egyszer\u0171 rajzol\u00f3 alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. Az alkalmaz\u00e1ssal egy v\u00e1szonra lehet vonalakat vagy pontokat rajzolni, majd a rajzolt \u00e1br\u00e1t perzisztensen elmenteni, hogy az alkalmaz\u00e1s \u00fajraind\u00edt\u00e1sa ut\u00e1n is visszat\u00f6lt\u0151dj\u00f6n.</p> <p> </p> <p>Room k\u00f6nyvt\u00e1r</p> <p>A labor sor\u00e1n meg fogunk ismerkedni az SQLite k\u00f6nyvt\u00e1rral, mellyel egy lok\u00e1lis SQL adatb\u00e1zisban tudunk adatokat perszisztensen t\u00e1rolni. A modern Android alap\u00fa fejleszt\u00e9sekn\u00e9l m\u00e1r \u00e1ltal\u00e1ban a Room-ot haszn\u00e1lj\u00e1k, mely az SQLite-ra \u00e9p\u00edtve biztos\u00edt egy k\u00f6nnyen haszn\u00e1lhat\u00f3 ORM r\u00e9teget az Android \u00e9letciklusokkal kombin\u00e1lva. Fontosnak tartottuk viszont, hogy k\u00f6nnyen \u00e9rthet\u0151 legyen az anyag, ez\u00e9rt most csak az SQLite-os megold\u00e1st fogjuk vizsg\u00e1lni.</p> <p>IMSc</p> <p>A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladat-ot megoldva 2 IMSc pont szerezhet\u0151.</p>"},{"location":"laborok/05-android-sqlite/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/05-android-sqlite/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol>"},{"location":"laborok/05-android-sqlite/#a-projekt-elokeszitese","title":"A projekt el\u0151k\u00e9sz\u00edt\u00e9se","text":""},{"location":"laborok/05-android-sqlite/#a-projekt-letrehozasa","title":"A projekt l\u00e9trehoz\u00e1sa","text":"<p>Hozzunk l\u00e9tre egy <code>Simple Drawer</code> nev\u0171 projektet Android Studioban:</p> <ol> <li>Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get.</li> <li>A projekt neve legyen <code>Simple Drawer</code>, a kezd\u0151 package <code>hu.bme.aut.android.simpledrawer</code>, a ment\u00e9si hely pedig a kicheckoutolt repository-n bel\u00fcl az SimpleDrawer mappa.</li> <li>Nyelvnek v\u00e1lasszuk a Kotlin-t.</li> <li>A minimum API szint legyen API24: Android 7.0.</li> <li>A Build configuration language Kotlin DSL legyen.</li> </ol> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 SimpleDrawer k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p> <p>A labor sor\u00e1n az al\u00e1bbi technol\u00f3gi\u00e1kkal fogunk tal\u00e1lkozni:</p> <ul> <li>SQLite</li> <li>Scaffold<ul> <li>TopBar</li> <li>BottomBar</li> </ul> </li> <li>ViewModel</li> <li>Dialog</li> </ul>"},{"location":"laborok/05-android-sqlite/#a-resource-ok-hozzaadasa","title":"A resource-ok hozz\u00e1ad\u00e1sa","text":"<p>El\u0151sz\u00f6r t\u00f6lts\u00fck le az alkalmaz\u00e1s k\u00e9peit tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt, ami tartalmazza az \u00f6sszes k\u00e9pet, amire sz\u00fcks\u00e9g\u00fcnk lesz. A tartalm\u00e1t m\u00e1soljuk be az <code>app/src/main/res</code> mapp\u00e1ba (ehhez seg\u00edt, ha Android Studio-ban bal fent a szok\u00e1sos Android n\u00e9zetr\u0151l a Project n\u00e9zetre v\u00e1ltunk erre az id\u0151re).</p> <p>Az al\u00e1bbi, alkalmaz\u00e1shoz sz\u00fcks\u00e9ges string resource-okat m\u00e1soljuk be a <code>res/values/strings.xml</code> f\u00e1jlba:</p> <pre><code>&lt;resources&gt;\n&lt;string name=\"app_name\"&gt;Simple Drawer&lt;/string&gt;\n\n&lt;string name=\"style\"&gt;St\u00edlus&lt;/string&gt;\n&lt;string name=\"line\"&gt;Vonal&lt;/string&gt;\n&lt;string name=\"point\"&gt;Pont&lt;/string&gt;\n\n&lt;string name=\"color\"&gt;Sz\u00edn&lt;/string&gt;\n&lt;string name=\"red\"&gt;Piros&lt;/string&gt;\n&lt;string name=\"green\"&gt;Z\u00f6ld&lt;/string&gt;\n&lt;string name=\"blue\"&gt;K\u00e9k&lt;/string&gt;\n\n&lt;string name=\"clear\"&gt;T\u00f6rl\u00e9s&lt;/string&gt;\n\n&lt;string name=\"are_you_sure_want_to_clear\"&gt;Biztosan t\u00f6r\u00f6lni akarod a rajzlapot?&lt;/string&gt;\n&lt;string name=\"ok\"&gt;OK&lt;/string&gt;\n&lt;string name=\"cancel\"&gt;M\u00e9gse&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>"},{"location":"laborok/05-android-sqlite/#a-kezdo-kepernyo-letrehozasa-1-pont","title":"A kezd\u0151 k\u00e9perny\u0151 l\u00e9trehoz\u00e1sa (1 pont)","text":""},{"location":"laborok/05-android-sqlite/#allo-layout-kikenyszeritese","title":"\u00c1ll\u00f3 layout kik\u00e9nyszer\u00edt\u00e9se","text":"<p>Az alkalmaz\u00e1sunkban az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most csak az \u00e1ll\u00f3 m\u00f3dot t\u00e1mogatjuk. Ehhez az <code>AndroidManifest.xml</code>-ben az <code>&lt;activity&gt;</code> tagen bel\u00fcl m\u00f3dos\u00edtsuk az al\u00e1bbiakat:</p> <pre><code>&lt;activity\nandroid:name=\".MainActivity\"\nandroid:exported=\"true\"\nandroid:label=\"@string/app_name\"\nandroid:screenOrientation=\"sensorPortrait\"\nandroid:theme=\"@style/Theme.SimpleDrawer\"&gt;\n&lt;intent-filter&gt;\n&lt;action android:name=\"android.intent.action.MAIN\" /&gt;\n\n&lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt;\n&lt;/intent-filter&gt;\n&lt;/activity&gt;\n</code></pre>"},{"location":"laborok/05-android-sqlite/#appbar-ok-letrehozasa","title":"AppBar-ok l\u00e9trehoz\u00e1sa","text":"<p>A m\u00e1r l\u00e9tez\u0151 <code>ui</code> package-en bel\u00fcl hozzunk l\u00e9tre egy <code>view</code> package-et, ezen bel\u00fcl egy <code>TopBar</code> \u00e9s egy <code>BottomBar</code> Kotlin File-t, majd \u00edrjuk bele a k\u00f6vetkez\u0151t:</p> <p><code>TopBar.kt</code>:</p> <p><pre><code>package hu.bme.aut.android.simpledrawer.ui.view\n\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport hu.bme.aut.android.simpledrawer.R\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun TopBar() {\nTopAppBar(\ntitle = {\nText(\ntext = stringResource(id = R.string.app_name),\ncolor = Color.White\n)\n},\ncolors = TopAppBarDefaults.topAppBarColors(containerColor = Color(0xFF6200EE))\n)\n}\n\n@Composable\n@Preview\nfun PreviewTopBar() {\nTopBar()\n}\n</code></pre> Ez csak egy egyszer\u0171 TopBar aminek a tetej\u00e9re ki\u00edrhatjuk az alkalmaz\u00e1s nev\u00e9t. A BottomBar kicsit \u00f6sszetettebb lesz enn\u00e9l.</p> <p><code>BottomBar.kt</code>:</p> <pre><code>package hu.bme.aut.android.simpledrawer.ui.view\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.material3.BottomAppBar\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport hu.bme.aut.android.simpledrawer.R\n\n@Composable\nfun BottomBar() {\nBottomAppBar(\nactions = {\nRow(\nmodifier = Modifier\n.fillMaxSize(),\nhorizontalArrangement = Arrangement.End,\nverticalAlignment = Alignment.CenterVertically\n) {\nIconButton(\nonClick = { /*TODO*/ },\nmodifier = Modifier.size(64.dp)\n) {\nIcon(\npainterResource(id = R.drawable.ic_style),\ncontentDescription = stringResource(id = R.string.style)\n)\n//St\u00edlusok\n}\n}\n},\ncontainerColor = Color(0xFF6200EE),\n)\n}\n\n@Composable\n@Preview\nfun PreviewBottomBar() {\nBottomBar()\n}\n</code></pre> <p>A BottomBar m\u00e1r kicsit \u00f6sszetettebb, itt az <code>actions</code> param\u00e9terrel \u00e1t tudunk adni olyan composable elemeket, amik megjelennek majd kis iconk\u00e9nt az AppBar-on, ezekhez k\u00e9s\u0151bb ak\u00e1r onClick esem\u00e9nyt is tudunk adni. \u00cdgy fogjuk megval\u00f3s\u00edtani a st\u00edlusv\u00e1lt\u00e1s opci\u00f3t, amelynek a megnyom\u00e1s\u00e1ra egy ablak ugrik fel, amin ki lehet v\u00e1lasztani a k\u00edv\u00e1nt st\u00edlust (Vonal, pont)</p>"},{"location":"laborok/05-android-sqlite/#a-drawingscreen-felulet","title":"A DrawingScreen fel\u00fclet","text":"<p>A <code>ui</code> package-en bel\u00fcl hozzunk l\u00e9tre egy <code>screen</code> package-t. Ebbe fog ker\u00fclni a <code>DrawingScreen</code>-\u00fcnk. Itt fogjuk elhelyezni a Scaffold-ot, aminek a seg\u00edts\u00e9g\u00e9vel egy TopBar-t \u00e9s egy BottomBar-t is megval\u00f3s\u00edtunk. Kezdetben a Scaffold tartalma csak egy fekete <code>Spacer</code> lesz, ezt k\u00e9s\u0151bb a <code>Canvas</code> fogja helyettes\u00edteni.</p> <pre><code>package hu.bme.aut.android.simpledrawer.ui.screen\n\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.tooling.preview.Preview\nimport hu.bme.aut.android.simpledrawer.ui.view.BottomBar\nimport hu.bme.aut.android.simpledrawer.ui.view.TopBar\n\n@Composable\nfun DrawingScreen() {\n\nScaffold(\ntopBar = {\nTopBar()\n},\nbottomBar = {\nBottomBar()\n}\n) { innerPadding -&gt;\n//TODO replace with canvas\nSpacer(\nmodifier = Modifier\n.background(Color.Black)\n.padding(innerPadding)\n.fillMaxSize()\n)\n}\n}\n\n@Composable\n@Preview\nfun PreviewDrawingScreen() {\nDrawingScreen()\n}\n</code></pre> <p>V\u00e9g\u00fcl \u00edrjuk \u00e1t a <code>MainActivity.kt</code> k\u00f3dj\u00e1t, \u00fagy hogy az im\u00e9nt l\u00e9trehozott <code>DrawingScreent</code> p\u00e9ld\u00e1nyos\u00edtsa:</p> <pre><code>package hu.bme.aut.android.simpledrawer\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.enableEdgeToEdge\nimport hu.bme.aut.android.simpledrawer.ui.screen.DrawingScreen\nimport hu.bme.aut.android.simpledrawer.ui.theme.SimpleDrawerTheme\n\nclass MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nSimpleDrawerTheme {\nDrawingScreen()\n}\n}\n}\n}\n</code></pre> <p>Hogy ha ezzel is megvagyunk ind\u00edtsuk el az alkalmaz\u00e1st! Most m\u00e1r l\u00e1tjuk a k\u00e9t AppBar-t illetve a k\u00f6z\u00f6tte elhelyezked\u0151 fekete k\u00e9perny\u0151t. A BottomBar-on felt\u0171nik egy icon is, aminek a megnyom\u00e1sa m\u00e9g semmit nem csin\u00e1l.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt kezd\u0151k\u00e9perny\u0151 (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt' A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/05-android-sqlite/#a-stilusvalaszto-megvalositasa-1-pont","title":"A st\u00edlusv\u00e1laszt\u00f3 megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>Most, hogy m\u00e1r l\u00e9tre van hozva a BottomBar, illetve a kezd\u0151k\u00e9perny\u0151 v\u00e1za, val\u00f3s\u00edtsuk meg a st\u00edlus v\u00e1laszt\u00e1st is. Ehhez m\u00f3dos\u00edtanunk kell a <code>BottomBar</code>-t, \u00fagy, hogy ha a St\u00edlus v\u00e1laszt\u00f3 gombra kattintunk, akkor megjelenjen egy men\u00fc, amin ki lehet v\u00e1lasztani a rajzm\u00f3dot. Ez a m\u00f3d a rajzol\u00e1s egy \u00e1llapotak\u00e9nt val\u00f3s\u00edthat\u00f3 meg. Ezeket az \u00e1llapotokat pedig a kor\u00e1bbi laborokon l\u00e1tottak szerint egy k\u00fcl\u00f6n viewModel-ben t\u00e1roljuk. </p>"},{"location":"laborok/05-android-sqlite/#szukseges-fuggoseg-hozzaadasa","title":"Sz\u00fcks\u00e9ges f\u00fcgg\u0151s\u00e9g hozz\u00e1ad\u00e1sa","text":"<p>A viewModel haszn\u00e1lat\u00e1hoz fel kell venn\u00fcnk egy f\u00fcgg\u0151s\u00e9get a <code>build.gradle.kts</code> f\u00e1jlba. Ehhez nyissuk meg a <code>libs.versions.toml</code> f\u00e1jlt a <code>gradle</code> package-ben, majd \u00edrjuk bele a k\u00f6vetkez\u0151t:</p> <p><pre><code>[versions]\n...\nlifecycleCompose = \"2.8.6\"\n\n[libraries]\n...\nandroidx-lifecycle-compose = {group = \"androidx.lifecycle\", name = \"lifecycle-viewmodel-compose\", version.ref = \"lifecycleCompose\" }\n</code></pre> Ezut\u00e1n friss\u00edts\u00fck a <code>build.gradle.kts</code>-t is: <pre><code>dependencies{\n    ...\n    implementation(libs.androidx.lifecycle.compose)\n}\n</code></pre></p> <p>A f\u00fcgg\u0151s\u00e9g felv\u00e9tele ut\u00e1n ne felejts\u00fcnk el r\u00e1nyomni a <code>Sync Now</code> gombra.</p>"},{"location":"laborok/05-android-sqlite/#viewmodel-letrehozas","title":"ViewModel l\u00e9trehoz\u00e1s","text":"<p>Hozzuk teh\u00e1t a viewModel-\u00fcnket. Ez seg\u00edt\u00e9sget fog ny\u00fajtani a sz\u00edn/st\u00edlus v\u00e1lt\u00e1sban, \u00e9s k\u00e9s\u0151bb a perzisztens adatt\u00e1rol\u00e1sban.</p> <p>Hozzunk l\u00e9tre a <code>screen</code> package-be a <code>DrawingScreen</code> mell\u00e9 egy <code>DrawingViewModel</code> Kotlin Filet majd \u00edrjuk bele a k\u00f6vetkez\u0151 k\u00f3dot:</p> <pre><code>package hu.bme.aut.android.simpledrawer.ui.screen\n\nimport android.app.Application\nimport androidx.lifecycle.AndroidViewModel\nimport androidx.lifecycle.viewModelScope\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.StateFlow\nimport kotlinx.coroutines.launch\n\nclass DrawingViewModel(application: Application): AndroidViewModel(application){\n\nprivate val _drawingMode = MutableStateFlow(DrawingMode.LINE)\nval drawingMode: StateFlow&lt;DrawingMode&gt; = _drawingMode\n\n\nprivate val _drawElements = MutableStateFlow&lt;List&lt;Any&gt;&gt;(emptyList())\nval drawElements: StateFlow&lt;List&lt;Any&gt;&gt; = _drawElements\n\n\nfun setDrawingMode(mode: DrawingMode){\nviewModelScope.launch {\n_drawingMode.value = mode\n}\n}\n\nfun addDrawElement(element: Any) {\nviewModelScope.launch {\n_drawElements.value += element\n}\n}\n}\n\nenum class DrawingMode{\nLINE,\nPOINT\n}\n</code></pre> <p>Az viewModel-hez sz\u00fcks\u00e9g\u00fcnk van m\u00e9g egy oszt\u00e1lyra a <code>DrawingMode</code>-ra. Ezzel tudjuk majd \u00e1ll\u00edtani a rajz st\u00edlust.</p> <p>K\u00f3d \u00e9rtelmez\u00e9se</p> <p>A laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel \u00e9rtelmezz\u00fck a viewModel k\u00f3dj\u00e1t!</p> <p>Most, hogy megvan a viewModel-\u00fcnk, m\u00e1r csak a <code>BottomBar</code>-t kell m\u00f3dos\u00edtani, hogy be tudjuk \u00e1ll\u00edtani az \u00e1llapotot.</p>"},{"location":"laborok/05-android-sqlite/#stilusvalaszto","title":"St\u00edlusv\u00e1laszt\u00f3","text":"<p>M\u00f3dos\u00edtsuk a <code>BottomBar</code>-t, \u00fagy, hogy ha a St\u00edlus v\u00e1laszt\u00f3 gombra kattintunk, akkor megjelenjen egy ablak, amin ki lehet v\u00e1lasztani a rajzm\u00f3dot. Ezt a k\u00f6vetkez\u0151 k\u00e9ppen tehetj\u00fck meg:</p> <pre><code>@Composable\nfun BottomBar(\nviewModel: DrawingViewModel = viewModel()\n){\nvar showStyle by remember { mutableStateOf(false) }\nval drawingMode by viewModel.drawingMode.collectAsState()\n\nBottomAppBar(\n...\nactions = {\nRow (\n...\n){\nIconButton(\nonClick = { showStyle = !showStyle },\nmodifier = Modifier.size(64.dp)\n) {\nIcon(\npainterResource(id = R.drawable.ic_style),\ncontentDescription = stringResource(id = R.string.style)\n)\nDropdownMenu(\nexpanded = showStyle,\nonDismissRequest = { showStyle = false}) {\nDropdownMenuItem(\ntext = { Text(\nstringResource(id = R.string.point),\ncolor = if (drawingMode == DrawingMode.POINT) Color.Magenta else Color.Black\n) },\nonClick = {\nviewModel.setDrawingMode(DrawingMode.POINT)\nshowStyle = false\n}\n)\nDropdownMenuItem(\ntext = { Text(\nstringResource(id = R.string.line),\ncolor = if (drawingMode == DrawingMode.LINE) Color.Magenta else Color.Black)\n},\nonClick = {\nviewModel.setDrawingMode(DrawingMode.LINE)\nshowStyle = false\n}\n)\n}\n}\n...\n}\n},\n...\n)\n}\n</code></pre> <p>viewModel</p> <p>Sokszor az Android Studio nem tudja megtal\u00e1lni a <code>viewModel()</code>-hez sz\u00fcks\u00e9ges importot. Ilyenkor k\u00e9zileg \u00edrjuk az importokhoz az al\u00e1bbi importot: <pre><code>import androidx.lifecycle.viewmodel.compose.viewModel\n</code></pre></p> <p>Ezut\u00e1n m\u00f3dos\u00edtsuk a <code>DrawingScreen</code>-en a <code>BottomBar</code> f\u00fcggv\u00e9ny h\u00edv\u00e1st, \u00e9s vegy\u00fck hozz\u00e1 a viewModel param\u00e9tert.</p> <pre><code>package hu.bme.aut.android.simpledrawer.ui.screen\n\nimport android.app.Application\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport hu.bme.aut.android.simpledrawer.ui.view.BottomBar\nimport hu.bme.aut.android.simpledrawer.ui.view.TopBar\n\n@Composable\nfun DrawingScreen() {\nval viewModel: DrawingViewModel = viewModel(\nfactory = ViewModelProvider.AndroidViewModelFactory(\nLocalContext.current.applicationContext as Application\n)\n)\nScaffold(\ntopBar = {\nTopBar()\n},\nbottomBar = {\nBottomBar(viewModel = viewModel)\n}\n) { innerPadding -&gt;\n//TODO replace with canvas\nSpacer(\nmodifier = Modifier\n.background(Color.Black)\n.padding(innerPadding)\n.fillMaxSize()\n)\n}\n}\n\n@Composable\n@Preview\nfun PreviewDrawingScreen() {\nDrawingScreen()\n}\n</code></pre> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt St\u00edlusv\u00e1laszt\u00f3 kinyitva (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/05-android-sqlite/#a-canvas-megvalositasa-1-pont","title":"A canvas megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>A rajzol\u00e1s folyam\u00e1n pontokat \u00e9s vonalakat szeretn\u00e9nk rajzolni. Ezek kezel\u00e9s\u00e9hez hozzunk l\u00e9tre k\u00e9t data class-t <code>Line</code> \u00e9s <code>Point</code> n\u00e9ven. Hozzunk l\u00e9tre egy <code>model</code> package-et a f\u0151 package-\u00fcnkben, majd implement\u00e1ljuk a k\u00e9t oszt\u00e1lyt:</p> <p><code>Point.kt</code>:</p> <pre><code>package hu.bme.aut.android.simpledrawer.model\n\nimport androidx.compose.ui.graphics.Color\n\ndata class Point(\nvar x: Float = 0F,\nvar y: Float = 0F,\nvar color: Color = Color.Yellow\n)\n</code></pre> <p><code>Line.kt</code>:</p> <pre><code>package hu.bme.aut.android.simpledrawer.model\n\nimport androidx.compose.ui.graphics.Color\n\ndata class Line(\nvar start: Point,\nvar end: Point,\nvar color: Color = Color.Yellow\n)\n</code></pre> <p>Ilyen form\u00e1ban fogjuk t\u00e1rolni az adatunkat a list\u00e1ban. Igaz, hogy a <code>Line</code> data class m\u00e9g k\u00e9tszer megkapja a sz\u00ednt, de ez csak az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt lesz \u00edgy, ezzel a param\u00e9terrel nem fogunk foglalkozni.</p> <p>Ezut\u00e1n a <code>view</code> package-en bel\u00fcl hozzunk l\u00e9tre egy <code>DrawingCanvas</code> Kotlin File-t. Ebben a Composable oszt\u00e1lyban a be\u00e9p\u00edtett <code>Canvas</code> Composable seg\u00edts\u00e9g\u00e9vel fogjuk a rajzol\u00e1st megval\u00f3s\u00edtani. Ennek az oszt\u00e1lynak van egy <code>Modifier.pointerInteropFilter</code> param\u00e9tere, aminek a seg\u00edts\u00e9g\u00e9vel fogjuk a gesztusokat lekezelni.</p> <pre><code>package hu.bme.aut.android.simpledrawer.ui.view\n\nimport androidx.compose.foundation.Canvas\nimport androidx.compose.foundation.background\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.ExperimentalComposeUiApi\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.geometry.Offset\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.input.pointer.pointerInteropFilter\nimport hu.bme.aut.android.simpledrawer.ui.screen.DrawingMode\nimport hu.bme.aut.android.simpledrawer.ui.screen.DrawingViewModel\n\n@OptIn(ExperimentalComposeUiApi::class)\n@Composable\nfun DrawingCanvas(\nmodifier: Modifier = Modifier,\ncurrentColor: Color = Color.Red,\ndrawingMode: DrawingMode,\nviewModel: DrawingViewModel,\ndrawElements: List&lt;Any&gt;\n) {\nvar startPoint by remember { mutableStateOf&lt;Offset?&gt;(null) }\nvar endPoint by remember { mutableStateOf&lt;Offset?&gt;(null) }\nvar tempPoint by remember { mutableStateOf&lt;Offset?&gt;(null) }\n\nCanvas(\nmodifier = modifier\n.background(Color.Black)\n.pointerInteropFilter { event -&gt;\nwhen (event.action) {\n/*TODO*/\n//ACTION_DOWN\n\n//ACTION_MOVE\n\n//ACTION_UP\n}\ntrue\n}\n) {\n\n//TODO drawElements\n\n}\n}\n</code></pre> <p>Az <code>event.action</code>-\u00f6n bel\u00fcl kezelni fogjuk a <code>MotionEvent.ACTION_DOWN</code>, <code>MotionEvent.ACTION_MOVE</code>, <code>MotionEvent.ACTION_UP</code> eventeket, valamint a <code>Canvas</code>-re rajzol\u00e1st is.</p> <p><code>ACTION_DOWN</code>:</p> <p><pre><code>MotionEvent.ACTION_DOWN -&gt; {\nstartPoint = Offset(event.x, event.y)\ntempPoint = startPoint\n}\n</code></pre> Ez az esem\u00e9ny akkor k\u00f6vetkezik be, amikor az ujjunkat a k\u00e9perny\u0151re r\u00e1helyezz\u00fck. Ilyenkor elmentj\u00fck ezt a param\u00e9tert, egy <code>startPoint</code> v\u00e1lt\u00f3z\u00f3ba.</p> <p><code>ACTION_MOVE</code>:</p> <p><pre><code>MotionEvent.ACTION_MOVE -&gt; {\ntempPoint = Offset(event.x, event.y)\nif (drawingMode == DrawingMode.LINE) {\nendPoint = tempPoint\n}\n}\n</code></pre> Miut\u00e1n lehelyez\u00fck az ujjunkat, tudjuk mozgatni is. Ilyenkor k\u00f6vetkezik be ez az esem\u00e9ny. Itt k\u00e9t r\u00e9szre bont\u00f3dik a folyamat, ugyanis, hogy ha pont-ot rajzolunk \u00e9s mozgatjuk az ujjunkat, akkor a pontot az utols\u00f3 poz\u00edci\u00f3ra szeretn\u00e9nk helyezni, \u00edgy a <code>tempPoint</code>-ba \u00edrjuk bele a poz\u00edci\u00f3t. Hogy ha vonalat rajzolunk, akkor az <code>endPoint</code>-ba kell bele\u00edrnunk a poz\u00edci\u00f3t.</p> <p><code>ACTION_UP</code>:</p> <pre><code>MotionEvent.ACTION_UP -&gt; {\nif (drawingMode == DrawingMode.POINT) {\ntempPoint?.let {\nviewModel.addDrawElement(Point(it.x, it.y, currentColor))\n}\n} else if (drawingMode == DrawingMode.LINE) {\nendPoint?.let {\nstartPoint?.let { start -&gt;\nviewModel.addDrawElement(\nLine(\nPoint(start.x, start.y, currentColor),\nPoint(it.x, it.y, currentColor),\ncurrentColor\n)\n)\n}\n}\n\n}\nstartPoint = null\nendPoint = null\ntempPoint = null\n}\n</code></pre> <p>Enn\u00e9l az esem\u00e9nyn\u00e9l m\u00e1r azt kezelj\u00fck mikor a felhaszn\u00e1l\u00f3 felemelte az \u00fajj\u00e1t a k\u00e9perny\u0151r\u0151l. Itt is k\u00e9t lehet\u0151s\u00e9gre bomlik az algoritmus, ugyanis, hogy ha pontr\u00f3l van sz\u00f3, akkor csak a <code>tempPoint</code> \u00e9rt\u00e9k\u00e9t kell r\u00f6gz\u00edteni. Azonban, ha m\u00e1r vonalr\u00f3l, akkor az <code>endPoint</code> illetve a <code>startPoint</code> \u00e9rt\u00e9keit kell r\u00f6gz\u00edteni vonalk\u00e9nt. Mindk\u00e9t esem\u00e9nyn\u00e9l sz\u00fcks\u00e9ges a null ellen\u0151rz\u00e9s!</p> <p>Miut\u00e1n az esem\u00e9nyek megvannak, m\u00e1r csak a kirajzol\u00e1st kell megoldani. Ezt \u00fagy tehetj\u00fck meg, hogy a drawElements-be elt\u00e1rolt adatokat egyes\u00e9vel kirajzoljuk t\u00edpusukt\u00f3l f\u00fcgg\u0151en:</p> <p><pre><code>Canvas (..){\ndrawElements.forEach { element -&gt;\nwhen (element) {\nis Point -&gt; drawCircle(color = element.color, center = Offset(element.x, element.y), radius = 5f)\nis Line -&gt; drawLine(color = element.color, start = Offset(element.start.x, element.start.y), end = Offset(element.end.x, element.end.y), strokeWidth = 5f)\n}\n}\n...\n}\n</code></pre> Ezzel k\u00e9sz is van a <code>DrawingCanvas</code>, azonban \u00edgy m\u00e9g nem l\u00e1tjuk a rajzot, csak ha az ujjunkat felemelt\u00fck a kijelz\u0151r\u0151l. Ezt a k\u00f6vetkez\u0151 k\u00e9ppen lehet jav\u00edtani:</p> <p><pre><code>Canvas (..){\n...\ntempPoint?.let {\nif (drawingMode == DrawingMode.POINT) {\ndrawCircle(color = currentColor, center = it, radius = 5f)\n} else if (drawingMode == DrawingMode.LINE &amp;&amp; startPoint != null) {\ndrawLine(color = currentColor, start = startPoint!!, end = it, strokeWidth = 5f)\n}\n}\n}\n</code></pre> Ebben az esetben kirajzoljuk azt az elemet aminek a kezd\u0151pontja az a pont ahol lehelyezt\u00fck az ujjunkat, a v\u00e9gpontja pedig az ahol az ujjunk van. Ha ezt mozgatjuk akkor val\u00f3s id\u0151ben friss\u00fclni fog, \u00edgy l\u00e1thatjuk el\u0151re a v\u00e9geredm\u00e9nyt.</p> <p>Ezut\u00e1n m\u00f3dos\u00edtsuk a <code>DrawingScreen</code>-t \u00e9s cser\u00e9lj\u00fck le a <code>Spacer</code>-t az im\u00e9nt elk\u00e9sz\u00edtett <code>DrawingCanvas</code>-re.</p> <pre><code>@Composable\nfun DrawingScreen() {\nval viewModel: DrawingViewModel = viewModel(\nfactory = ViewModelProvider.AndroidViewModelFactory(\nLocalContext.current.applicationContext as Application\n)\n)\nval drawingMode by viewModel.drawingMode.collectAsState()\nval drawElements by viewModel.drawElements.collectAsState()\nScaffold(\n...\n) { innerPadding -&gt;\nDrawingCanvas(\nmodifier = Modifier\n.padding(innerPadding)\n.fillMaxSize(),\ndrawingMode = drawingMode,\nviewModel = viewModel,\ndrawElements = drawElements\n)\n}\n}\n</code></pre> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt DrawingScreen (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel) p\u00e1r vonallal \u00e9s ponttal, a DrawingCanvas egy k\u00f3dr\u00e9szlete, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/05-android-sqlite/#perzisztencia-megvalositasa-sqlite-adatbazis-segitsegevel-1-pont","title":"Perzisztencia megval\u00f3s\u00edt\u00e1sa SQLite adatb\u00e1zis seg\u00edts\u00e9g\u00e9vel (1 pont)","text":"<p>Ahhoz, hogy az \u00e1ltalunk rajzolt objektumok megmaradjanak az alkalmaz\u00e1sb\u00f3l val\u00f3 kil\u00e9p\u00e9s ut\u00e1n is, az adatainkat valahogy olyan form\u00e1ba kell rendezn\u00fcnk, hogy azt k\u00f6nnyed\u00e9n el tudjuk t\u00e1rolni egy SQLite adatb\u00e1zisban.</p> <p>Hozzunk l\u00e9tre egy \u00faj package-et az <code>hu.bme.aut.android.simpledrawer</code>-en bel\u00fcl, aminek adjuk az <code>sqlite</code> nevet.</p>"},{"location":"laborok/05-android-sqlite/#tablak-definialasa","title":"T\u00e1bl\u00e1k defini\u00e1l\u00e1sa","text":"<p>Az adatb\u00e1ziskezel\u00e9s sor\u00e1n sok konstans jelleg\u0171 v\u00e1ltoz\u00f3val kell dolgoznunk, mint p\u00e9ld\u00e1ul a t\u00e1bl\u00e1kban l\u00e9v\u0151 oszlopok nevei, t\u00e1bl\u00e1k neve, adatb\u00e1zis f\u00e1jl neve, s\u00e9ma l\u00e9trehoz\u00f3 \u00e9s t\u00f6rl\u0151 szkiptek, stb. Ezeket \u00e9rdemes egy k\u00f6z\u00f6s helyen t\u00e1rolni, \u00edgy szerkeszt\u00e9skor vagy \u00faj entit\u00e1s bevezet\u00e9sekor nem kell a forr\u00e1sf\u00e1jlok k\u00f6z\u00f6tt ugr\u00e1lni, valamint egyszer\u0171bb a teljes adatb\u00e1zist l\u00e9trehoz\u00f3 \u00e9s t\u00f6rl\u0151 szkripteket gener\u00e1lni. Hozzunk l\u00e9tre egy \u00faj singleton oszt\u00e1lyt az <code>object</code> kulcssz\u00f3val az <code>sqlite</code> package-en bel\u00fcl <code>DbConstants</code> n\u00e9ven.</p> <p>Ezen bel\u00fcl el\u0151sz\u00f6r is konstansk\u00e9nt felvessz\u00fck az adatb\u00e1zis nev\u00e9t \u00e9s verzi\u00f3j\u00e1t is. Ha az adatb\u00e1zisunk s\u00e9m\u00e1j\u00e1n szeretn\u00e9nk v\u00e1ltoztatni, akkor ez ut\u00f3bbit kell inkrement\u00e1lnunk, \u00edgy elker\u00fclhetj\u00fck az inkompatibilit\u00e1s miatti nem k\u00edv\u00e1natos hib\u00e1kat.</p> <p><pre><code>package hu.bme.aut.android.simpledrawer.sqlite\n\nobject DbConstants{\n\nconst val DATABASE_NAME = \"simpledrawer.db\"\nconst val DATABASE_VERSION = 1\n\n//Points\n\n//Lines\n}\n</code></pre> Ezek ut\u00e1n a <code>DbConstants</code> nev\u0171 oszt\u00e1lyba hozzuk l\u00e9tre a <code>Point</code> oszt\u00e1lyhoz a konstansokat. Az oszt\u00e1lyokon bel\u00fcl l\u00e9trehozunk egy <code>enum</code>-ot is, hogy k\u00f6nnyebben tudjuk kezelni a t\u00e1bla oszlopait, majd konstansokban elt\u00e1roljuk a t\u00e1bla l\u00e9trehoz\u00e1s\u00e1t szolg\u00e1l\u00f3 SQL utas\u00edt\u00e1st valamint a t\u00e1bla nev\u00e9t is. V\u00e9gezet\u00fcl elk\u00e9sz\u00edtj\u00fck azokat a f\u00fcggv\u00e9nyeket, amelyeket a t\u00e1bla l\u00e9trehoz\u00e1sakor, illetve upgrade-el\u00e9sekor kell megh\u00edvni:</p> <pre><code>object Points {\nconst val DATABASE_TABLE = \"points\"\n\nenum class Columns {\nID, COORD_X, COORD_Y\n}\n\nprivate val DATABASE_CREATE = \"\"\"create table if not exists $DATABASE_TABLE (\n${Columns.ID.name} integer primary key autoincrement,\n${Columns.COORD_X.name} real not null,\n${Columns.COORD_Y.name} real not null\n        );\"\"\"\n\nprivate const val DATABASE_DROP = \"drop table if exists $DATABASE_TABLE;\"\n\nfun onCreate(database: SQLiteDatabase) {\ndatabase.execSQL(DATABASE_CREATE)\n}\n\nfun onUpgrade(database: SQLiteDatabase, oldVersion: Int, newVersion: Int) {\ndatabase.execSQL(DATABASE_DROP)\nonCreate(database)\n}\n}\n</code></pre> <p>Figyelj\u00fck meg, hogy a <code>DbConstants</code> oszt\u00e1lyon bel\u00fcl l\u00e9trehoztunk egy bels\u0151 <code>Points</code> nev\u0171 oszt\u00e1lyt, amiben a <code>Points</code> entit\u00e1sokat t\u00e1rol\u00f3 t\u00e1bl\u00e1hoz tartoz\u00f3 konstans \u00e9rt\u00e9keket t\u00e1roljuk. Amennyiben az alkalmaz\u00e1sunk t\u00f6bb entit\u00e1st is adatb\u00e1zisban t\u00e1rol, akkor \u00e9rdemes az egyes oszt\u00e1lyokhoz tartoz\u00f3 konstansokat k\u00fcl\u00f6n-k\u00fcl\u00f6n bels\u0151 oszt\u00e1lyokban t\u00e1rolni. \u00cdgy sokkal \u00e1tl\u00e1that\u00f3bb \u00e9s karbantarthat\u00f3bb lesz a k\u00f3d, mint ha \u00f6mlesztve felvenn\u00e9nk a DbConstants-ba az \u00f6sszes t\u00e1bla \u00f6sszes konstans\u00e1t. Ezek a bels\u0151 oszt\u00e1lyok praktikusan ugyanolyan n\u00e9vvel l\u00e9teznek, mint az entit\u00e1s oszt\u00e1lyok. Vegy\u00fck teh\u00e1t fel hasonl\u00f3 m\u00f3don a <code>Lines</code> nev\u0171 oszt\u00e1lyt is:</p> <pre><code>object Lines {\nconst val DATABASE_TABLE = \"lines\"\n\nenum class Columns {\nID, START_X, START_Y, END_X, END_Y\n}\n\nprivate val DATABASE_CREATE = \"\"\"create table if not exists $DATABASE_TABLE (\n${Columns.ID.name} integer primary key autoincrement,\n${Columns.START_X.name} real not null,\n${Columns.START_Y.name} real not null,\n${Columns.END_X.name} real not null,\n${Columns.END_Y.name} real not null\n        );\"\"\"\n\nprivate const val DATABASE_DROP = \"drop table if exists $DATABASE_TABLE;\"\n\nfun onCreate(database: SQLiteDatabase) {\ndatabase.execSQL(DATABASE_CREATE)\n}\n\nfun onUpgrade(database: SQLiteDatabase, oldVersion: Int, newVersion: Int) {\ndatabase.execSQL(DATABASE_DROP)\nonCreate(database)\n}\n}\n</code></pre> <p>\u00c9rdemes megfigyelni tov\u00e1bb\u00e1 azt is, hogy az oszt\u00e1lyokat nem a class kulcssz\u00f3val deklar\u00e1ltuk. Helyette az <code>object</code>-et haszn\u00e1ljuk, amivel a Kotlin nyelv azt biztos\u00edtja sz\u00e1munkra, hogy a <code>DbConstants</code> \u00e9s a benne l\u00e9v\u0151 <code>Points</code> \u00e9s <code>Lines</code> oszt\u00e1ly is singletonk\u00e9nt viselkednek, azaz az alkalmaz\u00e1s futtat\u00e1sakor l\u00e9trej\u00f6n bel\u0151l\u00fck egy p\u00e9ld\u00e1ny, tov\u00e1bbi p\u00e9ld\u00e1nyokat pedig nem lehet l\u00e9trehozni bel\u0151l\u00fck.</p>"},{"location":"laborok/05-android-sqlite/#a-segedosztaly-letrehozasa","title":"A seg\u00e9doszt\u00e1ly l\u00e9trehoz\u00e1sa","text":"<p>Az adatb\u00e1zis l\u00e9trehoz\u00e1s\u00e1hoz sz\u00fcks\u00e9g van egy olyan seg\u00e9doszt\u00e1lyra, ami l\u00e9trehozza mag\u00e1t az adatb\u00e1zist, \u00e9s azon bel\u00fcl inicializ\u00e1lja a t\u00e1bl\u00e1kat is. Eset\u00fcnkben ez lesz a <code>DbHelper</code> oszt\u00e1ly, ami az <code>SQLiteOpenHelper</code> oszt\u00e1lyb\u00f3l sz\u00e1rmazik. Vegy\u00fck fel ezt is az <code>sqlite</code> package-be.</p> <pre><code>package hu.bme.aut.android.simpledrawer.sqlite\n\nimport android.content.Context\nimport android.database.sqlite.SQLiteDatabase\nimport android.database.sqlite.SQLiteOpenHelper\n\nclass DbHelper(context: Context):\nSQLiteOpenHelper(context, DbConstants.DATABASE_NAME, null, DbConstants.DATABASE_VERSION) {\n\noverride fun onCreate(sqLiteDatabase: SQLiteDatabase) {\nDbConstants.Lines.onCreate(sqLiteDatabase)\nDbConstants.Points.onCreate(sqLiteDatabase)\n}\n\noverride fun onUpgrade(\nsqLiteDatabase: SQLiteDatabase,\noldVersion: Int,\nnewVersion: Int\n) {\nDbConstants.Lines.onUpgrade(sqLiteDatabase, oldVersion, newVersion)\nDbConstants.Points.onUpgrade(sqLiteDatabase, oldVersion, newVersion)\n}\n}\n</code></pre> <p>Ezen k\u00edv\u00fcl sz\u00fcks\u00e9g\u00fcnk van m\u00e9g egy olyan seg\u00e9doszt\u00e1lyra is, ami ezt az eg\u00e9szet \u00f6sszefogja, \u00e9s amivel egyszer\u0171en tudjuk kezelni az adatb\u00e1zisunkat. Ez lesz a <code>PersistentDataHelper</code> tov\u00e1bbra is az <code>sqlite</code> package-ben. Ebben olyan f\u00fcgg\u00e9nyeket fogunk megval\u00f3s\u00edtani, mint pl. az <code>open()</code> \u00e9s a <code>close()</code>, amikkel az adatb\u00e1ziskapcsolatot nyithatjuk meg, illetve z\u00e1rhatjuk le. Ezen k\u00edv\u00fcl ebben az oszt\u00e1lyban val\u00f3s\u00edtjuk meg azokat a f\u00fcggv\u00e9nyeket is, amik az adatok adatb\u00e1zisba val\u00f3 ki\u00edr\u00e1s\u00e1\u00e9rt, illetve az onnan val\u00f3 kiolvas\u00e1s\u00e1\u00e9rt felel\u0151sek. Figyelj\u00fcnk r\u00e1, hogy a saj\u00e1t Point oszt\u00e1lyunkat v\u00e1lasszuk az import sor\u00e1n.</p> <pre><code>package hu.bme.aut.android.simpledrawer.sqlite\n\nimport android.content.Context\nimport android.database.sqlite.SQLiteDatabase\nimport android.database.sqlite.SQLiteException\n\nclass PersistentDataHelper(context: Context) {\nprivate var database: SQLiteDatabase? = null\nprivate val dbHelper: DbHelper = DbHelper(context)\n\n\nprivate val pointColumns = arrayOf(\nDbConstants.Points.Columns.ID.name,\nDbConstants.Points.Columns.COORD_X.name,\nDbConstants.Points.Columns.COORD_Y.name,\n)\n\nprivate val lineColumns = arrayOf(\nDbConstants.Lines.Columns.ID.name,\nDbConstants.Lines.Columns.START_X.name,\nDbConstants.Lines.Columns.START_Y.name,\nDbConstants.Lines.Columns.END_X.name,\nDbConstants.Lines.Columns.END_Y.name,\n)\n\n\n@Throws(SQLiteException::class)\nfun open() {\ndatabase = dbHelper.writableDatabase\n}\n\nfun close() {\ndbHelper.close()\n}\n\n//PersistPoints\n\n\n//RestorePoints\n\n\n//ClearPoints\n\n\n//CursorToPoint\n\n\n//PersistLines\n\n\n//RestoreLines\n\n\n//ClearLines\n\n\n//CursorToLine\n\n}\n</code></pre> <p>Eg\u00e9sz\u00edts\u00fck ki a <code>PersistentDataHelper</code> oszt\u00e1lyt az al\u00e1bbiak szerint:</p> <ol> <li>PersistPoints: Itt kell megval\u00f3s\u00edtanunk a pontok elt\u00e1rol\u00e1s\u00e1t. Els\u0151sorban \u00fcr\u00edtj\u00fck az adatb\u00e1zist, ut\u00e1na pedig a kapott Lista param\u00e9teren v\u00e9gigmegy\u00fcnk \u00e9s egyes\u00e9vel elmentj\u00fck a pontokat.</li> <li>RestorePoints: Itt kell megval\u00f3s\u00edtanunk a pontok bet\u00f6lt\u00e9s\u00e9t. Ehhez egy ideiglenes MutableList-et haszn\u00e1lunk, amelyhez hozz\u00e1adjuk a kiolvasott pontokat.</li> <li>ClearPoints: Ezzel a f\u00fcggv\u00e9nnyel \u00e9rj\u00fck el hogy az adatb\u00e1zisb\u00f3l t\u00f6r\u00f6lj\u00fck a Points t\u00e1bl\u00e1t.</li> <li>CursorToPoint: Ezzel a f\u00fcggv\u00e9nnyel olvasunk ki egyetlen pontnak az adat\u00e1t az adatb\u00e1zisb\u00f3l.</li> <li>PersistLines: Itt kell megval\u00f3s\u00edtanunk a vonalak elt\u00e1rol\u00e1s\u00e1t. Els\u0151sorban \u00fcr\u00edtj\u00fck az adatb\u00e1zist, ut\u00e1na pedig a kapott Lista param\u00e9teren v\u00e9gigmegy\u00fcnk \u00e9s egyes\u00e9vel elmentj\u00fck a vonalakat.</li> <li>RestoreLines: Itt kell megval\u00f3s\u00edtanunk a vonalak bet\u00f6lt\u00e9s\u00e9t. Ehhez egy ideiglenes MutableList-et haszn\u00e1lunk, amelyhez hozz\u00e1adjuk a kiolvasott vonalakat.</li> <li>ClearLines: Ezzel a f\u00fcggv\u00e9nnyel \u00e9rj\u00fck el hogy az adatb\u00e1zisb\u00f3l t\u00f6r\u00f6lj\u00fck a Lines t\u00e1bl\u00e1t.</li> <li>CursorToLine: Ezzel a f\u00fcggv\u00e9nnyel olvasunk ki egyetlen vonalnak adat\u00e1t az adatb\u00e1zisb\u00f3l.</li> </ol> <p>1. PersistPoints <pre><code>fun persistPoints(points: List&lt;Point&gt;) {\nclearPoints()\nfor (point in points) {\nval values = ContentValues()\nvalues.put(DbConstants.Points.Columns.COORD_X.name, point.x)\nvalues.put(DbConstants.Points.Columns.COORD_Y.name, point.y)\ndatabase!!.insert(DbConstants.Points.DATABASE_TABLE, null, values)\n}\n}\n</code></pre> 2. RestorePoints <pre><code>fun restorePoints(): MutableList&lt;Point&gt; {\nval points: MutableList&lt;Point&gt; = ArrayList()\nval cursor = database!!.query(\nDbConstants.Points.DATABASE_TABLE,\npointColumns,\nnull,\nnull,\nnull,\nnull,\nnull\n)\ncursor.moveToFirst()\nwhile (!cursor.isAfterLast) {\nval point: Point = cursorToPoint(cursor)\npoints.add(point)\ncursor.moveToNext()\n}\ncursor.close()\nreturn points\n}\n</code></pre></p> <p>3. ClearPoints <pre><code>fun clearPoints() {\ndatabase!!.delete(DbConstants.Points.DATABASE_TABLE, null, null)\n}\n</code></pre></p> <p>4. CursorToPoints <pre><code>private fun cursorToPoint(cursor: Cursor): Point {\nval point = Point(\ncursor.getFloat(DbConstants.Points.Columns.COORD_X.ordinal),\ncursor.getFloat(DbConstants.Points.Columns.COORD_Y.ordinal),\nColor(Color.Red.toArgb())\n)\nreturn point\n}\n</code></pre></p> <p>5. PersistLines <pre><code>fun persistLines(lines: List&lt;Line&gt;) {\nclearLines()\nfor (line in lines) {\nval values = ContentValues()\nvalues.put(DbConstants.Lines.Columns.START_X.name, line.start.x)\nvalues.put(DbConstants.Lines.Columns.START_Y.name, line.start.y)\nvalues.put(DbConstants.Lines.Columns.END_X.name, line.end.x)\nvalues.put(DbConstants.Lines.Columns.END_Y.name, line.end.y)\ndatabase!!.insert(DbConstants.Lines.DATABASE_TABLE, null, values)\n}\n}\n</code></pre> 6. RestoreLines <pre><code>fun restoreLines(): MutableList&lt;Line&gt; {\nval lines: MutableList&lt;Line&gt; = ArrayList()\nval cursor = database!!.query(\nDbConstants.Lines.DATABASE_TABLE,\nlineColumns,\nnull,\nnull,\nnull,\nnull,\nnull\n)\ncursor.moveToFirst()\nwhile (!cursor.isAfterLast) {\nval line: Line = cursorToLine(cursor)\nlines.add(line)\ncursor.moveToNext()\n}\ncursor.close()\nreturn lines\n}\n</code></pre></p> <p>7. ClearLines <pre><code>fun clearLines() {\ndatabase!!.delete(DbConstants.Lines.DATABASE_TABLE, null, null)\n}\n</code></pre></p> <p>8. CursorToLine <pre><code>private fun cursorToLine(cursor: Cursor): Line {\nval line = Line(\nPoint(\ncursor.getFloat(DbConstants.Lines.Columns.START_X.ordinal),\ncursor.getFloat(DbConstants.Lines.Columns.START_Y.ordinal)\n),\nPoint(\ncursor.getFloat(DbConstants.Lines.Columns.END_X.ordinal),\ncursor.getFloat(DbConstants.Lines.Columns.END_Y.ordinal)\n),\nColor(Color.Red.toArgb())\n)\nreturn line\n}\n</code></pre></p>"},{"location":"laborok/05-android-sqlite/#viewmodel-kiegeszitese","title":"ViewModel kieg\u00e9sz\u00edt\u00e9se","text":"<p>Ahhoz hogy a perzisztencia rendesen m\u0171k\u00f6dj\u00f6n ki kell eg\u00e9sz\u00edten\u00fcnk a viewModel-t, \u00fagy hogy minden egyes rajzol\u00e1s ut\u00e1n elmentse az adatb\u00e1zisba az adatokat. \u00cdgy az adataink akkor is megmaradnak, ha \u00fajraind\u00edtjuk az alkalmaz\u00e1st. Ahhoz hogy ezt l\u00e1ssuk is \u00fajra a rajzol\u00f3 fel\u00fcleten, be is kell t\u00f6lteni a rajzot. Ebben szerpet fog j\u00e1tszani az <code>init{}</code> blokk.</p> <pre><code>class DrawingViewModel(application: Application): AndroidViewModel(application){\n\n\n//DrawingMode\n\n//DrawElements\n\n\nprivate val dataHelper = PersistentDataHelper(application)\n\n\ninit{\nloadDrawElements()\n}\n\n\n//setDrawingMode\n\n\nfun addDrawElement(element: Any) {\nviewModelScope.launch {\n_drawElements.value += element\nsaveDrawElements()\n}\n}\n\n\nprivate fun saveDrawElements() {\nviewModelScope.launch {\ndataHelper.open()\ndataHelper.clearPoints()\ndataHelper.clearLines()\nval points = _drawElements.value.filterIsInstance&lt;Point&gt;()\nval lines = _drawElements.value.filterIsInstance&lt;Line&gt;()\ndataHelper.persistPoints(points)\ndataHelper.persistLines(lines)\ndataHelper.close()\n}\n}\n\nprivate fun loadDrawElements() {\nviewModelScope.launch {\ndataHelper.open()\nval points = dataHelper.restorePoints()\nval lines = dataHelper.restoreLines()\n_drawElements.value = points + lines\ndataHelper.close()\n}\n}\n}\n</code></pre> <p>L\u00e1thatjuk, hogy az <code>init{}</code> blokkban megh\u00edv\u00f3dik a <code>loadDrawElements()</code> aminek a seg\u00edts\u00e9g\u00e9vel, kiolvassuk a kor\u00e1bban defini\u00e1lt <code>restorePoints</code> \u00e9s <code>restoreLines</code> f\u00fcggv\u00e9nyekkel az adatokat az adatb\u00e1zisb\u00f3l, majd hozz\u00e1adjuk a List\u00e1nkhoz.</p> <p>A ment\u00e9s hasonl\u00f3 m\u00f3don m\u0171k\u00f6dik csak ezt a f\u00fcggv\u00e9nyt akkor h\u00edvjuk, hogyha rajzoltunk.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az elk\u00e9sz\u00fclt DrawingScreen (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel) p\u00e1r vonallal \u00e9s ponttal, \u00e9s az ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/05-android-sqlite/#onallo-feladat-a-vaszon-torlese-1-pont","title":"\u00d6n\u00e1llo feladat: A v\u00e1szon t\u00f6rl\u00e9se (1 pont)","text":"<p>A BottomBar-on vegy\u00fcnk fel egy \u00faj vez\u00e9rl\u0151t, ami a t\u00f6rl\u00e9s\u00e9rt felel\u0151s! Ennek megnyom\u00e1sa eset\u00e9n egy dial\u00f3gus ablak ugorjon fel, \u00e9s figyelmeztessen minket, hogy a t\u00f6rl\u00e9s nem visszavonhat\u00f3! Legyen egy pozit\u00edv \u00e9s egy negat\u00edv gombja!</p> <p>A gomb iconja legyen a <code>R.drawable.ic_clear_canvas</code>!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a t\u00f6rl\u00e9st meger\u0151s\u00edt\u0151 dial\u00f3gus ablak (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a t\u00f6rl\u00e9st elv\u00e9gz\u0151 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/05-android-sqlite/#imsc-feladat-2-imsc-pont","title":"iMSc feladat (2 iMSc pont)","text":"<p>Vegy\u00fcnk fel az alkalmaz\u00e1sba egy olyan vez\u00e9rl\u0151t, amivel v\u00e1ltoztatni lehet a rajzol\u00e1s sz\u00edn\u00e9t a 3 f\u0151 sz\u00edn k\u00f6z\u00f6tt (RGB).</p> <p>Figyelem: az adatb\u00e1zisban is el kell menteni az adott objektum sz\u00edn\u00e9t!</p> <p>Adatb\u00e1zis</p> <p>\u00c9rdemes Wipe Data-t ind\u00edtani, vagy verzi\u00f3t v\u00e1ltani az adatb\u00e1zisn\u00e1l, hogy ha v\u00e1ltoztatjuk a fel\u00e9p\u00edt\u00e9s\u00e9t.</p> <p>BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a rajzol\u00f3 oldal a k\u00fcl\u00f6nb\u00f6z\u0151 sz\u00ednekkel (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f6.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p> <p>BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a k\u00fcl\u00f6nb\u00f6z\u0151 sz\u00ednek ment\u00e9s\u00e9t v\u00e9gz\u0151 k\u00f3dr\u00e9szletet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f7.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/06-android-room/","title":"Labor 06 - Room - Bev\u00e1s\u00e1rl\u00f3 lista alkalmaz\u00e1s","text":""},{"location":"laborok/06-android-room/#bevezeto","title":"Bevezet\u0151","text":"<p>A labor sor\u00e1n egy bev\u00e1s\u00e1rl\u00f3 lista alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. Az alkalmaz\u00e1sban lehet\u0151s\u00e9g van r\u00f6gz\u00edteni, t\u00f6r\u00f6lni \u00e9s megv\u00e1s\u00e1roltnak jel\u00f6lni a k\u00edv\u00e1nt term\u00e9keket. Az alkalmaz\u00e1s perzisztensen t\u00e1rolja a tem\u00e9keket. A funkcionalit\u00e1s mellett a projekt nagy hangs\u00falyt fektet az architektur\u00e1lis k\u00e9rd\u00e9sekre is.</p> <p>Az alkalmaz\u00e1s a term\u00e9kek list\u00e1j\u00e1t <code>LazyColumn</code>-ban jelen\u00edti meg, a lista elemeket \u00e9s azok \u00e1llapot\u00e1t a <code>Room</code> nev\u0171 ORM library seg\u00edts\u00e9g\u00e9vel t\u00e1rolja perzisztensen. \u00daj elem felv\u00e9tel\u00e9re egy <code>FloatingActionButton</code> megnyom\u00e1s\u00e1val van lehet\u0151s\u00e9g.</p> <p>ORM</p> <p>ORM = Object-relational mapping</p> <p>Felhaszn\u00e1lt technol\u00f3gi\u00e1k:</p> <ul> <li><code>Scaffold</code></li> <li><code>AppBar</code></li> <li><code>FloatingActionButton</code></li> <li><code>Dialog</code></li> <li><code>ExposedDropdownMenu</code></li> <li><code>LazyColumn</code></li> <li><code>ViewModel</code></li> <li><code>Repository Pattern</code></li> <li><code>Room</code></li> </ul>"},{"location":"laborok/06-android-room/#az-alkalmazas-specifikacioja","title":"Az alkalmaz\u00e1s specifik\u00e1ci\u00f3ja","text":"<p>Az alkalmaz\u00e1s egy <code>Activity</code>-b\u0151l \u00e1ll, amin egy Composable oszt\u00e1ly fog szerepelni, a <code>MainScreen</code>. \u00daj elemet a jobb als\u00f3 sarokban tal\u00e1lhat\u00f3 <code>FloatingActionButton</code> seg\u00edts\u00e9g\u00e9vel vehet\u00fcnk fel. Erre kattintva egy dial\u00f3gus jelenik meg, amin megadhatjuk a v\u00e1s\u00e1rolni k\u00edv\u00e1nt \u00e1ru nev\u00e9t, le\u00edr\u00e1s\u00e1t, becs\u00fclt \u00e1r\u00e1t \u00e9s kateg\u00f3ri\u00e1j\u00e1t.</p> <p>A dial\u00f3guson a Save gombra kattintva a dial\u00f3gus elt\u0171nik, a benne megadott adatokkal l\u00e9trej\u00f6n egy \u00faj elem a list\u00e1ban. Az egyes lista elemeken <code>CheckBox</code> seg\u00edts\u00e9g\u00e9vel jelezhetj\u00fck, hogy m\u00e1r megv\u00e1s\u00e1roltuk \u0151ket. A kuka ikonra kattintva t\u00f6r\u00f6lhetj\u00fck az adott elemet. A men\u00fcben tal\u00e1lhat\u00f3 Delete all opci\u00f3val az \u00f6sszes lista elemet t\u00f6r\u00f6lhetj\u00fck.</p> <p> </p>"},{"location":"laborok/06-android-room/#laborfeladatok","title":"Laborfeladatok","text":"<p>A labor sor\u00e1n az al\u00e1bbi feladatokat a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve a jel\u00f6lt feladatokat \u00f6n\u00e1ll\u00f3an kell megval\u00f3s\u00edtani.</p> <ol> <li>A felhaszn\u00e1l\u00f3i fel\u00fclet l\u00e9trehoz\u00e1sa: 2 pont</li> <li>A viewModel \u00e9s a repository kialak\u00edt\u00e1sa: 1 pont</li> <li>A perzisztens adatt\u00e1rol\u00e1s megval\u00f3s\u00edt\u00e1sa: 1 pont</li> <li>\u00d6n\u00e1ll\u00f3 feladat (t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa): 1 pont</li> </ol> <p>IMSc</p> <p>A laborfeladatok sikeres befejez\u00e9se ut\u00e1n az IMSc feladatokat megoldva 2 IMSc pont szerezhet\u0151:     Meger\u0151s\u00edt\u0151 dial\u00f3gus: 1 pont     Elemek szerkeszt\u00e9se: 1 pont</p>"},{"location":"laborok/06-android-room/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/06-android-room/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol>"},{"location":"laborok/06-android-room/#projekt-letrehozasa","title":"Projekt l\u00e9trehoz\u00e1sa","text":"<p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd:</p> <ol> <li> <p>Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get.</p> </li> <li> <p>A projekt neve legyen <code>ShoppingList</code>, a kezd\u0151 package pedig <code>hu.bme.aut.android.shoppinglist</code></p> </li> <li> <p>Nyelvnek v\u00e1lasszuk a Kotlin-t.</p> </li> <li> <p>A minimum API szint legyen API24: Android 7.0.</p> </li> <li> <p>A Build configuration language Kotlin DSL legyen.</p> </li> </ol> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 ShoppingList k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p>"},{"location":"laborok/06-android-room/#fuggosegek-frissitese","title":"F\u00fcgg\u00f6s\u00e9gek friss\u00edt\u00e9se","text":"<p>Az Android Studio a projekt l\u00e9trehoz\u00e1sakor egy elavult ComposeBom-ot haszn\u00e1l. Ennek a verzi\u00f3j\u00e1t friss\u00edts\u00fck a <code>libs.versions.toml</code> f\u00e1jlban:</p> <pre><code>[versions]\n...\ncomposeBom = \"2024.09.03\"\n</code></pre> <p>Ne felejts\u00fcnk el r\u00e1nyomni a <code>Sync Now</code> gombra!</p>"},{"location":"laborok/06-android-room/#eroforrasok","title":"Er\u0151forr\u00e1sok","text":"<p>T\u00f6lts\u00fck le \u00e9s t\u00f6m\u00f6r\u00edts\u00fck ki az alkalmaz\u00e1shoz sz\u00fcks\u00e9ges er\u0151forr\u00e1sokat, majd m\u00e1soljuk be \u0151ket a projekt app/src/main/res mapp\u00e1j\u00e1ba (Studio-ban a res mapp\u00e1n \u00e1llva Ctrl+V)!</p> <p>Ez ut\u00e1n illessz\u00fck be a sz\u00f6veges er\u0151forr\u00e1sokat is!</p> <p><code>strings.xml</code>:</p> <pre><code>&lt;resources&gt;\n&lt;string name=\"app_name\"&gt;ShoppingList&lt;/string&gt;\n&lt;string name=\"new_shopping_item\"&gt;New Shopping Item&lt;/string&gt;\n&lt;string name=\"edit_shopping_item\"&gt;Edit Shopping Item&lt;/string&gt;\n&lt;string name=\"label_name\"&gt;Name&lt;/string&gt;\n&lt;string name=\"label_description\"&gt;Description&lt;/string&gt;\n&lt;string name=\"label_estimated_price\"&gt;Estimated price&lt;/string&gt;\n&lt;string name=\"label_already_purchased\"&gt;Already purchased&lt;/string&gt;\n&lt;string name=\"label_category\"&gt;Category&lt;/string&gt;\n&lt;string name=\"cancel\"&gt;Cancel&lt;/string&gt;\n&lt;string name=\"save\"&gt;Save&lt;/string&gt;\n&lt;string name=\"label_purchased\"&gt;Purchased\\n&lt;/string&gt;\n&lt;string name=\"label_not_purchased\"&gt;Not\\nPurchased&lt;/string&gt;\n&lt;string name=\"category_food\"&gt;Food&lt;/string&gt;\n&lt;string name=\"category_book\"&gt;Book&lt;/string&gt;\n&lt;string name=\"category_electronics\"&gt;Electronics&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>"},{"location":"laborok/06-android-room/#a-modell-letrehozasa","title":"A modell l\u00e9trehoz\u00e1sa","text":"<p>Az alkalmaz\u00e1sunk egy bev\u00e1s\u00e1rl\u00f3 list\u00e1t, azon bel\u00fcl is v\u00e1s\u00e1rl\u00e1si t\u00e9teleket fog megjelen\u00edteni. Ez fontos lesz mind a felhaszn\u00e1l\u00f3i fel\u00fclet, mind a perzisztens adatt\u00e1rol\u00e1s szempontj\u00e1b\u00f3l, \u00edgy el\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el ezt. Vegy\u00fcnk fel a projekt\u00fcnk alap\u00e9rtelmezett package-\u00e9be egy <code>data</code> package-et, majd ezen bel\u00fcl egy <code>entities</code> package-et. Itt fogjuk megval\u00f3s\u00edtani a <code>ShoppingItem</code> oszt\u00e1lyt.</p> <p><code>ShoppingItem.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.data.entities\n\ndata class ShoppingItem(\nvar id: Long? = null,\nvar name: String,\nvar description: String,\nvar category: Category,\nvar estimatedPrice: Int,\nvar isBought: Boolean\n){\nenum class Category{\nFOOD, ELECTRONIC, BOOK\n}\n}\n</code></pre> <p>A t\u00e9tel\u00fcnk tartalmaz egy ID-t, egy nevet, egy le\u00edr\u00e1st, egy kateg\u00f3ri\u00e1t, egy \u00e1rat \u00e9s egy kapcsol\u00f3t, ami megmondja, hogy az adott t\u00e9telt megvett\u00fck-e m\u00e1r vagy sem. A v\u00e1laszthat\u00f3 kateg\u00f3ri\u00e1kat egy bels\u0151 enum class-k\u00e9nt val\u00f3s\u00edtottuk meg.</p> <p>data class</p> <p>Kotlinban van lehet\u0151s\u00e9g \u00fagynevezett data class l\u00e9trehoz\u00e1s\u00e1ra. Ezt tal\u00e1n legk\u00f6nnyebben a Java-s POJO (Plain-Old-Java-Object) oszt\u00e1lyoknak lehet megfeleltetni. A c\u00e9ljuk, hogy publikus property-kben \u00f6sszef\u00fcgg\u0151 adatokat t\u00e1roljanak, semmi t\u00f6bb! Ezen k\u00edv\u00fcl automatikusan l\u00e9trej\u00f6nnek bizonyos seg\u00e9df\u00fcggv\u00e9nyek is, p\u00e9ld\u00e1ul egy megfelel\u0151 equals, toString \u00e9s copy implement\u00e1ci\u00f3.</p>"},{"location":"laborok/06-android-room/#a-felhasznaloi-felulet-elkeszitese-2-pont","title":"A felhaszn\u00e1l\u00f3i fel\u00fclet elk\u00e9sz\u00edt\u00e9se (2 pont)","text":"<p>Az alkalmaz\u00e1sunk felhaszn\u00e1l\u00f3i fel\u00fclete el\u00e9g egyszer\u0171. Egy screen-t tartalmaz, amin tal\u00e1lhat\u00f3 egy <code>TopBar</code>, a lista az elemekr\u0151l \u00e9s egy <code>FloatingActionButton</code>. A gomb megnyom\u00e1s\u00e1nak hat\u00e1s\u00e1ra fog megny\u00edlni az \u00faj elem felv\u00e9tel\u00e9re szolg\u00e1l\u00f3 dial\u00f3gus ablak. A <code>ShoppingListScreen</code> a <code>hu.bme.aut.android.shoppinglist.feature.shoppinglist</code> package-be fog ker\u00fclni, az \u00e9p\u00edt\u0151elemei pedig ezen bel\u00fcl egy <code>components</code> package-be. Kezdj\u00fck is ezekkel:</p>"},{"location":"laborok/06-android-room/#komponensek","title":"Komponensek","text":""},{"location":"laborok/06-android-room/#topbar-megvalositasa","title":"TopBar megval\u00f3s\u00edt\u00e1sa","text":"<p>Hozzuk l\u00e9tre a <code>hu.bme.aut.android.shoppinglist.feature.shoppinglist.components</code> package-ben a <code>ShoppingListTopBar.kt</code> f\u00e1jlt, majt t\u00f6lts\u00fck fel az al\u00e1bbi tartalommal:</p> <pre><code>package hu.bme.aut.android.shoppinglist.feature.shoppinglist.components\n\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Delete\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport hu.bme.aut.android.shoppinglist.R\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun ShoppingListTopBar() {\nTopAppBar(\ntitle = {\nText(\ntext = stringResource(id = R.string.app_name),\ncolor = MaterialTheme.colorScheme.onPrimary\n)\n},\nactions = {\nIconButton(\nonClick = {\n/*TODO*/\n}\n) {\nIcon(\nimageVector = Icons.Default.Delete,\ntint = MaterialTheme.colorScheme.onPrimary,\ncontentDescription = \"Delete all items\"\n)\n}\n},\ncolors = TopAppBarDefaults.topAppBarColors(containerColor = MaterialTheme.colorScheme.primary)\n)\n}\n\n@Preview\n@Composable\nfun MainTopBarPreview() {\nShoppingListTopBar()\n}\n</code></pre> <p>A <code>TopAppBar</code> be\u00e9p\u00edtett Composable f\u00fcggv\u00e9nynek adunk \u00e1t egy nevet a title param\u00e9terrel \u00e9s egy akci\u00f3gombot az actions param\u00e9terrel. Jelen esetben egy <code>Delete all items</code> gombot fogunk hozz\u00e1adni, aminek a m\u0171k\u00f6d\u00e9s\u00e9t az \u00f6n\u00e1ll\u00f3 feladatr\u00e9szn\u00e9l kell megval\u00f3s\u00edtani.</p>"},{"location":"laborok/06-android-room/#lista-elem-letrehozasa","title":"Lista elem l\u00e9trehoz\u00e1sa","text":"<p>Ahhoz, hogy a bev\u00e1s\u00e1rl\u00f3 list\u00e1t meg tudjuk jelen\u00edteni, el kell k\u00e9sz\u00edten\u00fcnk egy listaelem kin\u00e9zet\u00e9t.  Ezt a p\u00e9ld\u00e1nyt fogja majd a LazyColumn megkapni. Szint\u00e9n a <code>hu.bme.aut.android.shoppinglist.feature.shoppinglist.components</code> package-ben hozzuk l\u00e9tre az <code>ItemShoppingItem.kt</code> f\u00e1jlt, majd val\u00f3s\u00edtsuk meg a Composable-t.</p> <p><code>ItemShoppingItem.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.feature.shoppinglist.components\n\nimport androidx.compose.foundation.Image\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Delete\nimport androidx.compose.material.icons.filled.Edit\nimport androidx.compose.material3.Checkbox\nimport androidx.compose.material3.CheckboxDefaults\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.FontStyle\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport hu.bme.aut.android.shoppinglist.R\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\n\n@Composable\nfun ItemShoppingItem(\nshoppingItem: ShoppingItem,\nonCheckBoxClick: (ShoppingItem) -&gt; Unit,\nonDeleteIconClick: () -&gt; Unit,\nonEditIconClick: (ShoppingItem) -&gt; Unit\n) {\nvar isChecked by remember { mutableStateOf(shoppingItem.isBought) }\nvar isInteractionPanelExpanded by remember { mutableStateOf(false) }\nval image = when (shoppingItem.category) {\nShoppingItem.Category.FOOD -&gt; R.drawable.groceries\nShoppingItem.Category.ELECTRONIC -&gt; R.drawable.lightning\nShoppingItem.Category.BOOK -&gt; R.drawable.open_book\nelse -&gt; R.drawable.groceries\n}\n\nRow(\nmodifier = Modifier\n.padding(8.dp)\n.fillMaxWidth()\n.clickable(onClick = { isInteractionPanelExpanded = !isInteractionPanelExpanded }),\nverticalAlignment = Alignment.CenterVertically\n) {\n\nImage(\nmodifier = Modifier\n.size(80.dp),\npainter = painterResource(image),\ncontentDescription = \"image\"\n)\nColumn(\nmodifier = Modifier\n.fillMaxWidth()\n.weight(2f),\nhorizontalAlignment = Alignment.Start\n) {\nText(\ntext = shoppingItem.name,\nfontSize = 20.sp,\nmaxLines = 1\n)\nText(\ntext = shoppingItem.description,\nmaxLines = 2,\nfontStyle = FontStyle.Italic\n)\nText(\ntext = \"${shoppingItem.estimatedPrice} Ft\",\ncolor = Color.DarkGray,\nmaxLines = 1\n)\n}\nColumn(\nverticalArrangement = Arrangement.Center,\nhorizontalAlignment = Alignment.CenterHorizontally,\nmodifier = Modifier.weight(1f)\n) {\nCheckbox(\nchecked = shoppingItem.isBought,\nonCheckedChange = {\nisChecked = it\n\nonCheckBoxClick(shoppingItem.copy(isBought = isChecked))\n},\ncolors = CheckboxDefaults.colors(\ncheckedColor = Color.Green,\nuncheckedColor = Color.Red,\ncheckmarkColor = Color.White\n),\n)\nText(\ntext = if (shoppingItem.isBought) stringResource(R.string.label_purchased) else stringResource(R.string.label_not_purchased),\ntextAlign = TextAlign.Center\n)\n}\nif (isInteractionPanelExpanded)\nColumn() {\nIconButton(\nmodifier = Modifier.background(MaterialTheme.colorScheme.inversePrimary),\nonClick = {\n/*TODO*/\nisInteractionPanelExpanded = false\n}\n) {\nIcon(\nimageVector = Icons.Default.Delete,\ncontentDescription = \"Delete\"\n)\n}\nSpacer(modifier = Modifier.height(8.dp))\nIconButton(\nmodifier = Modifier.background(MaterialTheme.colorScheme.inversePrimary),\nonClick = {\n/*TODO*/\nisInteractionPanelExpanded = false\n}\n) {\nIcon(\nimageVector = Icons.Default.Edit,\ncontentDescription = \"Edit\"\n)\n}\n}\n}\n}\n\n@Preview(showBackground = true)\n@Composable\nfun ItemShoppingItemPurchasedPreview() {\nItemShoppingItem(\nshoppingItem = ShoppingItem(\nname = \"LongItemName\",\ndescription = \"description\",\nestimatedPrice = 500,\ncategory = ShoppingItem.Category.BOOK,\nisBought = true\n),\nonDeleteIconClick = {},\nonCheckBoxClick = {},\nonEditIconClick = {}\n)\n}\n\n@Preview(showBackground = true)\n@Composable\nfun ItemShoppingItemNotPurchasedPreview() {\nItemShoppingItem(\nshoppingItem = ShoppingItem(\nname = \"LongItemName\",\ndescription = \"description description description description description\",\nestimatedPrice = 500,\ncategory = ShoppingItem.Category.ELECTRONIC,\nisBought = false\n),\nonDeleteIconClick = {},\nonCheckBoxClick = {},\nonEditIconClick = {}\n)\n}\n</code></pre> <p>A fel\u00fclet a <code>ShoppingItem</code> adatait jelen\u00edti meg. Bal oldalon a kateg\u00f3ri\u00e1t\u00f3l f\u00fcgg\u0151 k\u00e9pet, k\u00f6z\u00e9pen a nevet, a le\u00edr\u00e1st valamint az \u00e1rat, jobb oldalon pedig a CheckBox-ot, ami a term\u00e9k megv\u00e1s\u00e1rl\u00e1s\u00e1t jelzi. E mellett \u00e9rint\u00e9s hat\u00e1s\u00e1ra a fel\u00fclet jobb sz\u00e9l\u00e9re kinyithat\u00f3 egy panel, ami a t\u00f6rl\u00e9s \u00e9s m\u00f3dos\u00edt\u00e1s gombokat tartalmazza.</p> <p>L\u00e1that\u00f3, hogy a fel\u00fclet \u00e1tveszi a megjelen\u00edtend\u0151 <code>ShoppingItem</code>-et, valamint h\u00e1rom callback f\u00fcggv\u00e9nyt: a CheckBox, a t\u00f6rl\u00e9s valamint a m\u00f3dos\u00edt\u00e1s ikonok \u00e9rint\u00e9s esem\u00e9nyeinek lekezel\u00e9s\u00e9re. Ezek k\u00f6z\u00fcl egyel\u0151re csak a CheckBox van haszn\u00e1lva (a t\u00f6bbi \u00f6n\u00e1ll\u00f3 feladat lesz), ahol a megv\u00e1ltozott \u00e1llapotot visszak\u00fcldj\u00fck a met\u00f3dussal. </p>"},{"location":"laborok/06-android-room/#uj-elem-dialogus","title":"\u00daj elem dial\u00f3gus","text":"<p>Ahhoz, hogy \u00f6ssze tudjuk \u00e1ll\u00edtani a <code>ShoppingListScreen</code> k\u00e9perny\u0151nket, m\u00e1r csak az \u00faj t\u00e9tel felv\u00e9tel\u00e9re szolg\u00e1l\u00f3 dial\u00f3gus hi\u00e1nyzik. K\u00e9sz\u00edts\u00fck el ezt is a <code>hu.bme.aut.android.shoppinglist.feature.shoppinglist.components</code> package-ben.</p> <p>A fel\u00fcleten egym\u00e1s alatt tal\u00e1lhat\u00f3:</p> <ul> <li>a dial\u00f3gus c\u00edme,</li> <li>a n\u00e9v beviteli mez\u0151,</li> <li>az \u00e1r beviteli mez\u0151, amibe csak sz\u00e1mot tutunk be\u00edrni,</li> <li>a le\u00edr\u00e1s beviteli mez\u0151,</li> <li>a kateg\u00f3ria leg\u00f6rd\u00fcl\u0151 men\u00fc, ami egy OutlinedTextField-b\u0151l \u00e9s egy ExposedDropdownMenu-b\u0151l \u00e1ll,</li> <li>a v\u00e1s\u00e1rl\u00e1s \u00e1llapot\u00e1t jelz\u0151 CheckBox \u00e9s</li> <li>a k\u00e9t akci\u00f3 gomb, amelynek callback-jeit param\u00e9terk\u00e9nt vessz\u00fck \u00e1t.</li> </ul> <p><code>ShoppingItemDialog.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.feature.shoppinglist.components\n\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.width\nimport androidx.compose.foundation.text.KeyboardOptions\nimport androidx.compose.material3.Button\nimport androidx.compose.material3.Checkbox\nimport androidx.compose.material3.CheckboxDefaults\nimport androidx.compose.material3.DropdownMenuItem\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.ExposedDropdownMenuBox\nimport androidx.compose.material3.ExposedDropdownMenuDefaults\nimport androidx.compose.material3.MenuAnchorType\nimport androidx.compose.material3.OutlinedButton\nimport androidx.compose.material3.OutlinedTextField\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.graphics.RectangleShape\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.input.ImeAction\nimport androidx.compose.ui.text.input.KeyboardType\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport hu.bme.aut.android.shoppinglist.R\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport kotlinx.coroutines.launch\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun ShoppingItemDialog(\nshoppingItem: ShoppingItem? = null,\nonDismissRequest: () -&gt; Unit = {},\nonSaveClick: (ShoppingItem) -&gt; Unit\n) {\n\nval coroutineScope = rememberCoroutineScope()\nvar name by remember { mutableStateOf(shoppingItem?.name ?: \"\") }\nvar description by remember { mutableStateOf(shoppingItem?.description ?: \"\") }\nvar price by remember { mutableStateOf(shoppingItem?.estimatedPrice?.toString() ?: \"\") }\nvar category by remember {\nmutableStateOf(\nshoppingItem?.category ?: ShoppingItem.Category.FOOD\n)\n}\nvar isBought by remember { mutableStateOf(shoppingItem?.isBought ?: false) }\n\nvar isCategoryDropdownExpanded by remember { mutableStateOf(false) }\nvar isNameError by remember { mutableStateOf(name.isEmpty()) }\nval categoryOptions = ShoppingItem.Category.entries.toList()\n\nColumn(\nmodifier = Modifier\n.background(Color.White)\n.fillMaxWidth()\n) {\n//Title of the Dialog Window\nText(\ntext =\nif (shoppingItem?.id == null)\nstringResource(id = R.string.new_shopping_item)\nelse\nstringResource(id = R.string.edit_shopping_item),\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp),\nfontWeight = FontWeight.Bold,\nfontSize = 20.sp\n)\n\n//Name of the item\nOutlinedTextField(\nmodifier = Modifier\n.padding(8.dp)\n.fillMaxWidth(),\nvalue = name,\nlabel = { Text(text = stringResource(R.string.label_name)) },\nonValueChange = {\nname = it\nisNameError = it.isEmpty()\n},\nmaxLines = 1,\nkeyboardOptions = KeyboardOptions(imeAction = ImeAction.Next),\nisError = isNameError\n)\n\n//Price of the item\nOutlinedTextField(\nvalue = price,\nlabel = { Text(text = stringResource(R.string.label_estimated_price)) },\nmodifier = Modifier\n.padding(8.dp)\n.fillMaxWidth(),\nonValueChange = { price = it },\nmaxLines = 1,\nkeyboardOptions = KeyboardOptions(\nkeyboardType = KeyboardType.Decimal,\nimeAction = ImeAction.Next\n)\n)\n\n//Description of the item\nOutlinedTextField(\nmodifier = Modifier\n.padding(8.dp)\n.fillMaxWidth(),\nvalue = description,\nlabel = { Text(text = stringResource(R.string.label_description)) },\nonValueChange = { description = it },\nmaxLines = 2\n)\n\n//Dropdown Menu for the category of the item\nExposedDropdownMenuBox(\nexpanded = isCategoryDropdownExpanded,\nonExpandedChange = { isCategoryDropdownExpanded = !isCategoryDropdownExpanded }) {\n\nOutlinedTextField(\nmodifier = Modifier\n.menuAnchor(type = MenuAnchorType.PrimaryNotEditable)\n.padding(8.dp)\n.fillMaxWidth(),\nvalue = getCategoryTextByCategory(category = category),\nlabel = {\nText(text = stringResource(id = R.string.label_category))\n},\nonValueChange = {},\nreadOnly = true,\ntrailingIcon = {\nExposedDropdownMenuDefaults.TrailingIcon(expanded = isCategoryDropdownExpanded)\n})\n\nExposedDropdownMenu(\nexpanded = isCategoryDropdownExpanded,\nonDismissRequest = { isCategoryDropdownExpanded = false }) {\ncategoryOptions.forEach { option -&gt;\nDropdownMenuItem(\nonClick = {\ncategory = option\nisCategoryDropdownExpanded = false\n},\ntext = {\nText(\ntext = getCategoryTextByCategory(option)\n)\n},\ncontentPadding = ExposedDropdownMenuDefaults.ItemContentPadding\n)\n}\n}\n}\n\n//Row for the checkbox if the item is already bought\nRow(\nmodifier = Modifier.padding(8.dp),\nverticalAlignment = Alignment.CenterVertically\n) {\nCheckbox(\nchecked = isBought,\nonCheckedChange = {\nisBought = it\n},\ncolors = CheckboxDefaults.colors(\ncheckedColor = Color.Green,\nuncheckedColor = Color.Black,\ncheckmarkColor = Color.White\n)\n)\nText(text = stringResource(R.string.label_already_purchased))\n}\n\n//Row for the buttons\nRow( //Row for the buttons\nmodifier = Modifier\n.fillMaxWidth()\n.padding(8.dp),\nverticalAlignment = Alignment.CenterVertically,\nhorizontalArrangement = Arrangement.End\n) {\nOutlinedButton(\nonClick = {\nonDismissRequest()\n},\nshape = RectangleShape\n) {\nText(text = stringResource(R.string.cancel))\n}\nSpacer(modifier = Modifier.width(16.dp))\nButton(\nonClick = {\nif (!isNameError) {\ncoroutineScope.launch {\nonDismissRequest()\nonSaveClick(\nShoppingItem(\nid = shoppingItem?.id,\nname = name,\ndescription = description,\nestimatedPrice = if (price.isNotEmpty()) price.toInt() else 0,\ncategory = category,\nisBought = isBought\n)\n)\n}\n}\n},\nshape = RectangleShape\n) {\nText(text = stringResource(R.string.save))\n}\n}\n}\n}\n\n@Composable\nprivate fun getCategoryTextByCategory(category: ShoppingItem.Category) =\nwhen (category) {\nShoppingItem.Category.ELECTRONIC -&gt; stringResource(id = R.string.category_electronics)\nShoppingItem.Category.BOOK -&gt; stringResource(id = R.string.category_book)\nelse -&gt; stringResource(id = R.string.category_food)\n}\n\n\n@Preview\n@Composable\nfun NewShoppingItemDialogPreview() {\nShoppingItemDialog(onSaveClick = {})\n}\n\n@Preview\n@Composable\nfun EditShoppingItemDialogPreview() {\nShoppingItemDialog(\nshoppingItem = ShoppingItem(\nname = \"name\",\ndescription = \"description\",\nestimatedPrice = 500,\ncategory = ShoppingItem.Category.BOOK,\nisBought = true\n),\nonSaveClick = {}\n)\n}\n</code></pre> <p>Mint l\u00e1that\u00f3, a <code>ShoppingItemDialog</code>-ban \u00e1llapotk\u00e9nt t\u00e1roljuk:</p> <ul> <li>a nevet: <code>name</code>,</li> <li>a le\u00edr\u00e1st: <code>description</code>,</li> <li>az \u00e1rat: <code>price</code>:</li> <li>a kateg\u00f3ri\u00e1t: <code>category</code>,</li> <li>a v\u00e1s\u00e1rl\u00e1s \u00e1llapot\u00e1t: <code>isBought</code>,</li> <li>azt, hogy a category Dropdown nyitva van-e: <code>isCategoryDropdownExpanded</code> \u00e9s</li> <li>azt, hogy a n\u00e9v mez\u0151ben van-e hiba, azaz \u00fcres-e: <code>isNameError</code>.</li> </ul> <p>Szeretn\u00e9nk, hogy a <code>ShoppingItemDialog</code> t\u00f6bbsz\u00f6r is felhaszn\u00e1lhat\u00f3 legyen, azaz nem csak \u00faj elem felv\u00e9telekor, hanem szerkeszt\u00e9shor is haszn\u00e1lhassuk. Ennek \u00e9rdek\u00e9ben param\u00e9terk\u00e9nt \u00e1tvesz\u00fcnk egy shoppingItem-et. Ha ez null, akkor \u00faj elemet vesz\u00fcnk f\u00f6l, ha nem, akkor szerkeszt\u00fcnk.</p>"},{"location":"laborok/06-android-room/#a-shoppinglistscreen-felulet","title":"A ShoppingListScreen fel\u00fclet","text":"<p>Most, hogy megvagyunk a komponenseinkkel, v\u00e9gre \u00f6ssze\u00e1ll\u00edthatjuk bel\u0151l\u00fck a <code>ShoppingListScreen</code>-\u00fcnket. A <code>hu.bme.aut.android.shoppinglist.feature.shoppinglist</code> package-ben hozzunk l\u00e9tre egy \u00faj f\u00e1jlt, majd t\u00f6lts\u00fck fel az al\u00e1bbi tartalommal:</p> <p><code>ShoppingListScreen.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.feature.shoppinglist\n\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Add\nimport androidx.compose.material3.HorizontalDivider\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.LargeFloatingActionButton\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.window.Dialog\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport hu.bme.aut.android.shoppinglist.feature.shoppinglist.components.ItemShoppingItem\nimport hu.bme.aut.android.shoppinglist.feature.shoppinglist.components.ShoppingItemDialog\nimport hu.bme.aut.android.shoppinglist.feature.shoppinglist.components.ShoppingListTopBar\nimport androidx.compose.foundation.lazy.items\n\n\n@Composable\nfun ShoppingListScreen() {\n\nval list = mutableListOf(\nShoppingItem(\nid = 1,\nname = \"Alma\",\ndescription = \"jonat\u00e1n\\n1 kg\",\nestimatedPrice = 500,\ncategory = ShoppingItem.Category.FOOD,\nisBought = true\n),\nShoppingItem(\nid = 2,\nname = \"A gy\u0171r\u0171k ura\",\ndescription = \"A gy\u0171r\u0171 sz\u00f6vets\u00e9ge\",\nestimatedPrice = 8000,\ncategory = ShoppingItem.Category.BOOK,\nisBought = false\n)\n)\n\nvar isDialogOpen by remember { mutableStateOf(false) }\n\nScaffold(\ntopBar = {\nShoppingListTopBar()\n},\nfloatingActionButton = {\nLargeFloatingActionButton(\ncontainerColor = MaterialTheme.colorScheme.primary,\nonClick = {\nisDialogOpen = true\n}) {\nIcon(\nimageVector = Icons.Default.Add,\ncontentDescription = \"Add new item\"\n)\n}\n}\n) { innerPadding -&gt;\n\nLazyColumn(\nmodifier = Modifier.padding(innerPadding)\n) {\nitems(list, key = { item -&gt; item.id!! }) {\n\nItemShoppingItem(\nshoppingItem = it,\nonCheckBoxClick = { shoppingItem -&gt;\n/*TODO*/\n},\nonDeleteIconClick = {\n/*TODO*/\n},\nonEditIconClick = {\n/*TODO*/\n}\n)\nif (list.indexOf(it) &lt; list.size - 1) {\nHorizontalDivider()\n}\n}\n}\n}\n\nif (isDialogOpen) {\nDialog(onDismissRequest = { isDialogOpen = false }) {\nShoppingItemDialog(\nonDismissRequest = { isDialogOpen = false },\nonSaveClick = { newShoppingItem -&gt;\n/*TODO*/\n}\n)\n}\n}\n}\n\n@Preview\n@Composable\nfun MainScreenPreview() {\nShoppingListScreen()\n}\n</code></pre>"},{"location":"laborok/06-android-room/#mainactivity-aktualizalasa","title":"MainActivity aktualiz\u00e1l\u00e1sa","text":"<p>Most m\u00e1r csak annyi dolgunk van, hogy a saj\u00e1t <code>ShoppingListScreen</code>-\u00fcnket jelen\u00edts\u00fck meg a <code>MainActivity</code>-n.</p> <p><code>MainActivity.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.enableEdgeToEdge\nimport hu.bme.aut.android.shoppinglist.feature.shoppinglist.ShoppingListScreen\nimport hu.bme.aut.android.shoppinglist.ui.theme.ShoppingListTheme\n\nclass MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nShoppingListTheme {\nShoppingListScreen()\n}\n}\n}\n}\n</code></pre> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1s!</p> <p>A list\u00e1nk \u00e9s a dial\u00f3gusunk m\u00e1r megjelenik, azonban nem, vagy nem j\u00f3l reag\u00e1l az interakci\u00f3kra. Ezeket a k\u00f6vetkez\u0151kben jav\u00edtjuk.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a lista (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod az egyik term\u00e9k nevek\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az \u00faj elem felv\u00e9tele dial\u00f3gus (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a term\u00e9k nevek\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/06-android-room/#az-architektura-kialakitasa-1-pont","title":"Az architekt\u00fara kialak\u00edt\u00e1sa (1 pont)","text":"<p>L\u00e1that\u00f3, hogy a list\u00e1nkat egyel\u0151re be\u00e9gett\u00fcnk, \u00e9s el\u00e9g cs\u00fanya m\u00f3don egy screen composable-ben t\u00e1roljuk. Ezt a gyors kipr\u00f3b\u00e1lhat\u00f3s\u00e1g \u00e9rdek\u00e9ben tett\u00fck, azonban most kialak\u00edtjuk a megfelel\u0151 architekt\u00far\u00e1t. Kezdetben m\u00e9g maradunk a mem\u00f3ri\u00e1ban t\u00e1rolt list\u00e1n\u00e1l, azonban azok hely\u00e9t architektur\u00e1lisan megfelel\u0151bben v\u00e1lasztjuk meg.</p>"},{"location":"laborok/06-android-room/#a-repository-letrehozasa","title":"A repository l\u00e9trehoz\u00e1sa","text":"<p>Az adataink tipikusan egy adatforr\u00e1sb\u00f3l, egy repository-b\u00f3l j\u00f6nnek. Ennek sz\u00e1mos megval\u00f3s\u00edt\u00e1sa lehet, ak\u00e1r p\u00e1rhuzamosan is. Defini\u00e1ljunk egy interface-t \u00e9s egy konkr\u00e9t megval\u00f3s\u00edt\u00e1st is (ami m\u00e9g mindig mem\u00f3ria alap\u00fa) a <code>hu.bme.aut.android.shoppinglist.data.repository</code> package-ben:</p> <p><code>IShoppingItemRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.data.repository\n\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport kotlinx.coroutines.flow.Flow\n\ninterface IShoppingItemRepository {\n\nfun getAllItems(): Flow&lt;List&lt;ShoppingItem&gt;&gt;\nsuspend fun insert(shoppingItem: ShoppingItem)\nsuspend fun update(shoppingItem: ShoppingItem)\nsuspend fun delete(shoppingItem: ShoppingItem)\n}\n</code></pre> <p><code>MemoryShoppingItemRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.data.repository\n\nimport androidx.compose.runtime.mutableStateListOf\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport kotlinx.coroutines.delay\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.flow\n\nclass MemoryShoppingItemRepository : IShoppingItemRepository {\n\nprivate var list = mutableStateListOf(\nShoppingItem(\nid = 1,\nname = \"Alma\",\ndescription = \"jonat\u00e1n\\n1 kg\",\nestimatedPrice = 500,\ncategory = ShoppingItem.Category.FOOD,\nisBought = true\n),\nShoppingItem(\nid = 2,\nname = \"A gy\u0171r\u0171k ura\",\ndescription = \"A gy\u0171r\u0171 sz\u00f6vets\u00e9ge\",\nestimatedPrice = 8000,\ncategory = ShoppingItem.Category.BOOK,\nisBought = false\n)\n)\n\noverride fun getAllItems(): Flow&lt;List&lt;ShoppingItem&gt;&gt; = flow {\nemit(list)\n}\n\noverride suspend fun insert(shoppingItem: ShoppingItem) {\ndelay(1000)\nlist.add(shoppingItem.copy(id = (Long.MAX_VALUE*Math.random()).toLong()))\n}\n\noverride suspend fun update(shoppingItem: ShoppingItem) {\ndelay(1000)\nfor (item in list) {\nif (item.id == shoppingItem.id)\nlist[list.indexOf(item)] = shoppingItem\n}\n}\n\noverride suspend fun delete(shoppingItem: ShoppingItem) {\ndelay(1000)\nlist.remove(shoppingItem)\n}\n}\n</code></pre> <p>Az <code>IShoppingItemRepository</code>egy \u00e1ltal\u00e1nos interf\u00e9szt \u00edr le, mellyel el\u00e9rhet\u0151v\u00e9 v\u00e1lnak a feladatok az alkalmaz\u00e1s sz\u00e1m\u00e1ra, m\u00edg a <code>MemoryShoppingListRepository</code> egy mem\u00f3ria alap\u00fa megval\u00f3s\u00edt\u00e1s\u00e1t mutatja be. B\u00e1r itt most nem lenne sz\u00fcks\u00e9g a suspend kulcssz\u00f3 haszn\u00e1lat\u00e1ra, ezzel tudjuk biztos\u00edtani, hogy a k\u00e9s\u0151bbiekben egy adatb\u00e1zis vagy h\u00e1l\u00f3zati TodoRepository elk\u00e9sz\u00edt\u00e9se ut\u00e1n k\u00f6nnyed\u00e9n tudjuk migr\u00e1lni a projektet, ezt a k\u00e9sleltet\u00e9st imit\u00e1ljuk a delay() f\u00fcggv\u00e9ny h\u00edv\u00e1s\u00e1val is. </p> <p>Flow</p> <p>A korutin-okban a Flow olyan t\u00edpus, amely t\u00f6bb \u00e9rt\u00e9ket is k\u00e9pes kiadni egym\u00e1s ut\u00e1n, szemben az olyan f\u00fcggv\u00e9nyekkel, amelyek csak egyetlen \u00e9rt\u00e9ket adnak vissza. A Flow seg\u00edts\u00e9g\u00e9vel teh\u00e1t folyamatosan megfigyelhet\u00fcnk egy adatforr\u00e1st, \u00e9s \u00e9l\u0151 friss\u00edt\u00e9seket kaphatunk p\u00e9ld\u00e1ul egy adatb\u00e1zisb\u00f3l.</p>"},{"location":"laborok/06-android-room/#a-repository-inicializalasa","title":"A repository inicializ\u00e1l\u00e1sa","text":"<p>Az im\u00e9nt l\u00e9trehoztuk a repository-nkat, azonban azt m\u00e9g semmi sem p\u00e9ld\u00e1nyos\u00edtja azt, \u00e9s nem teszi el\u00e9rhet\u0151v\u00e9 sz\u00e1munkra. Ennek a probl\u00e9m\u00e1nak a megold\u00e1s\u00e1ra t\u00f6bb opci\u00f3 is l\u00e9tezik. Mi most azt v\u00e1lasztjuk, hogy a repository-nkat az alkalmaz\u00e1s objektumunkhoz k\u00f6tj\u00fck. \u00cdgy mindig l\u00e9tezni fog, amikor az alkalmaz\u00e1s fut, \u00e9s b\u00e1rhonnan el\u00e9rhet\u0151 lesz. Hozzunk l\u00e9tre a projekt\u00fcnk alap package-\u00e9ben egy <code>ShoppingListApplication.kt</code> f\u00e1jlt, majd inicializ\u00e1ljuk benne a *repository-nkat:</p> <p><code>ShoppingListApplication.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist\n\nimport android.app.Application\nimport hu.bme.aut.android.shoppinglist.data.repository.MemoryShoppingItemRepository\n\nclass ShoppingListApplication : Application() {\n\ncompanion object {\nlateinit var repository: IShoppingItemRepository\n}\n\noverride fun onCreate() {\nsuper.onCreate()\n\nrepository = MemoryShoppingItemRepository()\n}\n}\n</code></pre> <p>static</p> <p>A Kotlin egy nagy elt\u00e9r\u00e9se az eddig ismert, megszokott OOP nyelvekt\u0151l, hogy nincs benne <code>static</code> kulcssz\u00f3, \u00e9s \u00edgy nincsenek statikus v\u00e1ltoz\u00f3k vagy f\u00fcggv\u00e9nyek sem. Ehelyett minden oszt\u00e1lyhoz lehet defini\u00e1lni egy <code>companion object</code>-et, ami egy olyan singleton-t defini\u00e1l, ami az oszt\u00e1ly \u00f6sszes p\u00e9ld\u00e1ny\u00e1n kereszt\u00fcl el\u00e9rhet\u0151. R\u00f6viden, minden <code>companion object</code>-en bel\u00fcl defini\u00e1lt konstans, v\u00e1ltoz\u00f3, f\u00fcggv\u00e9ny \u00fagy viselkedik, mintha statikus lenne.</p> <p>Az appilication oszt\u00e1ly l\u00e9trehoz\u00e1sa ut\u00e1n \u00e1ll\u00edtsuk be az <code>AndroidManifest.xml</code>-ben, hogy az alap\u00e9rtelmezett helyett a saj\u00e1tunkat haszn\u00e1lja az alkalmaz\u00e1s:</p> <pre><code>&lt;application\nandroid:name=\".ShoppingListApplication\"\n...\n</code></pre>"},{"location":"laborok/06-android-room/#a-viewmodel-elkeszitese","title":"A ViewModel elk\u00e9sz\u00edt\u00e9se","text":"<p>\u00cdgy m\u00e1r b\u00e1rmikor, b\u00e1rhonnan el\u00e9rhetj\u00fck a repository-nkat, azonban az egy\u00e1ltal\u00e1n nem lenne sz\u00e9p, ha a screen-ek k\u00f6zvetlen\u00fcl \u00e9rn\u00e9k el a repository-t, r\u00e1ad\u00e1sul a lista t\u00e1rol\u00e1sa ugyan \u00fagy a screeSn oszt\u00e1lyban maradna. Vezess\u00fcnk be ennek az \u00e1llapotnak a t\u00e1rol\u00e1s\u00e1ra egy <code>ShoppingListViewModel</code>-t. A <code>ShoppingListScreen</code> mellett, a <code>hu.bme.aut.android.shoppinglist.feature.shoppinglist</code> package-ben hozzuk l\u00e9tre a viewModel-t:</p> <p><code>ShoppingListViewModel.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.feature.shoppinglist\n\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.viewModelScope\nimport androidx.lifecycle.viewmodel.initializer\nimport androidx.lifecycle.viewmodel.viewModelFactory\nimport hu.bme.aut.android.shoppinglist.ShoppingListApplication\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport hu.bme.aut.android.shoppinglist.data.repository.IShoppingItemRepository\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\n\nclass ShoppingListViewModel(\nprivate val repository: IShoppingItemRepository\n) : ViewModel() {\nprivate val _list = MutableStateFlow&lt;List&lt;ShoppingItem&gt;&gt;(listOf())\nval shoppingItemList = _list.asStateFlow()\n\ninit {\ngetAllItems()\n}\n\nfun getAllItems() {\nviewModelScope.launch {\nrepository.getAllItems().collectLatest {\n_list.tryEmit(it)\n}\n}\n}\n\nfun insert(item: ShoppingItem) {\nviewModelScope.launch {\ntry {\nrepository.insert(shoppingItem = item)\n} catch (e: Exception) {\ne.printStackTrace()\n}\n}\n}\n\nfun update(item: ShoppingItem) {\nviewModelScope.launch {\ntry {\nrepository.update(shoppingItem = item)\n} catch (e: Exception) {\ne.printStackTrace()\n}\n}\n}\n\nfun delete(item: ShoppingItem) {\nviewModelScope.launch {\ntry {\nrepository.delete(shoppingItem = item)\n} catch (e: Exception) {\ne.printStackTrace()\n}\n}\n}\n\ncompanion object {\nval Factory: ViewModelProvider.Factory = viewModelFactory {\ninitializer {\nShoppingListViewModel(repository = ShoppingListApplication.repository)\n}\n}\n}\n}\n</code></pre> <p>L\u00e1that\u00f3, hogy a <code>ShoppingListViewModel</code> \u00e1tvette a lista (vagyis jelenleg \u00e1llapot) t\u00e1rol\u00e1s\u00e1t, valamint el\u00e9r\u00e9st biztos\u00edt a repository egyes f\u00fcggv\u00e9nyeihez. Ezeket a f\u00fcggv\u00e9nyeket a saj\u00e1t viewModelScope-j\u00e1ban, h\u00e1tt\u00e9rsz\u00e1lon, blokkol\u00e1s n\u00e9lk\u00fcl h\u00edvja meg.</p> <p>Mivel a viewModel k\u00e9pes t\u00fal\u00e9lni az \u0151t l\u00e9trehoz\u00f3 komponenst, ez\u00e9rt a k\u00f3db\u00f3l mi nem a konstruktor h\u00edv\u00e1s\u00e1val fogjuk l\u00e9trehozni a p\u00e9ld\u00e1nyt, hanem a keretrendszernek tudunk \u00e1tadni egy speci\u00e1lis factory met\u00f3dust, amit a rendszer az els\u0151 alkalommal meg fog h\u00edvni. Ezt a met\u00f3dust szervezt\u00fck ki a companion object r\u00e9szbe, ami jelenleg csak l\u00e9trehoz egy p\u00e9ld\u00e1nyt, a k\u00e9s\u0151bbiekben azonban hasznos lehet k\u00fcl\u00f6nb\u00f6z\u0151 k\u00fcls\u0151 \u00e9rt\u00e9kek inicializ\u00e1l\u00e1s\u00e1ra.</p>"},{"location":"laborok/06-android-room/#a-viewmodel-hasznalata","title":"A ViewModel haszn\u00e1lata","text":"<p>Most m\u00e1r teh\u00e1t lecser\u00e9lhetj\u00fck a <code>ShoppingListScreen</code> implement\u00e1ci\u00f3j\u00e1nak azon r\u00e9sz\u00e9t, amiben a list\u00e1t inicializ\u00e1lja egy <code>ShoppingListViewModel</code>-en kereszt\u00fcli el\u00e9r\u00e9sre. A <code>ShoppingListScreen</code> konstruktor\u00e1ban adjuk \u00e1t a ViewModel-t, \u00e9s val\u00f3s\u00edtsuk meg a dial\u00f3gus ablak onSaveClick esem\u00e9nykezel\u0151j\u00e9t: </p> <pre><code>@Composable\nfun ShoppingListScreen(viewModel: ShoppingListViewModel = viewModel(factory = ShoppingListViewModel.Factory)) {\n\nval list = viewModel.shoppingItemList.collectAsStateWithLifecycle().value\n\nScaffold(\n...\n) { innerPadding -&gt;\n\nLazyColumn(\nmodifier = Modifier.padding(innerPadding)\n) {\nitems(list, key = { item -&gt; item.id!! }) {\n\nItemShoppingItem(\nshoppingItem = it,\nonCheckBoxClick = { shoppingItem -&gt;\nviewModel.update(shoppingItem)\n},\n...\n\nif (isDialogOpen) {\nDialog(onDismissRequest = { isDialogOpen = false }) {\nShoppingItemDialog(\nonDismissRequest = { isDialogOpen = false },\nonSaveClick = { newShoppingItem -&gt;\nviewModel.insert(newShoppingItem)\n}\n)\n}\n}\n\n...\n</code></pre> <p>Figyelj\u00fck meg, hogy hogyan gy\u0171jtj\u00fck be a viewModel-b\u0151l a bev\u00e1s\u00e1rl\u00f3list\u00e1t \u00e1llapotk\u00e9nt!</p> <p>A viewModel keretrendszer haszn\u00e1lat\u00e1hoz sz\u00fcks\u00e9g\u00fcnk lesz egy f\u00fcgg\u0151s\u00e9gre. Adjuk hozz\u00e1 a projekt\u00fcnkh\u00f6z az al\u00e1bbiakat:</p> <p><code>libs.versions.toml</code>:</p> <pre><code>[versions]\nviewModel = \"2.8.6\"\n...\n\n[libraries]\nandroidx-lifecycle-viewmodel-compose = {group = \"androidx.lifecycle\", name=\"lifecycle-viewmodel-compose\", version.ref = \"viewModel\" }\n...\n</code></pre> <p>Modul szint\u0171 <code>build.gradle.kts</code>:</p> <pre><code>dependencies {\nimplementation(libs.androidx.lifecycle.viewmodel.compose)\n...\n</code></pre> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!</p> <p>Most m\u00e1r, ha a CheckBox-okra klikkel\u00fcnk, vagy \u00faj elemet adunk hozz\u00e1 a list\u00e1nkhoz, az r\u00f6vid id\u0151n bel\u00fcl (1000ms k\u00e9sleltet\u00e9s) megjelenik a fel\u00fcleten is. Amit val\u00f3j\u00e1ban csin\u00e1lunk ilyenkor, hogy a screen-en v\u00e9grehajtott interakci\u00f3 hat\u00e1s\u00e1ra a viewModel-en kereszt\u00fcl korutin-okkal (h\u00e1tt\u00e9rsz\u00e1lon) manipul\u00e1ljuk a repository-ban tal\u00e1lhat\u00f3 list\u00e1nkat. Amennyiben ez a repository egy perzisztens t\u00e1rb\u00f3l f\u00e9rne hozz\u00e1 az adatokhoz, az alkalmaz\u00e1sunk m\u00e1r k\u00e9szen is lenne. </p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a lista t\u00f6bb elemmel (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a ShoppingListViewModel k\u00f3dja, valamint a neptun k\u00f3dod egy term\u00e9k nevek\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/06-android-room/#perzisztens-adattarolas-megvalositasa-1-pont","title":"Perzisztens adatt\u00e1rol\u00e1s megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>Az adatok perzisztens t\u00e1rol\u00e1s\u00e1hoz a <code>Room</code> k\u00f6nyvt\u00e1rat fogjuk haszn\u00e1lni.</p> <p>Room</p> <p>A  <code>Room</code> egy k\u00e9nyelmes adatbaz\u00e1skezel\u00e9st lehet\u0151v\u00e9 tev\u0151 API-t ny\u00fajt a platform szint\u0171 SQLite implement\u00e1ci\u00f3 f\u00f6l\u00e9. Megsp\u00f3rolhat\u00f3 vele a kor\u00e1bban l\u00e1tott sok \u00fajra \u00e9s \u00fajra meg\u00edrand\u00f3 k\u00f3d, p\u00e9ld\u00e1ul a t\u00e1bl\u00e1k adatait \u00e9s l\u00e9trehoz\u00f3 scriptj\u00e9t tartalmaz\u00f3 Table oszt\u00e1lyok, a DBHelper \u00e9s a PersistentDataHelper. Ezeket, \u00e9s m\u00e1s seg\u00e9doszt\u00e1lyokat a <code>Room</code> annotation alap\u00fa k\u00f3dgener\u00e1l\u00e1ssal hozza l\u00e9tre a build folyamat r\u00e9szek\u00e9nt.</p>"},{"location":"laborok/06-android-room/#room-hozzaadasa-a-projekthez","title":"Room hozz\u00e1ad\u00e1sa a projekthez","text":"<p>El\u0151sz\u00f6r nyissuk meg a <code>libs.versions.toml</code> f\u00e1jlt, \u00e9s \u00edrjuk bele a k\u00f6vetkez\u0151ket:</p> <p><code>libs.versions.toml</code>:</p> <pre><code>[versions]\n...\nksp = \"1.9.0-1.0.13\"\nroom = \"2.6.1\"\n\n[libraries]\n...\nandroidx-room-runtime = {group = \"androidx.room\", name=\"room-runtime\", version.ref= \"room\" }\nandroidx-room-compiler = {group = \"androidx.room\", name=\"room-compiler\", version.ref= \"room\" }\nandroidx-room-ktx = {group = \"androidx.room\", name=\"room-ktx\", version.ref= \"room\" }\n\n[plugins]\n...\ngoogle-devtools-ksp = { id = \"com.google.devtools.ksp\", version.ref=\"ksp\"}\n</code></pre> <p>Ez ut\u00e1n enged\u00e9lyezz\u00fck a Kotlin Symbol Processing API\ufeff haszn\u00e1lat\u00e1t a projekt szint\u0171 <code>build.gradle.kts</code> f\u00e1jlban:</p> <p>Projekt szint\u0171 <code>build.gradle.kts</code>:</p> <pre><code>plugins {\n...\nalias(libs.plugins.google.devtools.ksp) apply false\n}\n</code></pre> <p>Majd az app modulhoz tartoz\u00f3 <code>build.gradle.kts</code> f\u00e1jlban is kapcsoljuk be a KSP-t, \u00e9s adjuk hozz\u00e1 a f\u00fcgg\u0151s\u00e9geket:</p> <p>Modul szint\u0171 <code>build.gradle.kts</code>:</p> <pre><code>plugins {\n...\nalias(libs.plugins.google.devtools.ksp)\n}\n...\ndependencies {\nksp(libs.androidx.room.compiler)\nimplementation(libs.androidx.room.runtime)\nimplementation(libs.androidx.room.ktx)\n...\n}\n</code></pre> <p>Ezut\u00e1n kattintsunk a jobb fels\u0151 sarokban megjelen\u0151 Sync Now gombra.</p>"},{"location":"laborok/06-android-room/#a-modell-osztaly-elkeszitese","title":"A modell oszt\u00e1ly elk\u00e9sz\u00edt\u00e9se","text":"<p>Az ORM l\u00e9nyege, hogy objektumokat tudunk adatb\u00e1zisban t\u00e1rolni, vagyis sz\u00fcks\u00e9g\u00fcnk van egy modell oszt\u00e1lyra. Eddig a teljes projektben a kor\u00e1bban l\u00e9trehozott <code>ShoppingItem</code> oszt\u00e1lyt haszn\u00e1ltuk az adataink t\u00e1rol\u00e1s\u00e1ra. Szerencs\u00e9re a <code>Room</code>-ra val\u00f3 \u00e1tt\u00e9r\u00e9ssel nem kell ezt teljesen kidobnunk, kisebb m\u00f3dos\u00edt\u00e1ssal tov\u00e1bbra is haszn\u00e1lhatjuk. Eg\u00e9sz\u00edts\u00fck teh\u00e1t ki a <code>ShoppingItem</code> oszt\u00e1lyunkat:</p> <p><code>ShoppingItem.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.data.entities\n\nimport androidx.room.ColumnInfo;\nimport androidx.room.Entity;\nimport androidx.room.PrimaryKey;\nimport androidx.room.TypeConverter\n\n@Entity(tableName = \"shoppingItem\")\ndata class ShoppingItem(\n@ColumnInfo(name = \"id\") @PrimaryKey(autoGenerate = true) var id: Long? = null,\n@ColumnInfo(name = \"name\") var name: String,\n@ColumnInfo(name = \"description\") var description: String,\n@ColumnInfo(name = \"category\") var category: Category,\n@ColumnInfo(name = \"estimatedPrice\") var estimatedPrice: Int,\n@ColumnInfo(name = \"isBought\") var isBought: Boolean\n) {\nenum class Category {\nFOOD, ELECTRONIC, BOOK;\n\ncompanion object {\n@JvmStatic\n@TypeConverter\nfun getByOrdinal(ordinal: Int): Category? {\nvar ret: Category? = null\nfor (cat in values()) {\nif (cat.ordinal == ordinal) {\nret = cat\nbreak\n}\n}\nreturn ret\n}\n\n@JvmStatic\n@TypeConverter\nfun toInt(category: Category): Int {\nreturn category.ordinal\n}\n}\n}\n}\n</code></pre> <p>L\u00e1that\u00f3, hogy az oszt\u00e1lyon, az oszt\u00e1ly v\u00e1ltoz\u00f3in, valamint az oszt\u00e1lyon bel\u00fcl l\u00e9v\u0151 enum oszt\u00e1ly f\u00fcggv\u00e9nyein annot\u00e1ci\u00f3kat helyezt\u00fcnk el. Az <code>@Entity</code> jelzi a Room k\u00f3dgener\u00e1tor\u00e1nak, hogy ennek az oszt\u00e1lynak a p\u00e9ld\u00e1nyai adatb\u00e1zis rekordoknak fognak megfelelni egy t\u00e1bl\u00e1ban \u00e9s hogy az egyes v\u00e1ltoz\u00f3i felelnek majd meg a t\u00e1bla oszlopainak. A <code>@ColumnInfo</code> annot\u00e1ci\u00f3val megadjuk, hogy mi legyen a tagv\u00e1ltoz\u00f3nak megfelel\u0151 oszlop neve. <code>@PrimaryKey</code>-jel jel\u00f6lj\u00fck a t\u00e1bla egyszer\u0171 kulcs attrib\u00fatum\u00e1t.</p> <p>Az oszt\u00e1lyban l\u00e9trehoztunk egy enum-ot is, amivel egy kateg\u00f3ri\u00e1t akarunk k\u00f3dolni. Az enum-nak van k\u00e9t statikus met\u00f3dusa, <code>@TypeConverter</code> annot\u00e1ci\u00f3val ell\u00e1tva. Ezekkel oldhat\u00f3 meg, hogy az adatb\u00e1zis ak\u00e1r \u00f6sszetett adatszerkezeteket is t\u00e1rolni tudjon. Ezek a f\u00fcggv\u00e9nyek felel\u0151sek az\u00e9rt, hogy egy felhaszn\u00e1l\u00f3i t\u00edpust leford\u00edtsanak egy, az adatb\u00e1zis \u00e1ltal t\u00e1mogatott t\u00edpusra, illetve ford\u00edtva.</p> <p>Megfigyelhet\u0151 tov\u00e1bb\u00e1, hogy ezen f\u00fcggv\u00e9nyek el vannak l\u00e1tva a <code>@JvmStatic</code> annot\u00e1ci\u00f3val is. Erre az\u00e9rt van sz\u00fcks\u00e9g, mert alapvet\u0151en, amikor a companion object-ek Jvm b\u00e1jtk\u00f3dra fordulnak, akkor egy k\u00fcl\u00f6n statikus oszt\u00e1ly j\u00f6n sz\u00e1mukra l\u00e9tre. Ezzel az annot\u00e1ci\u00f3val lehet megadni, hogy ne j\u00f6jj\u00f6n l\u00e9tre k\u00fcl\u00f6n statikus oszt\u00e1ly, ehelyett a bennfoglal\u00f3 oszt\u00e1ly (jelen esetben Category) statikus f\u00fcggv\u00e9nyei legyenek. Erre a speci\u00e1lis viselked\u00e9sre pedig a Room m\u0171k\u00f6d\u00e9se miatt van sz\u00fcks\u00e9g, ugyanis tudnia kell, hol keresse egy-egy t\u00edpusra a konvertereket.</p> <p>data class</p> <p>Kotlinban van lehet\u0151s\u00e9g \u00fagynevezett data class l\u00e9trehoz\u00e1s\u00e1ra. Ezt tal\u00e1n legk\u00f6nnyebben a Java-s POJO (Plain-Old-Java-Object) oszt\u00e1lyoknak lehet megfeleltetni. A c\u00e9ljuk, hogy publikus property-kben \u00f6sszef\u00fcgg\u0151 adatokat t\u00e1roljanak, semmi t\u00f6bb! Ezen k\u00edv\u00fcl automatikusan l\u00e9trej\u00f6nnek bizonyos seg\u00e9df\u00fcggv\u00e9nyek is, p\u00e9ld\u00e1ul egy megfelel\u0151 equals, toString \u00e9s copy implement\u00e1ci\u00f3.</p>"},{"location":"laborok/06-android-room/#egy-dao-osztaly-letrehozasa","title":"Egy DAO oszt\u00e1ly l\u00e9trehoz\u00e1sa","text":"<p>DAO</p> <p>DAO = Data Access Object</p> <p>A <code>hu.bme.aut.android.shoppinglist.data</code> package-ben hozzunk l\u00e9tre egy \u00faj package-et <code>dao</code> n\u00e9vvel, majd ebben egy \u00faj Kotlin interface-t, aminek a neve legyen  <code>ShoppingItemDao</code>:</p> <p><code>ShoppingItemDao.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.data.dao\n\nimport androidx.room.Dao\nimport androidx.room.Delete\nimport androidx.room.Insert\nimport androidx.room.Query\nimport androidx.room.Update\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport kotlinx.coroutines.flow.Flow\n\n@Dao\ninterface ShoppingItemDao {\n\n@Query(\"SELECT * FROM shoppingitem\")\nfun getAll(): Flow&lt;List&lt;ShoppingItem&gt;&gt;\n\n@Insert\nsuspend fun insert(item: ShoppingItem)\n\n@Update\nsuspend fun update(item: ShoppingItem)\n\n@Delete\nsuspend fun delete(item: ShoppingItem)\n}\n</code></pre> <p>Egy <code>@Dao</code> annot\u00e1ci\u00f3val ell\u00e1tott interface a <code>Room</code> k\u00f3dgener\u00e1tora sz\u00e1m\u00e1ra azt jelzi, hogy gener\u00e1lni kell az interface-hez egy olyan implement\u00e1ci\u00f3t, ami az interface f\u00fcggv\u00e9nyeket az azokon l\u00e9v\u0151 annot\u00e1ci\u00f3k (<code>@Query</code>, <code>@Insert</code>, <code>@Update</code>, <code>@Delete</code>) alapj\u00e1n val\u00f3s\u00edtja meg.</p> <p>Figyelj\u00fck meg, hogy az Android Studio a <code>@Query</code> annot\u00e1ci\u00f3 param\u00e9terek\u00e9nt \u00e1tadott SQLite script-re is ny\u00fajt k\u00f3dkieg\u00e9sz\u00edt\u00e9st, hiba jelz\u00e9st!</p>"},{"location":"laborok/06-android-room/#az-adatbazis-osztaly-letrehozasa","title":"Az adatb\u00e1zis oszt\u00e1ly l\u00e9trehoz\u00e1sa","text":"<p>A <code>hu.bme.aut.android.shoppinglist.data</code> package-ben hozzunk l\u00e9tre egy \u00faj package-et <code>database</code> n\u00e9ven, majd ebben egy \u00faj Kotlin oszt\u00e1lyt, aminek a neve legyen  <code>ShoppingListDatabase</code>:</p> <p><code>ShoppingListDatabase.kt</code>:</p> <p><pre><code>package hu.bme.aut.android.shoppinglist.database\n\nimport androidx.room.Database\nimport androidx.room.RoomDatabase\nimport androidx.room.TypeConverters\nimport hu.bme.aut.android.shoppinglist.data.dao.ShoppingItemDao\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\n\n@Database(entities = [ShoppingItem::class], version = 1)\n@TypeConverters(value = [ShoppingItem.Category::class])\nabstract class ShoppingListDatabase : RoomDatabase() {\nabstract val shoppingItemDao: ShoppingItemDao\n}\n</code></pre> A <code>@Database</code> annot\u00e1ci\u00f3val lehet jelezni a k\u00f3dgener\u00e1tornak, hogy egy oszt\u00e1ly egy adatb\u00e1zist fog reprezent\u00e1lni. Az ilyen oszt\u00e1lynak absztraktnak kell lennie, valamint a <code>RoomDatabase</code>-b\u0151l kell sz\u00e1rmaznia. Az annot\u00e1ci\u00f3 <code>entities</code> param\u00e9ter\u00e9nek egy list\u00e1t kell \u00e1tadni, ami az adatb\u00e1zis t\u00e1bl\u00e1knak megfelel\u0151 <code>@Entity</code>-vel jelzett oszt\u00e1lyokat tartalmazza. A <code>version</code> param\u00e9ter \u00e9rt\u00e9ke a lok\u00e1lis adatb\u00e1zis verzi\u00f3. A <code>@TypeConverters</code> annot\u00e1ci\u00f3val tudjuk felsorolni az egyes \u00f6sszetett t\u00edpusokra vonatkoz\u00f3 konvertereinket. </p> <p>A <code>ShoppingListDatabase</code> oszt\u00e1ly felel\u0151s a megfelel\u0151 DAO oszt\u00e1lyok el\u00e9rhet\u0151s\u00e9g\u00e9\u00e9rt is.</p>"},{"location":"laborok/06-android-room/#a-repository-letrehozasa_1","title":"A repository l\u00e9trehoz\u00e1sa","text":"<p>Most, hogy megvan az adatb\u00e1zisunk, m\u00e1r el tudjuk k\u00e9sz\u00edteni az azt el\u00e9r\u0151 repository-nkat a <code>MemoryShoppingItemRepository</code>-hoz hasonl\u00f3an. Hozzunk l\u00e9tre teh\u00e1t a <code>hu.bme.aut.android.shoppinglist.data.repository</code> package-ben egy <code>RoomShoppingListRepository</code> oszt\u00e1lyt, ami param\u00e9ter\u00fcl kapja a DAO-t, \u00e9s megval\u00f3s\u00edtja az <code>IShoppingItemRepository</code> interface-t.</p> <p><code>RoomShoppingListRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist.data.repository\n\nimport hu.bme.aut.android.shoppinglist.data.dao.ShoppingItemDao\nimport hu.bme.aut.android.shoppinglist.data.entities.ShoppingItem\nimport kotlinx.coroutines.flow.Flow\n\nclass RoomShoppingListRepository(private val dao: ShoppingItemDao) : IShoppingItemRepository {\n\noverride fun getAllItems(): Flow&lt;List&lt;ShoppingItem&gt;&gt; = dao.getAll()\noverride suspend fun insert(shoppingItem: ShoppingItem) = dao.insert(shoppingItem)\noverride suspend fun update(shoppingItem: ShoppingItem) = dao.update(shoppingItem)\noverride suspend fun delete(shoppingItem: ShoppingItem) = dao.delete(shoppingItem)\n}\n</code></pre>"},{"location":"laborok/06-android-room/#a-repository-inicializalasa_1","title":"A repository inicializ\u00e1l\u00e1sa","text":"<p>Most m\u00e1r teljesen k\u00e9szen vagyunk az adatb\u00e1zis megval\u00f3s\u00edt\u00e1s\u00e1val. M\u00e1r csak p\u00e9ld\u00e1nyos\u00edtani kell valahol, \u00e9s lecser\u00e9lni az eddig adatel\u00e9r\u00e9sre haszn\u00e1lt <code>MemoryShoppingItemRepository</code>-t. Tegy\u00fck ezt meg a application oszt\u00e1lyunkban:</p> <p><code>ShoppingListApplication.kt</code>:</p> <pre><code>package hu.bme.aut.android.shoppinglist\n\nimport android.app.Application\nimport androidx.room.Room\nimport hu.bme.aut.android.shoppinglist.data.repository.IShoppingItemRepository\nimport hu.bme.aut.android.shoppinglist.data.repository.RoomShoppingListRepository\nimport hu.bme.aut.android.shoppinglist.database.ShoppingListDatabase\n\nclass ShoppingListApplication : Application() {\n\ncompanion object {\n\nlateinit var repository: IShoppingItemRepository\n\nprivate lateinit var database: ShoppingListDatabase\n}\n\noverride fun onCreate() {\nsuper.onCreate()\n\ndatabase = Room.databaseBuilder(\napplicationContext,\nShoppingListDatabase::class.java,\n\"shoppinglist_database\"\n).fallbackToDestructiveMigration().build()\n\nrepository = RoomShoppingListRepository(database.shoppingItemDao)\n\n//repository = MemoryShoppingItemRepository()\n}\n}\n</code></pre> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!</p> <p>Az alkalmaz\u00e1sunk most m\u00e1r k\u00e9pes t\u00e9telek felv\u00e9tel\u00e9re, \u00e9s azok elment\u00e9s\u00e9re is. </p> <p>Az im\u00e9nti feladatr\u00e9szben nem csak a perzisztens t\u00e1rol\u00e1st val\u00f3s\u00edtottuk meg, hanem architektur\u00e1lisan is j\u00f3l \u00e1tgondolt alkalmaz\u00e1st k\u00e9sz\u00edtett\u00fcnk. Ezt t\u00e1masztja al\u00e1 az is, hogy ahhoz, hogy az adataink ne csak a mem\u00f3ri\u00e1ban t\u00e1rol\u00f3djanak, hanem adatb\u00e1zisba ker\u00fcljenek, csak a Room adatb\u00e1zishoz tartoz\u00f3 implement\u00e1ci\u00f3s r\u00e9szeket kellett meg\u00edrnunk, \u00e9s a megfelel\u0151 repository-t inicializ\u00e1lni. Nem kellett v\u00e1ltoztatnunk sem a viewModel-en, sem a screen-en.</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a bev\u00e1s\u00e1rl\u00f3lista t\u00f6bb t\u00e9tellel (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a <code>RoomShoppingListRepository</code> k\u00f3dja, valamint a neptun k\u00f3dod egy term\u00e9k nevek\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/06-android-room/#onallo-feladat-torles-megvalositasa-1-pont","title":"\u00d6n\u00e1ll\u00f3 feladat: t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>Val\u00f3s\u00edtsd meg a t\u00e9telek t\u00f6rl\u00e9s\u00e9t egyes\u00e9vel, az elemeken tal\u00e1lhat\u00f3 szemetes ikonra kattint\u00e1s hat\u00e1s\u00e1ra!</p> Megold\u00e1s <ul> <li>Gomb esem\u00e9nykezel\u0151j\u00e9nek megval\u00f3s\u00edt\u00e1sa az <code>ItemShoppingItem</code>-ben</li> <li>A t\u00f6rl\u00e9s callback megval\u00f3s\u00edt\u00e1sa a <code>ShoppingListScreen</code>-en</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az \u00fcres lista (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy a t\u00f6rl\u00e9shez tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f5.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/06-android-room/#imsc-feladatok","title":"IMSc feladatok","text":""},{"location":"laborok/06-android-room/#megerosito-dialogus-1-pont","title":"Meger\u0151s\u00edt\u0151 dial\u00f3gus (1 pont)","text":"<p>Implement\u00e1lj egy Delete all men\u00fcpontot \u00e9s a hozz\u00e1 tartoz\u00f3 funkci\u00f3t!</p> <p>Az alkalmaz\u00e1s jelen\u00edtsen meg egy meger\u0151s\u00edt\u0151 dial\u00f3gust, amikor a felhaszn\u00e1l\u00f3 a Delete all men\u00fcpontra kattint. A dial\u00f3gus tartalmazzon egy r\u00f6vid sz\u00f6veges figyelmeztet\u00e9st, hogy minden elem t\u00f6rl\u0151dni fog, egy pozit\u00edv \u00e9s negat\u00edv gombot (OK \u00e9s Cancel). A pozit\u00edv gomb lenyom\u00e1sakor t\u00f6rl\u0151djenek csak az elemek.</p> <p>BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az meger\u0151s\u00edt\u0151 dial\u00f3gus (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f6.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/06-android-room/#elemek-szerkesztese-1-pont","title":"Elemek szerkeszt\u00e9se (1 pont)","text":"<p>Teremtsd meg a lista elemek szerkeszt\u00e9s\u00e9nek lehet\u0151s\u00e9g\u00e9t! </p> <p>A lista elemen l\u00e9v\u0151 szerkeszt\u00e9s gomb hat\u00e1s\u00e1ra ny\u00edljon meg a m\u00e1r kor\u00e1bban implement\u00e1lt felviteli dial\u00f3gus, a beviteli mez\u0151k pedig legyenek el\u0151re kit\u00f6ltve a mentett \u00e9rt\u00e9kekkel. A Save gomb hat\u00e1s\u00e1ra a megl\u00e9v\u0151 lista elem m\u00f3dosuljon az adatb\u00e1zisban \u00e9s a n\u00e9zeten is.</p> <p>BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a szerkeszt\u00e9si dial\u00f3gus (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), egy ahhoz tartoz\u00f3 k\u00f3dr\u00e9szlet, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f7.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/07-android-network/","title":"Labor 07 - Retrofit - Id\u0151j\u00e1r\u00e1s alkalmaz\u00e1s","text":""},{"location":"laborok/07-android-network/#bevezeto","title":"Bevezet\u0151","text":"<p>A labor sor\u00e1n egy id\u0151j\u00e1r\u00e1s inform\u00e1ci\u00f3kat megjelen\u00edt\u0151 alkalmaz\u00e1s elk\u00e9sz\u00edt\u00e9se a feladat. A kor\u00e1bban l\u00e1tott UI elemek haszn\u00e1lata mellett l\u00e1thatunk majd p\u00e9ld\u00e1t h\u00e1l\u00f3zati kommunk\u00e1ci\u00f3 hat\u00e9kony megval\u00f3s\u00edt\u00e1s\u00e1ra is a <code>Retrofit</code> k\u00f6nyvt\u00e1r felhaszn\u00e1l\u00e1s\u00e1val.</p> <p>Az alkalmaz\u00e1s v\u00e1rosok list\u00e1j\u00e1t jelen\u00edti meg egy <code>LazyColumn</code>-ban, a kiv\u00e1lasztott v\u00e1ros id\u0151j\u00e1r\u00e1s adatait pedig az OpenWeatherMap REST API-j\u00e1nak seg\u00edts\u00e9g\u00e9vel k\u00e9rdezi le.  \u00daj v\u00e1ros hozz\u00e1ad\u00e1s\u00e1ra egy  <code>FloatingActionButton</code> megnyom\u00e1s\u00e1val van lehet\u0151s\u00e9g. </p> <p>REST</p> <p>REST = Representational State Transfer</p> <p>Felhaszn\u00e1lt technol\u00f3gi\u00e1k: </p> <ul> <li><code>Activity</code></li> <li><code>LazyColumn</code></li> <li><code>Retrofit</code></li> <li><code>Moshi</code></li> <li><code>Coil</code></li> <li><code>ViewModel</code></li> <li><code>NavHost</code></li> <li><code>SwipeToDismissBox</code></li> </ul>"},{"location":"laborok/07-android-network/#az-alkalmazas-specifikacioja","title":"Az alkalmaz\u00e1s specifik\u00e1ci\u00f3ja","text":"<p>Az alkalmaz\u00e1s egy <code>Activity</code>-b\u0151l \u00e1ll. </p> <p>Az alkalmaz\u00e1s indul\u00e1sakor megjelen\u0151 <code>CityListScreen</code> a felhaszn\u00e1l\u00f3 \u00e1ltal felvett v\u00e1rosok list\u00e1j\u00e1t jelen\u00edti meg. A v\u00e1rosokat balra elh\u00fazva az adott v\u00e1ros t\u00f6rl\u0151dik a list\u00e1b\u00f3l. \u00daj v\u00e1rost a n\u00e9zet jobb als\u00f3 sark\u00e1ban tal\u00e1lhat\u00f3 <code>FloatingActionButton</code> megnyom\u00e1s\u00e1val lehet felvenni.</p> <p>Egy v\u00e1rosra val\u00f3 kattint\u00e1s hat\u00e1s\u00e1ra a <code>NavGraph</code> seg\u00edts\u00e9g\u00e9vel egy \u00faj Composable k\u00e9perny\u0151t hozunk el\u0151t\u00e9rbe az adott v\u00e1ros id\u0151j\u00e1r\u00e1s adataival. A r\u00f6vid jellemz\u00e9s mellett egy akut\u00e1lis ikon \u00e9s a  v\u00e1rosban m\u00e9rt \u00e1tlagos, minimum \u00e9s maximum h\u0151m\u00e9rs\u00e9klet, a l\u00e9gnyom\u00e1s \u00e9s a p\u00e1ratartalom \u00e9rt\u00e9ke l\u00e1that\u00f3.</p> <p> </p>"},{"location":"laborok/07-android-network/#laborfeladatok","title":"Laborfeladatok","text":"<p>A labor sor\u00e1n az al\u00e1bbi feladatokat a laborvezet\u0151 seg\u00edts\u00e9g\u00e9vel, illetve a jel\u00f6lt feladatokat \u00f6n\u00e1ll\u00f3an kell megval\u00f3s\u00edtani.</p> <ol> <li>V\u00e1ros lista megval\u00f3s\u00edt\u00e1sa: 1 pont</li> <li>Id\u0151j\u00e1r\u00e1s n\u00e9zet l\u00e9trehoz\u00e1sa \u00e9s bek\u00f6t\u00e9se a navig\u00e1ci\u00f3ba: 2 pont</li> <li>H\u00e1l\u00f3zati kommunik\u00e1ci\u00f3 megval\u00f3s\u00edt\u00e1sa: 1 pont</li> <li>\u00d6n\u00e1ll\u00f3 feladat: v\u00e1ros list\u00e1b\u00f3l t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa: 1 pont</li> </ol> <p>A labor sor\u00e1n egy komplex id\u0151j\u00e1r\u00e1s alkalmaz\u00e1s k\u00e9sz\u00fcl el. A labor sz\u0171k\u00f6s id\u0151kerete miatt sz\u00fcks\u00e9g lesz nagyobb k\u00f3dblokkok m\u00e1sol\u00e1s\u00e1ra, azonban minden esetben figyelj\u00fcnk a laborvezet\u0151 magyar\u00e1zat\u00e1ra, hogy a k\u00f3dr\u00e9szek \u00e9rthet\u0151ek legyenek. A c\u00e9l a bemutatott k\u00f3dok meg\u00e9rt\u00e9se \u00e9s a felhaszn\u00e1lt libraryk haszn\u00e1lat\u00e1nak elsaj\u00e1t\u00edt\u00e1sa.</p> <p>Eln\u00e9z\u00e9st k\u00e9r\u00fcnk  az eddigiekn\u00e9l nagyobb k\u00f3d blokkok\u00e9rt, de egy ilyen, bemutat\u00f3 jelleg\u0171 feladat kisebb m\u00e9retben nem oldhat\u00f3 meg, illetve a labor elvesz\u00edten\u00e9 a l\u00e9nyeg\u00e9t, ha csak egy \u201ehello world\u201d h\u00e1l\u00f3zati kommunik\u00e1ci\u00f3s lek\u00e9r\u00e9st val\u00f3s\u00edtan\u00e1nk meg. K\u00f6sz\u00f6nj\u00fck a meg\u00e9rt\u00e9st.</p>"},{"location":"laborok/07-android-network/#elokeszuletek","title":"El\u0151k\u00e9sz\u00fcletek","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t.</p>"},{"location":"laborok/07-android-network/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li> <p>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</p> </li> <li> <p>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.</p> <p>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</p> </li> <li> <p>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</p> </li> <li> <p>A <code>neptun.txt</code> f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</p> </li> </ol>"},{"location":"laborok/07-android-network/#projekt-letrehozasa","title":"Projekt l\u00e9trehoz\u00e1sa","text":"<p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt ind\u00edtsuk el az Android Studio-t, majd: 1. Hozzunk l\u00e9tre egy \u00faj projektet, v\u00e1lasszuk az Empty Activity lehet\u0151s\u00e9get. 2. A projekt neve legyen <code>WeatherInfo</code>, a kezd\u0151 package pedig <code>hu.bme.aut.android.weatherinfo</code> 3. Nyelvnek v\u00e1lasszuk a Kotlin-t. 4. A minimum API szint legyen API24: Android 7.0. 5. A Build configuration language Kotlin DSL legyen.</p> <p>FILE PATH</p> <p>A projekt a repository-ban l\u00e9v\u0151 WeatherInfo k\u00f6nyvt\u00e1rba ker\u00fclj\u00f6n, \u00e9s bead\u00e1sn\u00e1l legyen is felpusholva! A k\u00f3d n\u00e9lk\u00fcl nem tudunk maxim\u00e1lis pontot adni a laborra!</p>"},{"location":"laborok/07-android-network/#fuggosegek-felvetele","title":"F\u00fcgg\u0151s\u00e9gek felv\u00e9tele","text":"<p>Vegy\u00fck fel a sz\u00fcks\u00e9ges k\u00f6nyvt\u00e1rakat a <code>libs.versions.toml</code> f\u00e1jlban: <pre><code>[versions]\ncoilCompose = \"2.6.0\"\nmoshi = \"1.15.1\"\nretrofit = \"2.11.0\"\nnavigationCompose = \"2.8.2\"\n\n[libraries]\nandroidx-navigation-compose = { group = \"androidx.navigation\", name=\"navigation-compose\", version.ref = \"navigationCompose\" }\ncoil-compose = { group = \"io.coil-kt\", name=\"coil-compose\", version.ref = \"coilCompose\" }\nsquareup-moshi = { group = \"com.squareup.moshi\", name = \"moshi-kotlin\", version.ref = \"moshi\" }\nconverter-moshi = { group = \"com.squareup.retrofit2\", name = \"converter-moshi\", version.ref = \"retrofit\" }\nretrofit = { group = \"com.squareup.retrofit2\", name = \"retrofit\", version.ref = \"retrofit\" }\n</code></pre></p> <p>Majd az app modulhoz tartoz\u00f3 <code>build.gradle</code> f\u00e1jlban a <code>dependencies</code> blokkhoz adjuk hozz\u00e1 az al\u00e1bbiakat:</p> <pre><code>dependencies{\nimplementation(libs.androidx.navigation.compose)\nimplementation(libs.retrofit)\nimplementation(libs.squareup.moshi)\nimplementation(libs.converter.moshi)\nimplementation(libs.coil.compose)\n}\n</code></pre> <p>Ezut\u00e1n kattintsunk a jobb fels\u0151 sarokban megjelen\u0151 Sync now gombra.</p> <p>Retrofit</p> <p>A <code>Retrofit</code> a fejleszt\u0151 \u00e1ltal le\u00edrt egyszer\u0171, megfelel\u0151en annot\u00e1lt interf\u00e9szek alapj\u00e1n k\u00f3dgener\u00e1l\u00e1ssal \u00e1ll\u00edt el\u0151 HTTP hiv\u00e1sokat lebonyol\u00edt\u00f3 implement\u00e1ci\u00f3t. Kezeli az URL-ben inline m\u00f3don adott param\u00e9tereket, az URL queryket, stb. T\u00e1mogatja a legn\u00e9pszer\u0171bb szerializ\u00e1l\u00f3/deszerializ\u00e1l\u00f3 megold\u00e1sokat is (pl.: <code>Gson</code>, <code>Moshi</code>, <code>Simple XML</code>, stb.), amikkel Java/Kotlin objektumok, \u00e9s JSON vagy XML form\u00e1tum\u00fa adatok k\u00f6z\u00f6tti k\u00e9tir\u00e1ny\u00fa \u00e1talak\u00edt\u00e1s val\u00f3s\u00edthat\u00f3 meg. A laboron ezek k\u00f6z\u00fcl a <code>Moshi</code>-t fogjuk haszn\u00e1lni a JSON-ban \u00e9rkez\u0151 id\u0151j\u00e1r\u00e1s adatok konvert\u00e1l\u00e1s\u00e1ra.</p> <p>Coil</p> <p>A <code>Coil</code>  egy hat\u00e9kony k\u00e9pbet\u00f6lt\u00e9st \u00e9s cache-el\u00e9st megval\u00f3s\u00edt\u00f3 library Androidra. Egyszer\u0171 interface-e \u00e9s hat\u00e9konys\u00e1ga miatt haszn\u00e1ljuk.</p>"},{"location":"laborok/07-android-network/#engedelyek-felvetele","title":"Enged\u00e9lyek felv\u00e9tele","text":"<p>Az alkalmaz\u00e1sban sz\u00fcks\u00e9g\u00fcnk lesz internet el\u00e9r\u00e9sre. Vegy\u00fck fel az <code>AndroidManifest.xml</code> \u00e1llom\u00e1nyban az Internet permission-t az <code>application</code> tagen k\u00edv\u00fclre:</p> <pre><code>&lt;uses-permission android:name=\"android.permission.INTERNET\" /&gt;\n</code></pre> <p>Enged\u00e9lyek</p> <p>Androidon API 23-t\u00f3l (6.0, Marshmallow) az enged\u00e9lyek k\u00e9t csoportba lettek osztva. A normal csoportba tartoz\u00f3 enged\u00e9lyeket el\u00e9g felvenni az <code>AndroidManifest.xml</code> f\u00e1jlba az el\u0151bb l\u00e1tott m\u00f3don \u00e9s az alkalmaz\u00e1s automatikusan megkapja \u0151ket. A dangerous csoportba tartoz\u00f3 enged\u00e9lyek eset\u00e9n ez m\u00e1r nem el\u00e9g, fut\u00e1s id\u0151ben explicit m\u00f3don el kell k\u00e9rni \u0151ket a felhaszn\u00e1l\u00f3t\u00f3l, aki ak\u00e1rmikor meg is tagadhatja az alkalmaz\u00e1st\u00f3l a k\u00e9rt enged\u00e9lyt. Az enged\u00e9lyek kezel\u00e9s\u00e9r\u0151l b\u0151vebben a developer.android.com oldalon lehet t\u00e1j\u00e9koz\u00f3dni.</p>"},{"location":"laborok/07-android-network/#eroforrasok-hozzaadasa","title":"Er\u0151forr\u00e1sok hozz\u00e1ad\u00e1sa","text":"<p>T\u00f6lts\u00fck le az alkalmaz\u00e1sban haszn\u00e1lt k\u00e9peket tartalmaz\u00f3 t\u00f6m\u00f6r\u00edtett f\u00e1jlt, majd helyezz\u00fck el a tartalm\u00e1t a projekt\u00fcnk res mapp\u00e1j\u00e1ba.</p> <p>Vegy\u00fck fel az al\u00e1bbi sz\u00f6veges er\u0151forr\u00e1sokat a <code>res/values/strings.xml</code>-be:</p> <pre><code>&lt;resources&gt;\n&lt;string name=\"app_name\"&gt;WeatherInfo&lt;/string&gt;\n&lt;string name=\"new_city\"&gt;New city&lt;/string&gt;\n&lt;string name=\"ok\"&gt;OK&lt;/string&gt;\n&lt;string name=\"cancel\"&gt;Cancel&lt;/string&gt;\n&lt;string name=\"weather_in\"&gt;Weather in %1$s&lt;/string&gt;\n&lt;string name=\"some_error_message\"&gt;Something went wrong.&lt;/string&gt;\n&lt;string name=\"label_temperature\"&gt;Temperature&lt;/string&gt;\n&lt;string name=\"label_min_temperature\"&gt;Min. temperature&lt;/string&gt;\n&lt;string name=\"label_max_temperature\"&gt;Max. temperature&lt;/string&gt;\n&lt;string name=\"label_pressure\"&gt;Pressure&lt;/string&gt;\n&lt;string name=\"label_humidity\"&gt;Humidity&lt;/string&gt;\n&lt;string name=\"new_city_hint\"&gt;City&lt;/string&gt;\n&lt;/resources&gt;\n</code></pre>"},{"location":"laborok/07-android-network/#openweathermap-api-kulcs","title":"OpenWeatherMap API kulcs","text":"<p>Regisztr\u00e1ljunk saj\u00e1t felhaszn\u00e1l\u00f3t az OpenWeatherMap oldalon, \u00e9s hozzunk l\u00e9tre egy API kulcsot, aminek a seg\u00edts\u00e9g\u00e9vel haszn\u00e1lhatjuk majd a szolg\u00e1ltat\u00e1st az alkalmaz\u00e1sunkban! </p> <ol> <li>Kattintsunk a Sign in majd a Create an account gombra.</li> <li>T\u00f6lts\u00fck ki a regisztr\u00e1ci\u00f3s formot</li> <li>A Company mez\u0151 \u00e9rt\u00e9ke legyen \"BME\", a Purpose \u00e9rt\u00e9ke legyen \"Education/Science\"</li> <li>Sikeres regisztr\u00e1ci\u00f3 ut\u00e1n az API keys tabon tal\u00e1lhat\u00f3 az alap\u00e9rtelmezettk\u00e9nt l\u00e9trehozott API kulcs.</li> </ol> <p>A kapott API kulcsra k\u00e9s\u0151bb sz\u00fcks\u00e9g\u00fcnk lesz az id\u0151j\u00e1r\u00e1s adatokat lek\u00e9r\u0151 API h\u00edv\u00e1sn\u00e1l.</p>"},{"location":"laborok/07-android-network/#varoslista-megvalositasa-1-pont","title":"V\u00e1roslista megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>Val\u00f3s\u00edtsuk meg az egy <code>LazyColumn</code>-b\u00f3l \u00e1ll\u00f3, v\u00e1rosok list\u00e1j\u00e1t megjelen\u00edt\u0151 <code>CityListScreen</code>-t!</p> <p>A v\u00e1ros nev\u00e9re kattintva jelenik majd meg az id\u0151j\u00e1r\u00e1s n\u00e9zet (WeatherScreen), ahol az id\u0151j\u00e1r\u00e1s inform\u00e1ci\u00f3k let\u00f6lt\u00e9se fog t\u00f6rt\u00e9nni. \u00daj v\u00e1ros felv\u00e9tel\u00e9re egy FloatingActionButton fog szolg\u00e1lni.</p>"},{"location":"laborok/07-android-network/#az-architektura-kialakitasa","title":"Az architekt\u00fara kialak\u00edt\u00e1sa","text":"<p>Az adatok forr\u00e1sa az el\u0151z\u0151 laboron l\u00e1tottakhoz hasonl\u00f3an egy repository lesz. Innen fogjuk visszakapni a (jelenleg csak a mem\u00f3ri\u00e1ban t\u00e1rolt) v\u00e1rosainkat.</p>"},{"location":"laborok/07-android-network/#a-modell-osztaly","title":"A modell oszt\u00e1ly","text":"<p>Vegy\u00fcnk fel a f\u0151 package-\u00fcnkbe egy <code>data</code>, majd ezen bel\u00fcl egy <code>local</code>, majd ezen bel\u00fcl egy <code>model</code> package-et. Ide fog ker\u00fclni a v\u00e1rosainkat reprezent\u00e1l\u00f3 oszt\u00e1ly, ami jelen esetben csup\u00e1n egy id-val \u00e9s egy n\u00e9vvel rendelkezik.</p> <p><code>City.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.local.model\n\nclass City(\nvar id: Int,\nvar name: String\n)\n</code></pre>"},{"location":"laborok/07-android-network/#a-repository","title":"A repository","text":"<p>Ez ut\u00e1n m\u00e1r elk\u00e9sz\u00edthetj\u00fck a repository-jainkat a m\u00e1r l\u00e1tott m\u00f3don a <code>hu.bme.aut.android.weatherinfo.data.local.repository</code> package-ben.</p> <p><code>ICityRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.local.repository\n\nimport hu.bme.aut.android.weatherinfo.data.local.model.City\nimport kotlinx.coroutines.flow.Flow\n\ninterface ICityRepository {\n\nfun getAllCities(): Flow&lt;List&lt;City&gt;&gt;\nsuspend fun addCityByName(cityName: String)\n}\n</code></pre> <p><code>MemoryCityRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.local.repository\n\nimport androidx.compose.runtime.mutableStateListOf\nimport hu.bme.aut.android.weatherinfo.data.local.model.City\nimport kotlinx.coroutines.flow.Flow\nimport kotlinx.coroutines.flow.flow\n\nclass MemoryCityRepository : ICityRepository {\nprivate var nextId=3\n\nprivate var cities = mutableStateListOf(\nCity(id = 0, \"Budapest\"),\nCity(id = 1, \"London\"),\nCity(id = 2, \"Berlin\")\n)\n\noverride fun getAllCities(): Flow&lt;List&lt;City&gt;&gt; = flow {\nemit(cities)\n}\n\noverride suspend fun addCityByName(cityName: String) {\ncities.add(City(id = nextId++, name = cityName))\n}\n\n}\n</code></pre> <p>A repository elk\u00e9sz\u00edt\u00e9se ut\u00e1n p\u00e9ld\u00e1nyos\u00edtsuk is azt az application oszt\u00e1lyunkban a <code>hu.bme.aut.android.weatherinfo</code> package-ben.</p> <p><code>WeatherInfo.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo\n\nimport android.app.Application\nimport hu.bme.aut.android.weatherinfo.data.local.repository.ICityRepository\nimport hu.bme.aut.android.weatherinfo.data.local.repository.MemoryCityRepository\n\nclass WeatherInfoApplication : Application() {\ncompanion object {\n\nlateinit var cityRepository: ICityRepository\n}\n\noverride fun onCreate() {\nsuper.onCreate()\n\ncityRepository = MemoryCityRepository()\n}\n}\n</code></pre> <p>Majd pedig az <code>AndroidManifest.xml</code>-ben \u00e1ll\u00edtsuk be az application oszt\u00e1lyunk haszn\u00e1lat\u00e1t.</p> <p><code>AndroidManifest.xml</code>:</p> <pre><code>...\n&lt;application\nandroid:name=\".WeatherInfoApplication\"\n...\n</code></pre>"},{"location":"laborok/07-android-network/#a-viewmodel","title":"A ViewModel","text":"<p>Miut\u00e1n a repository-val megvagyunk, folytathatjuk a k\u00f6vetkez\u0151 r\u00e9teggel, a viewmodel-lel. A v\u00e1roslist\u00e1hoz tartoz\u00f3 viewmodel-t \u00e9s screen-t a <code>hu.bme.aut.android.weatherinfo.feature.citylist</code> package-ben fogjuk elk\u00e9sz\u00edteni. Hozzunk teh\u00e1t l\u00e9tre itt egy \u00faj package-et az \u00e1llapotnak <code>state</code> n\u00e9ven, majd helyezz\u00fck is el benne a <code>CityListState</code>-et.</p> <p><code>CityListState.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.citylist.state\n\nimport hu.bme.aut.android.weatherinfo.data.local.model.City\n\n\nsealed class CityListState {\ndata object Loading : CityListState()\ndata class Error(val error: Throwable) : CityListState()\ndata class Result(val cityList: List&lt;City&gt;) : CityListState()\n}\n</code></pre> <p>Ezek ut\u00e1n a <code>citylist</code> package-be j\u00f6het a viewmodel:</p> <p><code>CityListViewModel.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.citylist\n\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.viewModelScope\nimport androidx.lifecycle.viewmodel.initializer\nimport androidx.lifecycle.viewmodel.viewModelFactory\nimport hu.bme.aut.android.weatherinfo.WeatherInfoApplication\nimport hu.bme.aut.android.weatherinfo.data.local.model.City\nimport hu.bme.aut.android.weatherinfo.data.local.repository.ICityRepository\nimport hu.bme.aut.android.weatherinfo.feature.citylist.state.CityListState\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.flow.collectLatest\nimport kotlinx.coroutines.launch\n\nclass CityListViewModel(\nprivate val cityRepository: ICityRepository\n) : ViewModel() {\n\nprivate val _state = MutableStateFlow&lt;CityListState&gt;(CityListState.Loading)\nval state = _state.asStateFlow()\n\ninit {\ngetAllCities()\n}\n\nprivate fun getAllCities() {\nviewModelScope.launch {\n_state.value = CityListState.Loading\ntry {\ncityRepository.getAllCities().collectLatest{\n_state.tryEmit(CityListState.Result(it))\n}\n} catch (e: Exception) {\n_state.value = CityListState.Error(e)\n}\n}\n}\n\nfun addCity(city: String) {\nviewModelScope.launch {\ntry {\ncityRepository.addCityByName(city)\n} catch (e: Exception) {\ne.printStackTrace()\n}\n}\n}\n\ncompanion object {\nval Factory: ViewModelProvider.Factory = viewModelFactory {\ninitializer {\nCityListViewModel(\ncityRepository = WeatherInfoApplication.cityRepository\n)\n}\n}\n}\n}\n</code></pre>"},{"location":"laborok/07-android-network/#a-varoslista-kepernyo-megvalositasa","title":"A v\u00e1roslista k\u00e9perny\u0151 megval\u00f3s\u00edt\u00e1sa","text":"<p>Imm\u00e1ron a v\u00e1ros adataink k\u00e9szen \u00e1llnak arra, hogy megjelen\u00edts\u00fck azokat a fel\u00fcleten. A <code>CityListScreen</code> elk\u00e9sz\u00edt\u00e9se el\u0151tt azonban el\u0151sz\u00f6r az azt alkot\u00f3 komponenseket k\u00e9sz\u00edts\u00fck el.</p>"},{"location":"laborok/07-android-network/#a-komponensek-elkeszitese","title":"A komponensek elk\u00e9sz\u00edt\u00e9se","text":"<p>A v\u00e1rosainkat egy k\u00e1rty\u00e1n fogjuk megjelen\u00edteni, aminek van egy ikonja, ami egyel\u0151re csak egy placeholder, egy felirata, valamint egy <code>SwipeToDismissBox</code> seg\u00edts\u00e9g\u00e9vel megval\u00f3s\u00edtja azt, hogy ha balra h\u00fazzuk, akkor t\u00f6rl\u0151dik. K\u00e9sz\u00edts\u00fck el ezt a komponenst a <code>hu.bme.aut.android.weatherinfo.feature.citylist.components</code> package-ben.</p> <p><code>CityCard.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.citylist.components\n\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.clickable\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Delete\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.ListItem\nimport androidx.compose.material3.ListItemDefaults\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.OutlinedCard\nimport androidx.compose.material3.SwipeToDismissBox\nimport androidx.compose.material3.SwipeToDismissBoxValue\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.rememberSwipeToDismissBoxState\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport hu.bme.aut.android.weatherinfo.R\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun CityCard(\ncity: String,\nonCityClick: (String) -&gt; Unit,\nonDelete: (String) -&gt; Unit\n) {\nval dismissState = rememberSwipeToDismissBoxState(confirmValueChange = {\nif (it == SwipeToDismissBoxValue.EndToStart) {\nonDelete(city)\n}\nreturn@rememberSwipeToDismissBoxState true\n},\n// positional threshold of 25%\npositionalThreshold = { it * .25f }\n)\nOutlinedCard(\nmodifier = Modifier\n.fillMaxWidth(),\nshape = RoundedCornerShape(16.dp)\n) {\nSwipeToDismissBox(\nenableDismissFromStartToEnd = false,\nstate = dismissState,\nbackgroundContent = {\nRow(\nmodifier = Modifier\n.fillMaxSize()\n.background(\nwhen (dismissState.dismissDirection) {\nSwipeToDismissBoxValue.EndToStart -&gt; Color.Red\nelse -&gt; MaterialTheme.colorScheme.background\n}\n)\n.padding(12.dp, 8.dp),\nverticalAlignment = Alignment.CenterVertically,\nhorizontalArrangement = Arrangement.End\n) {\nIcon(\nimageVector = Icons.Default.Delete,\ncontentDescription = \"Delete\"\n)\n}\n}\n) {\nListItem(\ncolors = ListItemDefaults.colors(containerColor = MaterialTheme.colorScheme.primaryContainer),\nheadlineContent = {\nText(\ntext = city,\nfontSize = 24.sp\n)\n\n},\nleadingContent = {\nIcon(\nmodifier = Modifier\n.size(64.dp),\npainter = painterResource(id = R.drawable.ic_placeholder),\ncontentDescription = \"\"\n)\n},\nmodifier = Modifier.clickable(onClick = {\nonCityClick(\ncity\n)\n}\n)\n)\n}\n}\n}\n\n@Composable\n@Preview\nfun CityCardPreview() {\nCityCard(city = \"Budapest\", onCityClick = {}, onDelete = {})\n}\n</code></pre> <p>A megjelen\u00edt\u00e9shez most nem k\u00e9sz\u00edtett\u00fcnk saj\u00e1t komplex elrendez\u00e9st, ink\u00e1bb a be\u00e9p\u00edtett <code>ListItem</code> composable-t haszn\u00e1ljuk. A nek\u00fcnk kell\u0151 funkcionalit\u00e1st, hogy ki\u00edrunk egy sz\u00f6veget, \u00e9s felhelyez\u00fcnk egy k\u00e9pet, k\u00f6nnyen megtehetj\u00fck a headlineContent \u00e9s a leadingContent property-kkel.</p> <p>Figyelj\u00fck meg, hogy a <code>SwipeToDismissBox</code>-n\u00e1l hogyan tiltjuk le a balra h\u00faz\u00e1st, \u00e9s hogyan \u00e1ll\u00edtjuk be az \u00e1llapot\u00e1t!</p> <p>A v\u00e1ros lista ki\u00edr\u00e1sa ut\u00e1n m\u00e1r csak annyi dolgunk van, hogy lehet\u0151v\u00e9 tegy\u00fck \u00faj v\u00e1ros felv\u00e9tel\u00e9t is. Ezt egy egyszer\u0171 \u00e1ltal\u00e1nos dial\u00f3gussal fogjuk megtenni, amibe a felhaszn\u00e1l\u00f3 egy sz\u00f6veget \u00edrhat be.</p> <p><code>StringInputDialog.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.citylist.components\n\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.shape.RoundedCornerShape\nimport androidx.compose.foundation.text.KeyboardOptions\nimport androidx.compose.material3.Button\nimport androidx.compose.material3.Card\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.OutlinedButton\nimport androidx.compose.material3.OutlinedTextField\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.text.font.FontWeight\nimport androidx.compose.ui.text.input.ImeAction\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.compose.ui.window.Dialog\nimport hu.bme.aut.android.weatherinfo.R\n\n@Composable\nfun StringInputDialog(\nmodifier: Modifier = Modifier,\ntitle: String,\nlabel: String,\nonDismiss: () -&gt; Unit,\nonConfirm: (String) -&gt; Unit\n) {\nDialog(onDismissRequest = onDismiss) {\nCard(shape = RoundedCornerShape(16.dp)) {\nColumn(\nmodifier = modifier\n.fillMaxWidth()\n.background(MaterialTheme.colorScheme.background)\n.padding(16.dp),\nhorizontalAlignment = Alignment.CenterHorizontally,\nverticalArrangement = Arrangement.Center\n) {\nText(\ntext = title,\nfontWeight = FontWeight.Bold,\nfontSize = 24.sp\n)\nSpacer(modifier = Modifier.height(16.dp))\nvar input by remember { mutableStateOf(\"\") }\nvar isInputError by remember { mutableStateOf(input.isEmpty()) }\nOutlinedTextField(\nshape = RoundedCornerShape(8.dp),\nvalue = input,\nonValueChange = {\ninput = it\nisInputError = it.isEmpty()\n},\nmaxLines = 1,\nisError = isInputError,\nkeyboardOptions = KeyboardOptions(imeAction = ImeAction.Done),\nlabel = { Text(text = label) }\n)\nSpacer(modifier = Modifier.height(16.dp))\nRow(\nmodifier = Modifier.fillMaxWidth(),\nhorizontalArrangement = Arrangement.SpaceEvenly\n) {\nOutlinedButton(\nonClick = onDismiss,\nshape = RoundedCornerShape(8.dp),\nmodifier = modifier\n.weight(1f)\n.padding(8.dp)\n) {\nText(stringResource(id = R.string.cancel))\n}\nButton(\nonClick = {\nif (!isInputError) {\nonConfirm(input)\nonDismiss()\n}\n},\nshape = RoundedCornerShape(8.dp),\nmodifier = modifier\n.weight(1f)\n.padding(8.dp)\n) {\nText(stringResource(id = R.string.ok))\n}\n}\n}\n}\n}\n}\n\n@Composable\n@Preview\nfun StringInputDialogPreview() {\nStringInputDialog(\ntitle = \"New City\",\nlabel = \"City name\",\nonDismiss = {},\nonConfirm = {}\n)\n}\n</code></pre> <p>Ennek a f\u00fcggv\u00e9nynek k\u00e9t lambda param\u00e9tere lesz, <code>onDismiss</code> ez fog felelni az\u00e9rt hogy a dial\u00f3gus ablakunkat el tudjuk t\u00fcntetni, illetve az <code>onConfirm</code>, ami pedig az \u00faj v\u00e1ros hozz\u00e1ad\u00e1s\u00e1t teszi lehet\u0151v\u00e9. Ezeket a lambda param\u00e9tereket tov\u00e1bbadjuk param\u00e9terk\u00e9nt a t\u00f6bbi f\u00fcggv\u00e9nynek a k\u00f6vetkez\u0151 k\u00e9ppen.</p> <ul> <li><code>onDismiss</code> - Ezt a param\u00e9tert mind a k\u00e9t gomb meg kell hogy kapja, ugyanis ha hozz\u00e1adtunk egy \u00faj v\u00e1rost azt szeretn\u00e9nk hogy elt\u0171nj\u00f6n az ablak, illetve ha meggondoln\u00e1nk magunkat \u00e9s nem szeretn\u00e9nk \u00faj v\u00e1rost felvenni akkor is el kell t\u00fcntetni az ablakot.</li> <li><code>onConfirm</code> - Ezt csak a pozit\u00edv gombra fogjuk r\u00e1tenni, egy string param\u00e9terrel, ami pedig a beviteli mez\u0151 szerint lesz v\u00e1ltoztathat\u00f3.</li> </ul>"},{"location":"laborok/07-android-network/#a-citylistscreen-elkeszitese","title":"A CityListScreen elk\u00e9sz\u00edt\u00e9se","text":"<p>Miut\u00e1n elk\u00e9sz\u00fclt\u00f6nk a viewmodel-lel \u00e9s a komponensekkel is, nincs m\u00e1s h\u00e1tra, minthogy \u00f6sszerakjuk a <code>CityListScreen</code>-t a <code>hu.bme.aut.android.weatherinfo.feature.citylist</code> package-ben.</p> <p><code>CityListScreen.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.citylist\n\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.lazy.LazyColumn\nimport androidx.compose.foundation.lazy.items\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.filled.Add\nimport androidx.compose.material3.CircularProgressIndicator\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.LargeFloatingActionButton\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.lifecycle.compose.collectAsStateWithLifecycle\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport hu.bme.aut.android.weatherinfo.R\nimport hu.bme.aut.android.weatherinfo.feature.citylist.components.CityCard\nimport hu.bme.aut.android.weatherinfo.feature.citylist.components.StringInputDialog\nimport hu.bme.aut.android.weatherinfo.feature.citylist.state.CityListState\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun CityListScreen(\nonCityClick: (String) -&gt; Unit,\nviewModel: CityListViewModel = viewModel(factory = CityListViewModel.Factory)\n) {\n\nval state = viewModel.state.collectAsStateWithLifecycle().value\n\nvar isNewCityDialogOpen by remember { mutableStateOf(false) }\n\nScaffold(\ntopBar = {\nTopAppBar(\ntitle = { Text(text = stringResource(id = R.string.app_name)) },\ncolors = TopAppBarDefaults.topAppBarColors(\ncontainerColor = MaterialTheme.colorScheme.primary,\ntitleContentColor = MaterialTheme.colorScheme.onPrimary\n)\n)\n},\nfloatingActionButton = {\nLargeFloatingActionButton(\nonClick = {\nisNewCityDialogOpen = true\n},\ncontainerColor = MaterialTheme.colorScheme.primary\n) {\nIcon(\nimageVector = Icons.Default.Add,\ncontentDescription = null\n)\n}\n}\n) { innerPadding -&gt;\nwhen (state) {\nis CityListState.Loading -&gt; CircularProgressIndicator()\nis CityListState.Error -&gt; {\nText(text = state.error.toString())\n}\n\nis CityListState.Result -&gt; {\nLazyColumn(\nmodifier = Modifier\n.padding(innerPadding)\n.padding(8.dp)\n) {\nitems(items = state.cityList, key = { item -&gt; item.id }) { city -&gt;\nCityCard(\ncity = city.name,\nonCityClick = onCityClick,\nonDelete = { /*TODO remove city*/ }\n)\nif (state.cityList.size - 1 &gt; state.cityList.indexOf(city)) {\nSpacer(modifier = Modifier.height(8.dp))\n}\n}\n}\n}\n}\n\n\nif (isNewCityDialogOpen) {\n\nStringInputDialog(\nonDismiss = { isNewCityDialogOpen = false },\nonConfirm = { cityList -&gt;\nviewModel.addCity(cityList)\nisNewCityDialogOpen = false\n},\ntitle = stringResource(id = R.string.new_city),\nlabel = stringResource(id = R.string.new_city_hint)\n)\n}\n}\n}\n\n@Composable\n@Preview\nfun CityListScreenPreview() {\nCityListScreen(onCityClick = {})\n}\n</code></pre>"},{"location":"laborok/07-android-network/#a-navigacio-elkeszitese","title":"A navig\u00e1ci\u00f3 elk\u00e9sz\u00edt\u00e9se","text":"<p>A szok\u00e1soknak megfelel\u0151en, a navig\u00e1ci\u00f3hoz <code>NavGraph</code>-ot fogunk haszn\u00e1lni. K\u00e9sz\u00edts\u00fck teh\u00e1t el a <code>hu.bme.aut.android.weatherinfo.navigation</code> package-ben a sz\u00fcks\u00e9ges oszt\u00e1lyokat.</p> <p><code>Screen.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.navigation\n\nsealed class Screen(val route: String) {\nobject CityListScreen : Screen(route = \"city_list\")\n}\n</code></pre> <p><code>NavGraph.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.navigation\n\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.navigation.NavHostController\nimport androidx.navigation.NavType\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.rememberNavController\nimport hu.bme.aut.android.weatherinfo.feature.citylist.CityListScreen\n\n@Composable\nfun NavGraph(\nmodifier: Modifier = Modifier,\nnavController: NavHostController = rememberNavController(),\nstartDestination: String = Screen.CityListScreen.route\n) {\n\nNavHost(\nnavController = navController,\nstartDestination = startDestination,\nmodifier = modifier\n) {\n\ncomposable(Screen.CityListScreen.route) {\nCityListScreen(\nonCityClick = { /*TODO navigation*/ }\n)\n}\n}\n}\n</code></pre> <p>V\u00e9g\u00fcl tegy\u00fck fel a <code>MainActivity</code>-re a <code>NavGraph</code>-unkat.</p> <p><code>MainActivity.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo\n\nimport android.os.Bundle\nimport androidx.activity.ComponentActivity\nimport androidx.activity.compose.setContent\nimport androidx.activity.enableEdgeToEdge\nimport hu.bme.aut.android.weatherinfo.navigation.NavGraph\nimport hu.bme.aut.android.weatherinfo.ui.theme.WeatherInfoTheme\n\nclass MainActivity : ComponentActivity() {\noverride fun onCreate(savedInstanceState: Bundle?) {\nsuper.onCreate(savedInstanceState)\nenableEdgeToEdge()\nsetContent {\nWeatherInfoTheme {\nNavGraph()\n}\n}\n}\n}\n</code></pre> <p>Ezen a ponton m\u00e1r megjelenik a v\u00e1ros lista, \u00e9s fel is tudunk venni bele \u00faj elemet.</p> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik a v\u00e1rosnevek list\u00e1ja egy \u00fajonnan hozz\u00e1adott v\u00e1rossal amelynek a neve a NEPTUN k\u00f3dod (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a NewCityDialog k\u00f3dja, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f1.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/07-android-network/#az-idojaras-nezet-letrehozasa-es-bekotese-a-navigacioba-2-pont","title":"Az id\u0151j\u00e1r\u00e1s n\u00e9zet l\u00e9trehoz\u00e1sa \u00e9s bek\u00f6t\u00e9se a navig\u00e1ci\u00f3ba (2 pont)","text":""},{"location":"laborok/07-android-network/#az-architektura-kialakitasa_1","title":"Az architekt\u00fara kialak\u00edt\u00e1sa","text":"<p>Az adataink \u00e1raml\u00e1sa hasonl\u00f3 lesz a m\u00e1r kor\u00e1bban l\u00e1tottakhoz, (repository -&gt; viewmodel -&gt; screen) sz\u00f3val k\u00e9sz\u00edts\u00fck is el ezeket.</p>"},{"location":"laborok/07-android-network/#modell-osztalyok","title":"Modell oszt\u00e1lyok","text":"<p>Az OpenWeatherMap API a k\u00e9r\u00e9seinkre v\u00e1laszk\u00e9nt egy JSON objektumban fogja visszaadni az aktu\u00e1lis id\u0151j\u00e1r\u00e1st. </p> <p>API h\u00edv\u00e1s (az {appID} lecser\u00e9lend\u0151 a saj\u00e1tra)</p> <p>https://api.openweathermap.org/data/2.5/weather?q=Budapest&amp;units=metric&amp;appid={appId}</p> Api v\u00e1lasz <pre><code>{\n\"coord\": {\n\"lon\":19.0399,\n\"lat\":47.498\n},\n\"weather\": [\n{\n\"id\":741,\n\"main\":\"Fog\",\n\"description\":\"fog\",\n\"icon\":\"50n\"\n}\n],\n\"base\":\"stations\",\n\"main\": {\n\"temp\":9.98,\n\"feels_like\":9.98,\n\"temp_min\":8.93,\n\"temp_max\":10.71,\n\"pressure\":1013,\n\"humidity\":96,\n\"sea_level\":1013,\n\"grnd_level\":991\n},\n\"visibility\":8000,\n\"wind\": {\n\"speed\":1.03,\n\"deg\":0\n},\n\"clouds\": {\n\"all\":43\n},\n\"dt\":1728250809,\n\"sys\": {\n\"type\":2,\n\"id\":2009313,\n\"country\":\"HU\",\n\"sunrise\":1728190192,\n\"sunset\":1728231218},\n\"timezone\":7200,\n\"id\":3054643,\n\"name\":\"Budapest\",\n\"cod\":200\n}\n</code></pre> <p>Ahhoz, hogy ebb\u0151l \u00e1ltalunk is haszn\u00e1lhat\u00f3 objektumok legyenek, sz\u00fcks\u00e9g\u00fcnk lesz a modell oszt\u00e1ly(ok)ra, illetve a <code>Moshi</code> k\u00f6nyvt\u00e1rra, ami a konverzi\u00f3t v\u00e9gzi. Ebben a f\u00e1zisban el\u0151sz\u00f6r a modell oszt\u00e1lyokat k\u00e9sz\u00edts\u00fck el. Mint l\u00e1that\u00f3 a kapott JSON el\u00e9g bonyolult, \u00e9s sok al csom\u00f3pontot tartalmaz. Szerencs\u00e9re az oszt\u00e1lyainkat nem kell k\u00e9zzel a JSON-b\u0151l kisilabiz\u00e1lni. Egyr\u00e9szt a legt\u00f6bb API-n\u00e1l kiterjedt le\u00edr\u00e1st kapunk a modellr\u0151l, m\u00e1sr\u00e9szt sz\u00e1mos konverter l\u00e9tezik a JSON -&gt; Kotlin class konverzi\u00f3ra. Mi most egy Android Studio Plugin seg\u00edts\u00e9g\u00e9t fogjuk k\u00e9rni.</p> <p>Keress\u00fck meg az Android Studio be\u00e1ll\u00edt\u00e1sai k\u00f6z\u00f6tt a Plugins-t, ott pedig a Marketplace keres\u0151be \u00edrjuk be, hogy JSON To Kotlin Class, \u00e9s telep\u00edts\u00fck a megtal\u00e1lt plugint.</p> <p> </p> <p>Ha ez megvan, hozzuk l\u00e9tra a modell oszt\u00e1lyok package-\u00e9t a <code>hu.bme.aut.android.weatherinfo.data.network.model</code> helye. Ez ut\u00e1n nyomjunk a package-re jobb klikket, majd New-&gt; Kotlin data class File from JSON.</p> <p> </p> <p>A megjelen\u0151 ablakban pedig a JSON Text hely\u00e9re illessz\u00fck be a v\u00e1laszk\u00e9nt kapott JSON-\u00fcnket, n\u00e9vnek pedig adjuk meg a <code>WeatherData</code>-t.</p> <p>A plugin l\u00e9tre is hozta nek\u00fcnk az \u00f6sszes sz\u00fcks\u00e9ges Kotlin oszt\u00e1lt a konverzi\u00f3hoz.</p> Modell oszt\u00e1lyok <p><code>Cloud.kt</code>:</p> <pre><code>@Serializable\ndata class Clouds(\nval all: Long\n)\n</code></pre> <p><code>Coord.kt</code>:</p> <pre><code>@Serializable\ndata class Coord(\nval lon: Double,\nval lat: Double\n)\n</code></pre> <p><code>Main.kt</code>:</p> <pre><code>@Serializable\ndata class Main(\nval temp: Double,\n\n@SerialName(\"feels_like\")\nval feels_like: Double,\n\n@SerialName(\"temp_min\")\nval temp_min: Double,\n\n@SerialName(\"temp_max\")\nval temp_max: Double,\n\nval pressure: Long,\nval humidity: Long,\nval sea_level: Long,\nval grnd_level: Long\n)\n</code></pre> <p><code>Sys.kt</code>:</p> <pre><code>@Serializable\ndata class Sys(\nval type: Long,\nval id: Long,\nval country: String,\nval sunrise: Long,\nval sunset: Long\n)\n</code></pre> <p><code>Weather.kt</code>:</p> <pre><code>@Serializable\ndata class Weather(\nval id: Long,\nval main: String,\nval description: String,\nval icon: String\n)\n</code></pre> <p><code>WeatherResult.kt</code>:</p> <pre><code>@Serializable\ndata class WeatherResult(\nval coord: Coord,\nval weather: List&lt;Weather&gt;,\nval base: String,\nval main: Main,\nval visibility: Long,\nval wind: Wind,\nval clouds: Clouds,\nval dt: Long,\nval sys: Sys,\nval timezone: Long,\nval id: Long,\nval name: String,\nval cod: Long\n)\n</code></pre> <p><code>Wind.kt</code>:</p> <pre><code>@Serializable\ndata class Wind(\nval speed: Double,\nval deg: Long\n)\n</code></pre>"},{"location":"laborok/07-android-network/#repository","title":"Repository","text":"<p>Miut\u00e1n megvannak a modell oszt\u00e1lyaink, elk\u00e9sz\u00edthetj\u00fck a repository-t. A <code>hu.bme.aut.android.weatherinfo.data.network</code> csomagba k\u00e9sz\u00eds\u00fcnk egy <code>repository</code> package-et, majd abba egy <code>IWeatherRepository</code> interface-t, aminek egyetlen egy getWeather() f\u00fcggv\u00e9nye lesz.</p> <p><code>IWeatherRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.network.repository\n\nimport hu.bme.aut.android.weatherinfo.data.network.model.WeatherData\nimport retrofit2.Call\n\ninterface IWeatherRepository {\nsuspend fun getWeather(city: String?): Call&lt;WeatherData?&gt;?\n}\n</code></pre> <p>Ezek alapj\u00e1n a <code>RetrofitWeatherRepository</code> (amit majd k\u00e9s\u0151bb kieg\u00e9sz\u00edt\u00fcnk a h\u00e1l\u00f3zati h\u00edv\u00e1ssal):</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.network.repository\n\nimport hu.bme.aut.android.weatherinfo.data.network.model.WeatherData\nimport retrofit2.Call\n\nclass RetrofitWeatherRepository : IWeatherRepository {\noverride suspend fun getWeather(city: String?): Call&lt;WeatherData?&gt;? {\nreturn null\n}\n}\n</code></pre> <p>A getWeather() f\u00fcggv\u00e9ny visszat\u00e9r\u00e9si \u00e9rt\u00e9ke egy <code>Call&lt;WeatherData&gt;</code> t\u00edpus\u00fa objektum lesz. (A retrofites Call-t import\u00e1ljuk a megjelen\u0151 lehet\u0151s\u00e9gek k\u00f6z\u00fcl.) Ez egy olyan h\u00e1l\u00f3zati h\u00edv\u00e1st \u00edr le, aminek a v\u00e1lasza WeatherData t\u00edpus\u00fa objektumm\u00e1 alak\u00edthat\u00f3.</p> <p>P\u00e9ld\u00e1nyos\u00edtsuk ism\u00e9t a repository-t az *application oszt\u00e1lyunkban.</p> <p><code>WeatherInfoApplication.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo\n\nimport android.app.Application\nimport hu.bme.aut.android.weatherinfo.data.local.repository.ICityRepository\nimport hu.bme.aut.android.weatherinfo.data.local.repository.MemoryCityRepository\nimport hu.bme.aut.android.weatherinfo.data.network.repository.IWeatherRepository\nimport hu.bme.aut.android.weatherinfo.data.network.repository.RetrofitWeatherRepository\n\nclass WeatherInfoApplication : Application() {\ncompanion object {\n\nlateinit var weatherRepository: IWeatherRepository\nlateinit var cityRepository: ICityRepository\n}\n\noverride fun onCreate() {\nsuper.onCreate()\n\nweatherRepository = RetrofitWeatherRepository()\ncityRepository = MemoryCityRepository()\n}\n}\n</code></pre>"},{"location":"laborok/07-android-network/#a-viewmodel_1","title":"A ViewModel","text":"<p>A viewmodel-\u00fcnk itt is egy \u00e1llapotot fog t\u00e1rolni, amiben az id\u0151j\u00e1r\u00e1sadatok vannak megfigyelhet\u0151 form\u00e1ban. K\u00e9sz\u00edts\u00fck el teh\u00e1t el\u0151sz\u00f6r ezt az \u00e1llapotot a <code>hu.bme.aut.android.weatherinfo.feature.weather.state</code> package-ben.</p> <p><code>WeatherState.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.weather.state\n\nimport hu.bme.aut.android.weatherinfo.data.network.model.WeatherData\n\nsealed class WeatherState{\ndata object Loading: WeatherState()\ndata class Error(val error: Throwable): WeatherState()\ndata class Success(val weatherData: WeatherData?): WeatherState()\n}\n</code></pre> <p>Most m\u00e1r j\u00f6het a viewmodel a <code>hu.bme.aut.android.weatherinfo.feature.weather</code> csomagba.</p> <p><code>WeatherViewModel.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.weather\n\nimport androidx.lifecycle.SavedStateHandle\nimport androidx.lifecycle.ViewModel\nimport androidx.lifecycle.ViewModelProvider\nimport androidx.lifecycle.createSavedStateHandle\nimport androidx.lifecycle.viewModelScope\nimport androidx.lifecycle.viewmodel.initializer\nimport androidx.lifecycle.viewmodel.viewModelFactory\nimport hu.bme.aut.android.weatherinfo.WeatherInfoApplication\nimport hu.bme.aut.android.weatherinfo.data.network.model.WeatherData\nimport hu.bme.aut.android.weatherinfo.data.network.repository.IWeatherRepository\nimport hu.bme.aut.android.weatherinfo.feature.weather.state.WeatherState\nimport kotlinx.coroutines.flow.MutableStateFlow\nimport kotlinx.coroutines.flow.asStateFlow\nimport kotlinx.coroutines.launch\nimport retrofit2.Call\nimport retrofit2.Callback\nimport retrofit2.Response\n\nclass WeatherViewModel(\nval savedStateHandle: SavedStateHandle,\nprivate val weatherRepository: IWeatherRepository\n) : ViewModel() {\nprivate var _state = MutableStateFlow&lt;WeatherState&gt;(WeatherState.Loading)\nval state = _state.asStateFlow()\n\nprivate var _cityName = MutableStateFlow&lt;String&gt;(checkNotNull(savedStateHandle[\"cityName\"]))\nval cityName = _cityName.asStateFlow()\n\ninit {\ngetWeather(checkNotNull(savedStateHandle[\"cityName\"]))\n}\n\nprivate fun getWeather(cityName: String) {\nviewModelScope.launch {\n_state.value = WeatherState.Loading\ntry {\nweatherRepository.getWeather(cityName)\n?.enqueue(object : Callback&lt;WeatherData?&gt; {\noverride fun onResponse(\ncall: Call&lt;WeatherData?&gt;,\nresponse: Response&lt;WeatherData?&gt;\n) {\nif (response.isSuccessful) {\n_state.tryEmit(WeatherState.Success(response.body()))\n}\n}\n\noverride fun onFailure(\ncall: Call&lt;WeatherData?&gt;,\nt: Throwable\n) {\nt.printStackTrace()\n_state.value = WeatherState.Error(t)\n}\n})\n} catch (e: Exception) {\n_state.value = WeatherState.Error(e)\n}\n}\n}\n\ncompanion object {\nval Factory: ViewModelProvider.Factory = viewModelFactory {\ninitializer {\nval savedStateHandle = createSavedStateHandle()\nval weatherRepository = WeatherInfoApplication.weatherRepository\nWeatherViewModel(\nsavedStateHandle = savedStateHandle,\nweatherRepository = weatherRepository\n)\n}\n}\n}\n}\n</code></pre> <p>A <code>WeatherViewModel</code> param\u00e9terk\u00e9nt megkapja az <code>IWeatherRepository</code> egy p\u00e9ld\u00e1ny\u00e1t, valamint egy <code>SavedStateHandle</code>-t a v\u00e1rosn\u00e9v param\u00e9ter kiolvas\u00e1s\u00e1hoz. Ezen k\u00edv\u00fcl t\u00e1rolja az \u00e1llapotot, \u00e9s a v\u00e1rosnevet (a <code>SavedStateHandle</code>-b\u0151l kiolvasva). Egyetlen f\u00fcggv\u00e9nye a h\u00e1l\u00f3zati h\u00edv\u00e1st korutinnal elv\u00e9gz\u0151 getWeather(). Tartalmazza m\u00e9g a saj\u00e1t p\u00e9ld\u00e1nyos\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges Factory method-ot.</p> <p>L\u00e1that\u00f3, hogy a getWeather f\u00fcggv\u00e9nyben a <code>weatherRepository</code> getWeather f\u00fcggv\u00e9ny\u00e9nek v\u00e1lasz\u00e1ra (ami egy Call objektum, egy callbacket helyezt\u00fcnk el. Ezzel tudjuk kezelni a h\u00e1l\u00f3zati h\u00edv\u00e1sunk k\u00fcl\u00f6nb\u00f6z\u0151 \u00e1llapotait."},{"location":"laborok/07-android-network/#az-idojaras-felulet","title":"Az id\u0151j\u00e1r\u00e1s fel\u00fclet","text":""},{"location":"laborok/07-android-network/#komponensek","title":"Komponensek","text":"<p>Az id\u0151j\u00e1r\u00e1s k\u00e9perny\u0151n a v\u00e1ros neve, aktu\u00e1lis id\u0151j\u00e1r\u00e1s\u00e1nak jellemz\u00e9se \u00e9s egy ikon mellett a konkr\u00e9t sz\u00e1mszer\u0171 \u00e9rt\u00e9keket is ki szeretn\u00e9nk \u00edrni. Ennek a megval\u00f3s\u00edt\u00e1s\u00e1hoz hozzunk l\u00e9tre egy seg\u00e9d composable-t a <code>hu.bme.aut.android.weatherinfo.feature.weather.components</code> package-ben, ami a sz\u00f6vegek \u00e9s \u00e9rt\u00e9kek egym\u00e1s mell\u00e9 \u00edr\u00e1s\u00e1t fogja seg\u00edteni.</p> <p><code>WeatherDataText.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.weather.components\n\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Row\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.TextUnit\nimport androidx.compose.ui.unit.sp\n\n@Composable\nfun WeatherDataText(\nmodifier: Modifier = Modifier,\nlabel: String,\nvalue: String?,\ntextSize: TextUnit = TextUnit.Unspecified\n) {\nRow(\nmodifier = modifier.fillMaxWidth(),\nhorizontalArrangement = Arrangement.SpaceBetween\n) {\nText(\ntext = label,\nfontSize = textSize\n)\nText(\ntext = value ?: \"\",\nfontSize = textSize\n)\n}\n}\n\n@Composable\n@Preview(showBackground = true)\nfun WeatherDataTextPreview() {\nWeatherDataText(\nlabel = \"Temperature\",\nvalue = \"20\",\ntextSize = 16.sp\n)\n}\n</code></pre>"},{"location":"laborok/07-android-network/#a-weatherscreen-elkeszitese","title":"A WeatherScreen elk\u00e9sz\u00edt\u00e9se","text":"<p>Most m\u00e1r minden k\u00e9szen \u00e1ll ahhoz, hogy elk\u00e9sz\u00edts\u00fck az id\u0151j\u00e1r\u00e1s k\u00e9perny\u0151nket a <code>hu.bme.aut.android.weatherinfo.feature.weather</code> package-ben.</p> <p><code>WeatherScreen.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.feature.weather\n\nimport androidx.compose.foundation.layout.Box\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.size\nimport androidx.compose.material.icons.Icons\nimport androidx.compose.material.icons.automirrored.filled.ArrowBack\nimport androidx.compose.material3.CircularProgressIndicator\nimport androidx.compose.material3.ExperimentalMaterial3Api\nimport androidx.compose.material3.Icon\nimport androidx.compose.material3.IconButton\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Scaffold\nimport androidx.compose.material3.Text\nimport androidx.compose.material3.TopAppBar\nimport androidx.compose.material3.TopAppBarDefaults\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Alignment\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.layout.ContentScale\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.res.painterResource\nimport androidx.compose.ui.res.stringResource\nimport androidx.compose.ui.tooling.preview.Preview\nimport androidx.compose.ui.unit.dp\nimport androidx.compose.ui.unit.sp\nimport androidx.lifecycle.compose.collectAsStateWithLifecycle\nimport androidx.lifecycle.viewmodel.compose.viewModel\nimport coil.compose.AsyncImage\nimport coil.request.ImageRequest\nimport hu.bme.aut.android.weatherinfo.R\nimport hu.bme.aut.android.weatherinfo.feature.weather.components.WeatherDataText\nimport hu.bme.aut.android.weatherinfo.feature.weather.state.WeatherState\n\n@OptIn(ExperimentalMaterial3Api::class)\n@Composable\nfun WeatherScreen(\nweatherViewModel: WeatherViewModel = viewModel(factory = WeatherViewModel.Factory),\nonNavigateBack: () -&gt; Unit\n) {\nval state = weatherViewModel.state.collectAsStateWithLifecycle().value\n\nval cityName = weatherViewModel.cityName.collectAsStateWithLifecycle().value\n\nScaffold(\nmodifier = Modifier\n.fillMaxSize(),\ntopBar = {\nTopAppBar(\ntitle = { Text(text = stringResource(R.string.weather_in, cityName)) },\nnavigationIcon = {\nIconButton(onClick = onNavigateBack) {\nIcon(\nimageVector = Icons.AutoMirrored.Filled.ArrowBack,\ncontentDescription = \"\"\n)\n}\n},\ncolors = TopAppBarDefaults.topAppBarColors(\ncontainerColor = MaterialTheme.colorScheme.primary,\ntitleContentColor = MaterialTheme.colorScheme.onPrimary,\nnavigationIconContentColor = MaterialTheme.colorScheme.onPrimary\n)\n)\n})\n{ innerPadding -&gt;\nBox(\nmodifier = Modifier\n.fillMaxSize()\n.padding(innerPadding)\n.padding(8.dp)\n) {\nwhen (state) {\nis WeatherState.Loading -&gt; {\nCircularProgressIndicator(\ncolor = MaterialTheme.colorScheme.secondaryContainer,\nmodifier = Modifier.align(Alignment.Center)\n)\n}\n\nis WeatherState.Error -&gt; {\nText(\ntext = state.error.message.toString()\n)\n}\n\nis WeatherState.Success -&gt; {\nColumn {\nText(\ntext = state.weatherData?.weather?.get(0)?.description ?: \"\",\nfontSize = 24.sp\n)\nAsyncImage(\nmodel = ImageRequest.Builder(context = LocalContext.current)\n.data(\"https://openweathermap.org/img/w/${state.weatherData?.weather?.first()?.icon}.png\")\n.crossfade(enable = true)\n.build(),\ncontentDescription = null,\ncontentScale = ContentScale.Crop,\nplaceholder = painterResource(id = R.drawable.ic_placeholder),\nmodifier = Modifier\n.size(320.dp)\n.align(Alignment.CenterHorizontally)\n)\n\nSpacer(modifier = Modifier.size(24.dp))\n\nWeatherDataText(\nmodifier = Modifier.padding(0.dp, 8.dp, 0.dp, 8.dp),\nlabel = stringResource(id = R.string.label_temperature),\nvalue = \"${state.weatherData?.main?.temp} \\u2103\",\ntextSize = 24.sp\n)\nWeatherDataText(\nmodifier = Modifier.padding(0.dp, 8.dp, 0.dp, 8.dp),\nlabel = stringResource(id = R.string.label_min_temperature),\nvalue = \"${state.weatherData?.main?.temp_min} \\u2103\",\ntextSize = 24.sp\n)\nWeatherDataText(\nmodifier = Modifier.padding(0.dp, 8.dp, 0.dp, 8.dp),\nlabel = stringResource(id = R.string.label_max_temperature),\nvalue = \"${state.weatherData?.main?.temp_max} \\u2103\",\ntextSize = 24.sp\n)\nWeatherDataText(\nmodifier = Modifier.padding(0.dp, 8.dp, 0.dp, 8.dp),\nlabel = stringResource(id = R.string.label_pressure),\nvalue = \"${state.weatherData?.main?.pressure} hPa\",\ntextSize = 24.sp\n)\nWeatherDataText(\nmodifier = Modifier.padding(0.dp, 8.dp, 0.dp, 8.dp),\nlabel = stringResource(id = R.string.label_humidity),\nvalue = \"${state.weatherData?.main?.humidity} %\",\ntextSize = 24.sp\n)\n}\n}\n}\n}\n}\n}\n\n@Composable\n@Preview\nfun WeatherScreenPreview() {\nWeatherScreen(onNavigateBack = {})\n}\n</code></pre> <p>A fel\u00fclet\u00fcnk v\u00e1z\u00e1t egy <code>Scaffold</code> adja, amiben topBar-on ki\u00edrjuk a v\u00e1ros nev\u00e9t \u00e9s feltesz\u00fcnk egy vissza navig\u00e1ci\u00f3s ikont. Figyelj\u00fck meg, hogy hogyan \u00edrunk ki param\u00e9teres stringet az er\u0151forr\u00e1sok k\u00f6z\u00fcl.</p> <p>Az oldal tartalma pedig \u00e1llapott\u00f3l f\u00fcgg\u0151en vagy egy <code>CircularProgressIndicator</code>, vagy egy hiba sz\u00f6veg, vagy pedig az adott v\u00e1ros id\u0151j\u00e1r\u00e1s\u00e1nak adatai. </p> <p>Figyelj\u00fck meg, hogy hogyan haszn\u00e1ljuk a k\u00f3dban a Coil library AsyncImage f\u00fcggv\u00e9ny\u00e9t a weben tal\u00e1lhat\u00f3 k\u00e9p megjelen\u00edt\u00e9s\u00e9re!</p>"},{"location":"laborok/07-android-network/#bekotes-a-navigacioba","title":"Bek\u00f6t\u00e9s a navig\u00e1ci\u00f3ba","text":"<p>Eg\u00e9sz\u00edts\u00fck ki a <code>Screen</code> oszt\u00e1lyunkat az \u00faj k\u00e9perny\u0151vel.</p> <p><code>Screen.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.navigation\n\nsealed class Screen(val route: String) {\nobject CityListScreen : Screen(route = \"city_list\")\n\nobject WeatherScreen : Screen(route = \"weather/{${Args.cityName}}\") {\nfun passCityName(cityName: String) = \"weather/$cityName\"\n\nobject Args {\nconst val cityName = \"cityName\"\n}\n}\n}\n</code></pre> <p>Figyelj\u00fck meg, hogy hogyan val\u00f3s\u00edtjuk meg azt, hogy a <code>WeatherScreen</code>-nek param\u00e9ter\u00fcl \u00e1t lehessen adni a v\u00e1rosnevet.</p> <p>Ezek ut\u00e1n a friss\u00edtett <code>NavGraph</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.navigation\n\nimport androidx.compose.runtime.Composable\nimport androidx.compose.ui.Modifier\nimport androidx.navigation.NavHostController\nimport androidx.navigation.NavType\nimport androidx.navigation.compose.NavHost\nimport androidx.navigation.compose.composable\nimport androidx.navigation.compose.rememberNavController\nimport androidx.navigation.navArgument\nimport hu.bme.aut.android.weatherinfo.feature.citylist.CityListScreen\nimport hu.bme.aut.android.weatherinfo.feature.weather.WeatherScreen\n\n@Composable\nfun NavGraph(\nmodifier: Modifier = Modifier,\nnavController: NavHostController = rememberNavController(),\nstartDestination: String = Screen.CityListScreen.route\n) {\n\nNavHost(\nnavController = navController,\nstartDestination = startDestination,\nmodifier = modifier\n) {\n\ncomposable(Screen.CityListScreen.route) {\nCityListScreen(\nonCityClick = { navController.navigate(Screen.WeatherScreen.passCityName(cityName = it)) }\n)\n}\ncomposable(\nScreen.WeatherScreen.route,\narguments = listOf(navArgument(Screen.WeatherScreen.Args.cityName) {\ndefaultValue = \"Budapest\"\ntype = NavType.StringType\n})\n) {\nWeatherScreen(onNavigateBack = { navController.popBackStack() })\n}\n}\n}\n</code></pre> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!</p> <p>Az id\u0151j\u00e1r\u00e1s k\u00e9perny\u0151nk megjelenik, ott van a felirat a fejl\u00e9cen, de a val\u00f3s adatok nem l\u00e1that\u00f3ak, hiszen a repository-nk mindig egy null adattal t\u00e9r vissza. Ez\u00e9rt csak a t\u00f6lt\u0151 k\u00e9perny\u0151t l\u00e1tjuk.</p> <p>Info</p> <p>Ha meg akarjuk n\u00e9zni a <code>WeatherScreen</code>-t teljes eg\u00e9sz\u00e9ben, \u00edrjuk \u00e1t a getWeather f\u00fcggv\u00e9ny elej\u00e9n az \u00e1llapotot Loading-r\u00f3l Success-re.</p> <pre><code> viewModelScope.launch {\n_state.value = WeatherState.Success(null)\ntry {\n...\n</code></pre> <p>BEADAND\u00d3 (2 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az id\u0151j\u00e1r\u00e1s n\u00e9zet a megfelel\u0151 fejl\u00e9ccel (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a WeatherScreen k\u00f3dja, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f2.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/07-android-network/#a-halozati-kommunikacio-elkeszitese-1-pont","title":"A H\u00e1l\u00f3zati kommunik\u00e1ci\u00f3 elk\u00e9sz\u00edt\u00e9se (1 pont)","text":""},{"location":"laborok/07-android-network/#a-weatherapi-megvalositasa","title":"A WeatherAPI megval\u00f3s\u00edt\u00e1sa","text":"<p>A h\u00e1l\u00f3zati k\u00e9r\u00e9sek v\u00e9grahajt\u00e1s\u00e1hoz a <code>Retrofit</code> k\u00fcls\u0151 k\u00f6nyvt\u00e1rat fogjuk haszn\u00e1lni. Ennek a f\u00fcgg\u0151s\u00e9geit m\u00e1r a labor elej\u00e9n felvett\u00fck a megfelel\u0151 helyre, most m\u00e1r csak alkalmazni fogjuk a k\u00f6nyvt\u00e1r funkci\u00f3it.</p> <p>Hozzunk l\u00e9tre a <code>hu.bme.aut.android.weatherinfo.data.network</code> csomagban egy <code>WeatherApi</code> Kotlin f\u00e1jlt.</p> <p><code>WeatherApi.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.network\n\nimport hu.bme.aut.android.weatherinfo.data.network.model.WeatherData\nimport retrofit2.Call\nimport retrofit2.http.GET\nimport retrofit2.http.Query\n\ninterface WeatherApi {\n@GET(\"/data/2.5/weather\")\nfun getWeather(\n@Query(\"q\") cityName: String?,\n@Query(\"units\") units: String?,\n@Query(\"appid\") appId: String?\n): Call&lt;WeatherData?&gt;?\n}\n</code></pre> <p>L\u00e1that\u00f3, hogy a Retrofit-ben annot\u00e1ci\u00f3k alkalmaz\u00e1s\u00e1val tuduk jelezni, hogy az adott f\u00fcggv\u00e9nyh\u00edv\u00e1s milyen h\u00e1l\u00f3zati h\u00edv\u00e1snak fog megfelelni. A <code>@GET</code> annot\u00e1ci\u00f3 HTTP GET k\u00e9r\u00e9st jelent, a param\u00e9terk\u00e9nt adott string pedig azt jelzi, hogy hogy a szerver alap URL-\u00e9hez k\u00e9pest melyik v\u00e9gpontra szeretn\u00e9nk k\u00fcldeni a k\u00e9r\u00e9st.</p> <p>Hasonl\u00f3 m\u00f3don tudjuk le\u00edrni a t\u00f6bbi HTTP k\u00e9r\u00e9s t\u00edpust is: @POST, @UPDATE, @PATCH, @DELETE</p> <p>A f\u00fcggv\u00e9ny parem\u00e9tereit a @Query annot\u00e1ci\u00f3val l\u00e1ttuk el. Ez azt jelenti, hogy a Retrofit az adott param\u00e9ter \u00e9rt\u00e9k\u00e9t a k\u00e9r\u00e9shez f\u0171zi query param\u00e9terk\u00e9nt, az annot\u00e1ci\u00f3ban megadott kulccsal.</p> <p>Tov\u00e1bbi eml\u00edt\u00e9sre m\u00e9lt\u00f3 annot\u00e1ci\u00f3k a teljess\u00e9g ig\u00e9nye n\u00e9lk\u00fcl: @HEAD, @Multipart, @Field</p>"},{"location":"laborok/07-android-network/#a-retrofitweatherrepository-frissitese","title":"A RetrofitWeatherRepository friss\u00edt\u00e9se","text":"<p>Most m\u00e1r k\u00e9szen \u00e1ll az interface-\u00fcnk arra, hogy h\u00e1l\u00f3zati h\u00edv\u00e1sokat v\u00e9gezz\u00fcnk rajta kereszt\u00fcl. Cser\u00e9lj\u00fck teh\u00e1t le a <code>RetrofitWeatherRepository</code> getWeather f\u00fcggv\u00e9ny\u00e9ben visszaadott null \u00e9rt\u00e9ket az igazi megval\u00f3s\u00edt\u00e1sra.</p> <p><code>RetrofitWeatherRepository.kt</code>:</p> <pre><code>package hu.bme.aut.android.weatherinfo.data.network.repository\n\nimport com.squareup.moshi.Moshi\nimport com.squareup.moshi.kotlin.reflect.KotlinJsonAdapterFactory\nimport hu.bme.aut.android.weatherinfo.data.network.WeatherApi\nimport hu.bme.aut.android.weatherinfo.data.network.model.WeatherData\nimport okhttp3.OkHttpClient\nimport retrofit2.Call\nimport retrofit2.Retrofit\nimport retrofit2.converter.moshi.MoshiConverterFactory\n\nclass RetrofitWeatherRepository : IWeatherRepository {\nprivate val retrofit: Retrofit\nprivate val weatherApi: WeatherApi\n\ncompanion object {\nprivate const val SERVICE_URL = \"https://api.openweathermap.org\"\nprivate const val APP_ID = \"APP_ID\"\n}\n\ninit {\nval moshi = Moshi.Builder().addLast(KotlinJsonAdapterFactory()).build()\nretrofit = Retrofit.Builder()\n.baseUrl(SERVICE_URL)\n.client(OkHttpClient.Builder().build())\n.addConverterFactory(MoshiConverterFactory.create(moshi))\n.build()\nweatherApi = retrofit.create(WeatherApi::class.java)\n}\n\noverride suspend fun getWeather(city: String?): Call&lt;WeatherData?&gt;? {\nreturn weatherApi.getWeather(city, \"metric\", APP_ID)\n}\n}\n</code></pre> <p>Ez az oszt\u00e1ly lesz felel\u0151s a h\u00e1l\u00f3zati k\u00e9r\u00e9sek lebonyol\u00edt\u00e1s\u00e1\u00e9rt. </p> <p>A <code>Retrofit.Builder()</code> h\u00edv\u00e1ssal k\u00e9rhet\u00fcnk egy parem\u00e9terezhet\u0151 <code>Builder</code> p\u00e9ld\u00e1nyt. Ebben adhatjuk meg a h\u00e1l\u00f3zati h\u00edv\u00e1saink tulajdons\u00e1gait. Jelen p\u00e9ld\u00e1ban be\u00e1ll\u00edtjuk az el\u00e9rni k\u00edv\u00e1nt szolg\u00e1ltat\u00e1s c\u00edm\u00e9t, a HTTP kliens implement\u00e1ci\u00f3t (OkHttp), valamint a JSON \u00e9s objektum reprezent\u00e1ci\u00f3k k\u00f6z\u00f6tti konvertert (Moshi).</p> <p>A <code>WeatherApi</code> interf\u00e9szb\u0151l a <code>Builder</code>-rel l\u00e9trehozott <code>Retrofit</code> p\u00e9ld\u00e1ny seg\u00edts\u00e9g\u00e9vel tudjuk elk\u00e9rni a ford\u00edt\u00e1si id\u0151ben gener\u00e1lt, param\u00e9terezett implement\u00e1ci\u00f3t.</p> <p>A <code>retrofit.create(WeatherApi.class)</code> h\u00edv\u00e1s eredm\u00e9nyek\u00e9nt kapott objektum megval\u00f3s\u00edtja a <code>WeatherApi</code> interf\u00e9szt.  Ha ezen az objektumon megh\u00edvjuk a <code>getWeather(...)</code> f\u00fcggv\u00e9nyt, akkor megt\u00f6rt\u00e9nik az \u00e1ltalunk az interf\u00e9szben defini\u00e1lt h\u00e1l\u00f3zati h\u00edv\u00e1s. </p> <p>Cser\u00e9lj\u00fck le az <code>APP_ID</code> \u00e9rt\u00e9k\u00e9t az OpenWeatherMap oldalon kapott saj\u00e1t API kulcsunkra!</p> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st!</p> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az emul\u00e1toron egy v\u00e1ros id\u0151j\u00e1r\u00e1sa (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a RetrofitWeatherRepository k\u00f3dja, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f3.png n\u00e9ven t\u00f6ltsd f\u00f6l! </p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/07-android-network/#onallo-feladat-varos-listabol-torles-megvalositasa-1-pont","title":"\u00d6n\u00e1ll\u00f3 feladat: v\u00e1ros list\u00e1b\u00f3l t\u00f6rl\u00e9s megval\u00f3s\u00edt\u00e1sa (1 pont)","text":"<p>Val\u00f3s\u00edtsuk meg a v\u00e1rosok t\u00f6rl\u00e9s\u00e9t az elemek balra elh\u00faz\u00e1s\u00e1nak hat\u00e1s\u00e1ra.</p> A megval\u00f3s\u00edt\u00e1s l\u00e9p\u00e9sei <ul> <li>t\u00f6rl\u00e9s f\u00fcggv\u00e9ny a repository interface-be</li> <li>t\u00f6rl\u00e9s f\u00fcggv\u00e9ny a repository-ba</li> <li>t\u00f6rl\u00e9s f\u00fcggv\u00e9ny a viewmodel-be</li> <li>t\u00f6rl\u00e9s esem\u00e9nykezel\u0151 a CityListScreen-be</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amelyen l\u00e1tszik az emul\u00e1toron a v\u00e1rosok list\u00e1ja CSAK Budapesttel (emul\u00e1toron, k\u00e9sz\u00fcl\u00e9ket t\u00fckr\u00f6zve vagy k\u00e9perny\u0151felv\u00e9tellel), a t\u00f6rl\u00e9s relev\u00e1ns k\u00f3dr\u00e9szlete, valamint a neptun k\u00f3dod a k\u00f3dban valahol kommentk\u00e9nt! A k\u00e9pet a megold\u00e1sban a repository-ba f4.png n\u00e9ven t\u00f6ltsd f\u00f6l!</p> <p>A k\u00e9perny\u0151k\u00e9p sz\u00fcks\u00e9ges felt\u00e9tele a pontsz\u00e1m megszerz\u00e9s\u00e9nek.</p>"},{"location":"laborok/08-http/","title":"Labor 08 - HTTP, HTML","text":""},{"location":"laborok/08-http/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A labor sor\u00e1n laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an k\u00e9sz\u00edtesz el feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben.</p> <p>A labor c\u00e9lja, a b\u00f6ng\u00e9sz\u0151 fejleszt\u0151i eszk\u00f6zeinek (dev toolbar) megismer\u00e9se, a HTTP k\u00e9r\u00e9sek \u00e9s v\u00e1laszok vizsg\u00e1lata, valamint HTML oldalak k\u00e9sz\u00edt\u00e9s\u00e9nek gyakorl\u00e1sa.</p>"},{"location":"laborok/08-http/#felev-soran-hasznalt-eszkozok","title":"F\u00e9l\u00e9v sor\u00e1n haszn\u00e1lt eszk\u00f6z\u00f6k","text":"<ul> <li>Webb\u00f6ng\u00e9sz\u0151 (Chrome, Edge vagy Firefox) \u00e9s a be\u00e9p\u00edtett hibakeres\u0151 eszk\u00f6zei,</li> <li>Visual Studio Code k\u00f3dszerkeszt\u0151 alkalmaz\u00e1s,<ul> <li>otthoni vagy egy\u00e9ni munkav\u00e9gz\u00e9shez haszn\u00e1lhat\u00f3 b\u00e1rmilyen m\u00e1s k\u00f3dszerkeszt\u0151 vagy fejleszt\u0151k\u00f6rnyezet, de a laborokban a VS Code-ot haszn\u00e1ljuk.</li> <li>A laborban el\u0151re telep\u00edt\u00e9sre ker\u00fcltek az al\u00e1bbi kieg\u00e9sz\u00edt\u0151k a VS Code-hoz,<ul> <li>C# - C# \u00e9s .NET Core t\u00e1mogat\u00e1s.</li> <li>Live Server - egy nagyon egyszer\u0171, fejleszt\u00e9si c\u00e9lra sz\u00e1nt HTTP kiszolg\u00e1l\u00f3.</li> <li>Live Saas Compiler - SCSS f\u00e1jlokb\u00f3l CSS-t tud gener\u00e1lni.</li> <li>ESLint - Statikus k\u00f3delemz\u0151 JS-hez.</li> <li>IntelliSense for Css class names in HTML - CSS oszt\u00e1ly nevekhez automatikus kieg\u00e9sz\u00edt\u00e9s.</li> </ul> </li> </ul> </li> <li>npm, a NodeJS csomagkezel\u0151je,<ul> <li>Az npm parancs futtat\u00e1s\u00e1hoz telep\u00edtett NodeJS-re is sz\u00fcks\u00e9g van.</li> </ul> </li> </ul>"},{"location":"laborok/08-http/#elokeszulet","title":"El\u0151k\u00e9sz\u00fclet","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t GitHub.</p>"},{"location":"laborok/08-http/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</li> <li>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.<ul> <li>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</li> </ul> </li> <li>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</li> <li>A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</li> </ol>"},{"location":"laborok/08-http/#bongeszo-hibakereso-eszkozei","title":"B\u00f6ng\u00e9sz\u0151 hibakeres\u0151 eszk\u00f6zei","text":"<p>Weboldalak k\u00e9sz\u00edt\u00e9sekor sz\u00fcks\u00e9g lehet a HTTP forgalom megvizsg\u00e1l\u00e1s\u00e1ra, viszont az esetek jelent\u0151s r\u00e9sz\u00e9ben elegend\u0151 lehet, ha a b\u00f6ng\u00e9sz\u0151 forgalm\u00e1t meg tudjuk vizsg\u00e1lni. A mai b\u00f6ng\u00e9sz\u0151k mindegyike tartalmaz eszk\u00f6z\u00f6ket, amellyel a weboldalak hibakeres\u00e9se nagyon egyszer\u0171en kezelhet\u0151v\u00e9 v\u00e1lik.</p> <p>Nyissuk meg a laborvezet\u0151 \u00e1ltal kijel\u00f6lt b\u00f6ng\u00e9sz\u0151ben a https://www.bme.hu oldalt, majd nyissuk meg a Developer tools n\u00e9zet\u00e9t az F12 billenty\u0171vel.</p> <p>Vizsg\u00e1ljuk meg, mit k\u00edn\u00e1lnak az egyes b\u00f6ng\u00e9sz\u0151kbe \u00e9p\u00edtett hibakeres\u0151 eszk\u00f6z\u00f6k!</p> <p> </p> BME AUT kezd\u0151lapja - Chrome Dev Toolbars Tov\u00e1bbi b\u00f6ng\u00e9sz\u0151kben tal\u00e1lhat\u00f3 Dev Toolbarok <p> BME AUT kezd\u0151lapja - Edge Dev Toolbars </p> <p> BME AUT kezd\u0151lapja - FireFox Dev Toolbars </p> <p>A Chrome, Edge \u00e9s Firefox b\u00f6ng\u00e9sz\u0151k eszk\u00f6zk\u00e9szlete kisebb elt\u00e9r\u00e9sekt\u0151l eltekintve megegyezik, a leggyakoribb funkci\u00f3k az al\u00e1bbiak:</p> <ul> <li>A dokkol\u00e1s m\u00f3dja megadhat\u00f3: az ablak als\u00f3 r\u00e9sz\u00e9re vagy oldal\u00e1ra is (Chrome, Firefox) dokkolhat\u00f3 az eszk\u00f6zt\u00e1r, ill. kivehet\u0151 a saj\u00e1t ablak\u00e1ba.</li> <li>DOM vizsg\u00e1lata (DOM Explorer, Elements, Inspector): a dokumentumfa fel\u00e9p\u00edt\u00e9s\u00e9t tudjuk megvizsg\u00e1lni, l\u00e1that\u00f3 a kirajzolt HTML tartalom. Lehet\u0151s\u00e9g\u00fcnk van szerkeszteni az elemeket, besz\u00farni attrib\u00fatumokat, elemeket, t\u00f6r\u00f6lni \u0151ket. Kiv\u00e1laszthat\u00f3 egy DOM elem eg\u00e9rrel a kirajzolt oldalon vagy a sz\u00f6veges megjelen\u00edt\u0151ben is. Egy elemet kiv\u00e1lasztva jobb oldalon az elemre illeszked\u0151 st\u00edluslap-szab\u00e1lyok (CSS) l\u00e1that\u00f3k, ezek is szerkeszthet\u0151k. CSS k\u00e9sz\u00edt\u00e9sekor egy nagyon hasznos eszk\u00f6z.</li> <li>JavaScript konzol (Console): a JavaScript standard outputja a konzol, az alkalmaz\u00e1sok \u00e1ltal \u00edrt tartalmak itt l\u00e1that\u00f3k. Lehet\u0151s\u00e9g\u00fcnk van k\u00f3d futtat\u00e1s\u00e1ra is a konzol ablakban, ami azonnal ki\u00e9rt\u00e9kel\u0151dik.</li> <li>Forr\u00e1sok (Sources): Itt l\u00e1that\u00f3, hogy a teljes weboldal bet\u00f6lt\u00e9s\u00e9hez honnan \u00e9s mit t\u00f6lt\u00f6tt le a b\u00f6ng\u00e9sz\u0151. Ha itt kiv\u00e1lasztunk egy JS f\u00e1jlt, akkor annak a teljes k\u00f3dj\u00e1t l\u00e1thatjuk, s\u0151t t\u00f6r\u00e9spontokat is tehet\u00fcnk bele, \u00edgy lehet\u0151v\u00e9 t\u00e9ve a JS f\u00e1jlok debuggol\u00e1s\u00e1t.</li> <li>H\u00e1l\u00f3zat (Network): itt l\u00e1thatjuk a kimen\u0151 k\u00e9r\u00e9seket \u00e9s a r\u00e1juk \u00e9rkez\u0151 v\u00e1laszokat. El\u0151nye, hogy csak a konkr\u00e9t oldalhoz tartozik, nem a teljes b\u00f6ng\u00e9sz\u0151h\u00f6z, \u00edgy k\u00f6nnyebb lesz\u0171rn\u00fcnk, melyik k\u00e9r\u00e9sek tartoznak melyik alkalmaz\u00e1shoz/oldalhoz. L\u00e1that\u00f3k a pontos id\u0151z\u00edt\u00e9sek is, HTTP k\u00e9r\u00e9sek ind\u00edt\u00e1s\u00e1t viszont nem lehets\u00e9ges k\u00e9zzel megejten\u00fcnk a be\u00e9p\u00edtett lehet\u0151s\u00e9gekkel.</li> <li>Teljes\u00edtm\u00e9nym\u00e9r\u0151k (Performance): k\u00fcl\u00f6nb\u00f6z\u0151 teljes\u00edtm\u00e9nym\u00e9r\u0151 eszk\u00f6z\u00f6k \u00e1llnak rendelkez\u00e9s\u00fcnkre a weboldalak elemz\u00e9s\u00e9hez, amik jellemz\u0151en a mem\u00f3ria- \u00e9s processzorhaszn\u00e1latot m\u00e9rik.</li> <li>Alkalmaz\u00e1s (Application): az alkalmaz\u00e1s \u00e1ltal a k\u00fcl\u00f6nb\u00f6z\u0151 t\u00e1rol\u00f3kban - Local Storage, Session Storage, Cookies, ... - t\u00e1rolt kulcs-\u00e9rt\u00e9k p\u00e1rokat tudjuk megtekinteni.</li> </ul> <p>Az eszk\u00f6z\u00f6k legal\u00e1bb alapszint\u0171 ismerete (els\u0151sorban a DOM Explorer, Console \u00e9s Network haszn\u00e1lata) a laborokon elengedhetetlen.</p>"},{"location":"laborok/08-http/#1-feladat","title":"1. Feladat","text":""},{"location":"laborok/08-http/#http-keresek","title":"HTTP k\u00e9r\u00e9sek","text":"<p>A h\u00e1l\u00f3zati k\u00e9r\u00e9seket csak akkor r\u00f6gz\u00edti a Network f\u00fcl, ha a Dev Toolbart kor\u00e1bban nyitjuk meg, minthogy az oldalt bet\u00f6lten\u00e9nk. Az al\u00e1bbi \u00e1br\u00e1n l\u00e1that\u00f3, hogy milyen funkci\u00f3kat \u00e9s be\u00e1ll\u00edt\u00e1sokat rejt a h\u00e1l\u00f3zat f\u00fcl.</p> <p> </p> Network tab <p>Disable cache: bekapcsol\u00e1sa nagyon fontos JS \u00e9s HTML k\u00f3d debuggol\u00e1sa sor\u00e1n, ugyanis a b\u00f6ng\u00e9sz\u0151k el\u00e9g agressz\u00edvan gyors\u00edtot\u00e1razz\u00e1k ezeket a k\u00e9r\u00e9seket. Fontos azonban tudni, hogy a gyors\u00edt\u00f3t\u00e1r csak addig van letiltva am\u00edg a Dev Toolban meg van nyitva \u00e9s csak arra az egy oldalra (f\u00fclre) vonatkozik.</p> <p>Preserve log: bekapcsol\u00e1s\u00e1val lehet\u0151s\u00e9g\u00fcnk van a logok meg\u0151rz\u00e9s\u00e9re navig\u00e1ci\u00f3kor is. Azonban ezt a pip\u00e1t \u00f3vatosan haszn\u00e1ljuk, mert a sok log nagyon be tudja lass\u00edtani a b\u00f6ng\u00e9sz\u0151t.</p>"},{"location":"laborok/08-http/#kozos-feladat","title":"K\u00f6z\u00f6s feladat","text":"<ol> <li>Nyissuk meg a b\u00f6ng\u00e9sz\u0151ben a https://www.aut.bme.hu oldalt \u00fagy, hogy a Dev Toolbar Network f\u00fcle m\u00e1r meg van nyitva.</li> <li>Keress\u00fck meg \u00e9s kattintsunk arra a k\u00e9r\u00e9sre, amiben a HTML tartalom let\u00f6lt\u0151dik.</li> <li> <p>A megjelen\u0151 ablakban l\u00e1that\u00f3k a HTTP k\u00e9r\u00e9s fejl\u00e9cei</p> <ul> <li>General: A legfontosabb adatokat l\u00e1thatjuk itt a k\u00e9r\u00e9sr\u0151l \u00e9s a v\u00e1laszr\u00f3l.<ul> <li>Request URL: https://www.aut.bme.hu/ </li> <li>HTTP Method: GET</li> <li>Status Code: 200</li> </ul> </li> <li>Response Headers: Itt tal\u00e1ljuk a HTTP v\u00e1lasz fejl\u00e9ceit. Alap\u00e9rtelmez\u00e9s szerint egy feldolgozott form\u00e1ban l\u00e1tjuk az adatokat, viszont a View Source gombra kattintva meg tudjuk n\u00e9zni a nyers adatokat is.</li> <li>Request Headers: Itt tal\u00e1ljuk a HTTP k\u00e9r\u00e9s fejl\u00e9c mez\u0151it. Alap\u00e9rtelmez\u00e9s szerint egy feldolgozott form\u00e1ban l\u00e1tjuk az adatokat, viszont a View Source gombra kattintva meg tudjuk n\u00e9zni a nyers adatokat is.</li> </ul> <p> HTTP k\u00e9r\u00e9s-v\u00e1laszok fejl\u00e9cei </p> Hogyan m\u00e1soljuk ki egy k\u00e9r\u00e9shez tartoz\u00f3 fejl\u00e9c adatokat <p>A k\u00e9r\u00e9sen kattints jobb eg\u00e9rgombbal majd ott v\u00e1laszd a Copy men\u00fcpontb\u00f3l, hogy mit szeretn\u00e9nk m\u00e1solni.  HTTP k\u00e9r\u00e9s-v\u00e1laszok fejl\u00e9cek m\u00e1sol\u00e1sa </p> </li> <li> <p>N\u00e9zz\u00fck meg, hogy milyen HTTP k\u00e9r\u00e9s ment ki az oldal let\u00f6lt\u00e9s\u00e9hez.     <pre><code>GET / HTTP/1.1\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9\nAccept-Encoding: gzip, deflate, br\nAccept-Language: hu-HU,hu;q=0.9,en-US;q=0.8,en;q=0.7\nHost: www.aut.bme.hu\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\n</code></pre></p> </li> <li>N\u00e9zz\u00fck meg a k\u00e9r\u00e9sre kapott v\u00e1laszt.     <pre><code>HTTP/1.1 200 OK\nCache-Control: no-cache, no-store\nPragma: no-cache\nContent-Type: text/html; charset=utf-8\nContent-Encoding: gzip\nExpires: -1\nVary: Accept-Encoding\nServer: Microsoft-IIS/8.0\nX-AspNet-Version: 4.0.30319\nX-Powered-By: ASP.NET\nX-Frame-Options: deny\nDate: Mon, 03 Oct 2022 05:54:57 GMT\nContent-Length: 11344\n</code></pre></li> </ol> <p>Info</p> <p>Ha m\u00e9g nem tetted volna meg, nyisd meg a GitHub Classroom lekl\u00f3nozott beadand\u00f3j\u00e1nak repositoryj\u00e1t, aminek gy\u00f6k\u00e9r k\u00f6nyvt\u00e1r\u00e1t nyisd meg a VS Code szerkeszt\u0151ben! A <code>index.html</code> f\u00e1jlban dolgozzunk \u00e9s a <code>megoldas</code> \u00e1gra pusholjunk.</p>"},{"location":"laborok/08-http/#onallo-feladat-beadando","title":"\u00d6n\u00e1ll\u00f3 feladat beadand\u00f3","text":"<p>1. feladat beadand\u00f3 (0.5 pont)</p> <ul> <li>Nyisd meg a b\u00f6ng\u00e9sz\u0151ben a http://www.aut.bme.hu oldalt. HTTP k\u00e9r\u00e9s nem HTTPS</li> <li>Keresd meg az azt a k\u00e9r\u00e9st, ami a http://www.aut.bme.hu -ra \u00e9rkezett \u00e9s vizsg\u00e1ld meg a kapott HTTP v\u00e1laszt.</li> <li>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet a Dev Toolbar Network f\u00fcl\u00e9r\u0151l ahol l\u00e1tsz\u00f3dnak a k\u00e9r\u00e9s fejl\u00e9cei. (General, Request Headers, Response Headers)</li> <li>A k\u00e9sz\u00edtett k\u00e9perny\u0151k\u00e9pet m\u00e1sold be <code>f1.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be!</li> </ul>"},{"location":"laborok/08-http/#2-feladat","title":"2. Feladat","text":""},{"location":"laborok/08-http/#postman","title":"Postman","text":"<p>Postman seg\u00edts\u00e9g\u00e9vel egyszer\u0171en tudunk HTTP k\u00e9r\u00e9seket ind\u00edtani \u00e9s a kapott v\u00e1laszokat vizsg\u00e1lni. Leggyakrabban akkor haszn\u00e1ljuk ha egy REST API-t kell kipr\u00f3b\u00e1lni vagy tesztelni.</p> <p>Webes \u00e9s desktopos verzi\u00f3 is l\u00e9tezik bel\u0151le.</p> <ul> <li>A webes fel\u00fclet regisztr\u00e1ci\u00f3 ut\u00e1n haszn\u00e1lhat\u00f3 a https://www.postman.com/ oldalon.</li> <li>Az asztali verzi\u00f3t a https://www.postman.com/downloads/ oldalr\u00f3l lehet let\u00f6lteni.</li> </ul> <p>A labor g\u00e9pekre az asztali verzi\u00f3 fel van telep\u00edtve, \u00edgy azt fogjuk haszn\u00e1lni. Ahhoz, hogy ne kelljen szerver oldali k\u00f3dot k\u00e9sz\u00edteni egy tesztel\u00e9sre kiadott REST API-t haszn\u00e1lunk melynek le\u00edr\u00e1sa a https://petstore.swagger.io/ oldalon \u00e9rhet\u0151 el. A legfontosabb v\u00e9gpontok az al\u00e1bbi swagger \u00e1br\u00e1n is l\u00e1that\u00f3.</p> <p> </p> PetStore REST API"},{"location":"laborok/08-http/#kereses-statusz-alapjan","title":"Keres\u00e9s st\u00e1tusz alapj\u00e1n","text":"<ol> <li>Ind\u00edtsuk el a Postmant.</li> <li>Bal oldalon hozzunk l\u00e9tre egy \u00faj kateg\u00f3ri\u00e1t \u00e9s nevezz\u00fck \u00e1t MobWeb-re.</li> <li>\u00c1ll\u00edtsunk \u00f6ssze egy k\u00e9r\u00e9st, ami st\u00e1tusz alapj\u00e1n k\u00e9rdez le kuty\u00e1kat. A le\u00edr\u00e1sa a swagger oldalon tal\u00e1lhat\u00f3. (Ak\u00e1r onnan is ki lehet pr\u00f3b\u00e1lni.)<ul> <li>Method: GET</li> <li>URL: https://petstore.swagger.io/v2/pet/findByStatus</li> <li>Query param\u00e9tert a Params f\u00fcl\u00f6n tudunk felvenni (vagy be\u00edrhatjuk az URL-be is)<ul> <li>Key: status</li> <li>Value: sold</li> </ul> </li> </ul> </li> <li>K\u00fcldj\u00fck el a k\u00e9r\u00e9st a Send gombra kattintva \u00e9s ellen\u0151rizz\u00fck a visszakapott adatokat.</li> <li>Ments\u00fck el a jobb fels\u0151 sarokban l\u00e9v\u0151 Save gombbal a MobWeb kateg\u00f3ri\u00e1ba.</li> </ol> Postman - Filter k\u00e9r\u00e9s \u00f6ssze\u00e1ll\u00edt\u00e1sa"},{"location":"laborok/08-http/#uj-elem-letrehozasa","title":"\u00daj elem l\u00e9trehoz\u00e1sa","text":"<ol> <li>\u00c1ll\u00edtsunk \u00f6ssze egy \u00faj k\u00e9r\u00e9st, ami egy kuty\u00e1t hoz l\u00e9tre. Ehhez a /pet URL-re kell egy POST k\u00e9r\u00e9st k\u00fcldeni a Body -ban megadva azt a JSON-t amivel l\u00e9tre kell hozni a kuty\u00e1t. A pontos le\u00edr\u00e1s a swagger oldalon \u00e9rhet\u0151 el.<ul> <li>Method: POST</li> <li>URL: https://petstore.swagger.io/v2/pet</li> </ul> </li> <li>V\u00e1lasszuk ki a Body f\u00fclet, ott a raw opci\u00f3t \u00e9s adjuk meg hogy JSON adat lesz a bodyban.</li> <li>A body-t az al\u00e1bbiak szerint \u00e1ll\u00edtsd \u00f6ssze. A kutya neve legyen a neptunk\u00f3dod.     <pre><code>{\n\"id\": 0,\n\"name\": \"Z2I8RG\",\n\"status\": \"available\"\n}\n</code></pre></li> <li>Ha minden j\u00f3l megy a v\u00e1laszban visszakapjuk a l\u00e9trehozott kuty\u00e1t, amib\u0151l az ID lesz sz\u00e1munkra fontos     <pre><code>{\n\"id\": 9223372036854248826,\n\"name\": \"Z2I8RG\",\n\"photoUrls\": [],\n\"tags\": [],\n\"status\": \"available\"\n}\n</code></pre></li> </ol>"},{"location":"laborok/08-http/#kozos-feladat-beadando","title":"K\u00f6z\u00f6s feladat beadand\u00f3","text":"<p>2. a) Feladat beadand\u00f3 (0.5 pont)</p> <ul> <li>A kutya l\u00e9trehoz\u00e1s\u00e1hoz \u00f6ssze\u00e1ll\u00edtott k\u00e9r\u00e9s sikeres lefuttat\u00e1s\u00e1r\u00f3l k\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet.</li> <li>A k\u00e9perny\u0151k\u00e9pet m\u00e1sold be <code>f2a.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be! </li> </ul>"},{"location":"laborok/08-http/#onallo-feladat-beadando_1","title":"\u00d6n\u00e1ll\u00f3 feladat beadand\u00f3","text":"<ol> <li>K\u00e9sz\u00edts egy \u00faj k\u00e9r\u00e9st, ami m\u00f3dos\u00edtja a k\u00f6z\u00f6sen l\u00e9trehozott azonos\u00edt\u00f3j\u00fa kutya \u00e1llapot\u00e1t (<code>status</code>) <code>sold</code>-ra.</li> <li>K\u00e9sz\u00edts egy \u00faj k\u00e9r\u00e9st, ami t\u00f6rli a kor\u00e1bban m\u00f3dos\u00edtott kuty\u00e1t.</li> </ol> <p>2. b) \u00d6n\u00e1ll\u00f3 feladat beadand\u00f3 (1 pont)</p> <ul> <li>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet a sikeresen lefuttatott m\u00f3dos\u00edt\u00e1sr\u00f3l \u00e9s t\u00f6rl\u00e9sr\u0151l.</li> <li>A k\u00e9perny\u0151k\u00e9peket m\u00e1sold be <code>f2b.png</code> \u00e9s <code>f2c.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be! </li> </ul>"},{"location":"laborok/08-http/#3-feladat","title":"3. Feladat","text":""},{"location":"laborok/08-http/#html-alapok","title":"HTML alapok","text":"<p>A HTML (HyperText Markup Language) a web nyelve. A b\u00f6ng\u00e9sz\u0151k els\u0151sorban HTTP-n kereszt\u00fcl eljuttatott HTML tartalom  kirajzol\u00e1s\u00e1\u00e9rt \u00e9s feldolgoz\u00e1s\u00e1\u00e9rt felel\u0151sek.</p> <p>A HTML egy XML-szer\u0171 nyelv, amelyben elemek (tag) \u00edrj\u00e1k le a dokumentumunkat. Az egyes elemeknek lehetnek tulajdons\u00e1gai, amiket attrib\u00fatumoknak (attribute) nevez\u00fcnk. Az attrib\u00fatum \u00e9rt\u00e9ke leggyakrabban sz\u00e1m, sz\u00f6veg, korl\u00e1tozott \u00e9rt\u00e9kk\u00e9szlet\u0171 sz\u00f6veg (enumer\u00e1ci\u00f3), ritk\u00e1bban felsorol\u00e1s vagy objektum lehet. A HTML-ben bizonyos szab\u00e1lyrendszernek kell eleget tenn\u00fcnk: megk\u00f6t\u00e9sek vonatkoznak arra, hogy milyen jelleg\u0171 elemeket milyen m\u00e1s elemekben helyezhet\u00fcnk el.</p> <p>A k\u00f3d k\u00f6nnyen \u00e9rtelmezhet\u0151, az egyes elemek nyit\u00f3 \u00e9s z\u00e1r\u00f3 tag-je k\u00f6z\u00f6tt tal\u00e1lhat\u00f3k a hozz\u00e1rendelt gyerekelemek. A whitespace-ek, beh\u00faz\u00e1sok csak az olvashat\u00f3s\u00e1got seg\u00edtik.</p> <p>Fontos</p> <p>A HTML-ben v\u00e9tett esetleges hib\u00e1k csendes hib\u00e1k, az esetleges hib\u00e1s elhelyez\u00e9sek vagy helytelen form\u00e1z\u00e1s/szintaxis k\u00f6vetkezt\u00e9ben a b\u00f6ng\u00e9sz\u0151 meg fogja jelen\u00edteni az oldalt, amennyire a HTML alapj\u00e1n azt meg tudja tenni. Egy lemaradt <code>&lt;/lez\u00e1r\u00f3 tag&gt;</code> pl. nem minden esetben rontja el a HTML oldal kin\u00e9zet\u00e9t, de okozhat nemk\u00edv\u00e1natos mell\u00e9khat\u00e1sokat.</p>"},{"location":"laborok/08-http/#szemantikus-web","title":"Szemantikus web","text":"<p>Miel\u0151tt belev\u00e1gn\u00e1nk a feladatba \u00e9rdemes feleleven\u00edteni a szemantikus HTML tageket, amit a <code>div</code>-ek helyett haszn\u00e1lunk a k\u00f3dban, ezzel jel\u00f6lve a nagyobb logikai egys\u00e9geket.</p> <p> Forr\u00e1s: https://internetingishard.com/html-and-css/semantic-html/</p>"},{"location":"laborok/08-http/#feladat","title":"Feladat","text":"<ol> <li> <p>Nyisd meg az <code>index.html</code> f\u00e1jlt \u00e9s jobb gombbal kattints bele, majd v\u00e1laszt az Open with Live Server opci\u00f3t. Ezzel elindul egy fejleszt\u0151 webszerver a 5500-as porton \u00e9s az alap\u00e9rtelmezett b\u00f6ng\u00e9sz\u0151t is megnyitja a kiv\u00e1lasztott oldal tartalm\u00e1val. (http://127.0.0.1:5500/index.html)</p> <p>Tip</p> <p>Ez az opci\u00f3 csak k\u00f6nyvt\u00e1rakra m\u0171k\u00f6dik, teh\u00e1t ha csak sim\u00e1n a f\u00e1jlt nyitod meg (nem a projekt k\u00f6nyvt\u00e1r\u00e1t) akkor nem fog m\u0171k\u00f6dni.</p> </li> <li> <p>Egyszer\u0171 HTML elemek \u00e1ttekint\u00e9se</p> <p>A kiindul\u00f3 k\u00f3dban m\u00e1r megtal\u00e1lhat\u00f3 ez a r\u00e9szlet \u00edgy csak a viselked\u00e9s\u00fcket kell megvizsg\u00e1lni. L\u00e1thatjuk, hogy egy-egy elemnek van egy alap\u00e9rtelmezett kin\u00e9zete, amit a b\u00f6ng\u00e9sz\u0151 defini\u00e1l. A k\u00e9s\u0151bbiekben ezt a Dev Toolbar seg\u00edts\u00e9g\u00e9vel k\u00f6zelebbr\u0151l is megn\u00e9zz\u00fck.</p> <ul> <li><code>div</code> - blokk elem (\u00faj sorban kezd\u0151dik)</li> <li><code>span</code> - inline elem (nem kezd \u00faj sort)</li> <li><code>p</code> - bekezd\u00e9s</li> <li><code>b</code> vagy<code>strong</code> vagy <code>em</code> - kiemelt sz\u00f6veg</li> <li><code>i</code> - d\u0151lt bet\u0171s</li> <li><code>br</code> - sort\u00f6r\u00e9s</li> </ul> </li> <li> <p>A k\u00f6vetkez\u0151 pontokban az <code>index.html</code> oldalban tal\u00e1lhat\u00f3 TODO elemek hely\u00e9re k\u00e9sz\u00edtsd el a sz\u00fcks\u00e9ges HTML k\u00f3dr\u00e9szletet.</p> </li> <li> <p>Fejl\u00e9c</p> <ul> <li>A megfelel\u0151 szemantikus HTML taget haszn\u00e1ld.</li> <li>A megfelel\u0151 heading-ben jelen\u00edtsd meg a \"Mobil- \u00e9s Webes szoftverek fejleszt\u00e9se\" sz\u00f6veget.</li> </ul> </li> <li> <p>Navig\u00e1ci\u00f3s linkek</p> <ul> <li>A megfelel\u0151 szemantikus HTML taget haszn\u00e1ld.</li> <li>Az al\u00e1bbi k\u00e9t linket hozd l\u00e9tre<ul> <li>F\u0151oldal az az <code>index.html</code>-re mutat</li> <li>Form ami a <code>form.html</code>-re mutat.</li> </ul> </li> </ul> Seg\u00edts\u00e9g <ul> <li><code>a</code> - hyperlink k\u00e9sz\u00edt\u00e9se a nyit\u00f3 \u00e9s z\u00e1r\u00f3 tag k\u00f6z\u00e9 ker\u00fcl a megjelen\u00edtett sz\u00f6veg.</li> <li><code>href</code> - az <code>a</code> tag attrib\u00fatuma, hova kell navig\u00e1lni.</li> <li><code>target</code> - az <code>a</code> tag attrib\u00fatuma, hol nyissa meg a linket (\u00faj tab, vagy ebben az ablakban).</li> </ul> </li> <li> <p>F\u0151 tartalmi blokk     Az al\u00e1bb felsorolt blokkokat kell l\u00e9trehozni. Minden blokk el\u0151tt legyen egy megfelel\u0151 heading \u00e9s alatta a sz\u00fcks\u00e9ges k\u00f3dr\u00e9szlet.</p> <ul> <li> <p>Felsorol\u00e1sok      Egy heading-ben jelezd, hogy ez a r\u00e9sz a \"Felsorol\u00e1sok\", majd k\u00e9sz\u00edts egy bullet pointos list\u00e1t \u00e9s egy sorsz\u00e1mozott list\u00e1t 2-2 elemmel.</p> Seg\u00edts\u00e9g <ul> <li><code>ul</code> - bullet pointos felsorol\u00e1s.</li> <li><code>ol</code> - sz\u00e1mozott felsorol\u00e1s.</li> <li><code>li</code> - lista elem.</li> </ul> </li> <li> <p>T\u00e1bl\u00e1zatok      Egy heading-ben jelezd, hogy ez a r\u00e9sz a \"T\u00e1bl\u00e1zatok\", majd k\u00e9sz\u00edtsd el az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 t\u00e1bl\u00e1zatot.</p> <p></p> Seg\u00edts\u00e9g <ul> <li><code>table</code> - t\u00e1bl\u00e1zat</li> <li><code>thead</code> - t\u00e1bl\u00e1zat fejl\u00e9ce (legels\u0151 sor)</li> <li><code>tbody</code> - t\u00e1bl\u00e1zat t\u00f6rzse</li> <li><code>tfoot</code> - t\u00e1bl\u00e1zat l\u00e1bl\u00e9ce (legals\u00f3 sor)</li> <li><code>tr</code> - t\u00e1bl\u00e1zat sor</li> <li><code>td</code> - t\u00e1bl\u00e1zat cella</li> <li><code>th</code> - t\u00e1bl\u00e1zat fejl\u00e9c oszlop</li> <li><code>colspan</code> - oszlopok \u00f6sszevon\u00e1sa (attrib\u00fatum a <code>td</code>-re)</li> <li><code>rowspan</code> - sorok \u00f6sszevon\u00e1sa (attrib\u00fatum a <code>td</code>-re)</li> <li><code>border</code> - t\u00e1bl\u00e1zat keret\u00e9nek a vastags\u00e1ga (attrib\u00fatum a <code>table</code>-re)</li> </ul> </li> <li> <p>K\u00e9p kezel\u00e9se k\u00e9pal\u00e1\u00edr\u00e1ssal:</p> <ul> <li>Egy heading-ben jelezd, hogy ez a r\u00e9sz a \"K\u00e9pek\", majd adj az oldalhoz egy k\u00e9pet k\u00e9pfelirattal.</li> <li>A k\u00e9pekn\u00e9l haszn\u00e1ljunk placeholder-t pl: https://via.placeholder.com/200x200. Adj meg alternative textet is.</li> </ul> Seg\u00edts\u00e9g <ul> <li><code>figure</code> - tag, ami \u00f6sszefogja a k\u00e9pet \u00e9s a k\u00e9pal\u00e1\u00edr\u00e1st.</li> <li><code>img</code> - maga a k\u00e9p</li> <li><code>alt</code> - Az <code>img</code> tagnek egy attrib\u00fatuma, amit \u00e9rdemes mindig megadni. Ez egy helyettes\u00edt\u0151 sz\u00f6veg, ha a k\u00e9pet nem lehet let\u00f6lteni.</li> <li><code>figcaption</code> - k\u00e9pal\u00e1\u00edr\u00e1s</li> </ul> </li> <li> <p>Form\u00e1zott sz\u00f6veg:</p> <ul> <li>Egy heading-ben jelezd, hogy ez a r\u00e9sz a \"Form\u00e1zott sz\u00f6veg\"</li> <li><code>pre</code> - olyan el\u0151re form\u00e1zott sz\u00f6veg amiben megtartja renderel\u00e9skor a white space-eket \u00e9s sort\u00f6r\u00e9seket is. Olyan sz\u00f6veget \u00edrj bele, ami demonstr\u00e1lja ezt a viselked\u00e9st.</li> </ul> </li> </ul> </li> <li> <p>K\u00e9sz\u00edts\u00fcnk egy tartalomt\u00f3l f\u00fcggetlen r\u00e9szt a szerz\u0151r\u0151l</p> <ul> <li>A szerz\u0151 neve a megfelel\u0151 heading t\u00edpussal.</li> <li>Egy k\u00e9p a szerz\u0151r\u0151l. Keress egy k\u00e9pet \u00e9s azt is tedd a repositoryba, vagy haszn\u00e1ld a https://via.placeholder.com/80x80 placeholdert.</li> <li>Egy bekezd\u00e9s sz\u00f6veg, amit legegyszer\u0171bben a https://www.lipsum.com/ oldal seg\u00edts\u00e9g\u00e9vel gener\u00e1lhatunk.</li> </ul> </li> <li> <p>K\u00e9sz\u00edts\u00fck el a l\u00e1bl\u00e9cet, amibe az \u00e9vsz\u00e1m \u00e9s a BME AUT felirat ker\u00fclj\u00f6n.</p> </li> </ol>"},{"location":"laborok/08-http/#beadando","title":"Beadand\u00f3","text":"<p>3. feladat beadand\u00f3 (1.5 pont)</p> <ul> <li>Az <code>index.html</code> m\u00f3dos\u00edt\u00e1sait commitold!</li> <li>Az elk\u00e9sz\u00fclt weboldal k\u00e9perny\u0151k\u00e9p\u00e9t m\u00e1sold be <code>f3.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be!</li> </ul>"},{"location":"laborok/08-http/#4-feladat","title":"4. Feladat","text":""},{"location":"laborok/08-http/#html-oldal-vizsgalata","title":"HTML oldal vizsg\u00e1lata","text":"<p>L\u00e1thatjuk, hogy a sz\u00f6vegek form\u00e1z\u00e1s\u00e1t nem a whitespace-ek, hanem az elemek t\u00edpusa adja. Ha szeretn\u00e9nk l\u00e1tni, melyik elem hol helyezkedik el a fel\u00fcleten illetve a DOM-ban, az F12 eszk\u00f6zt\u00e1ron, a DOM Explorer fels\u0151 sor\u00e1n lev\u0151 ikonokkal v\u00e1ltoztathatjuk, hogy a fel\u00fcleten navig\u00e1lva a DOM elem kijel\u00f6l\u0151dj\u00f6n-e, illetve a DOM-ban navig\u00e1lva a fel\u00fcleten jelezve legyen-e a kiv\u00e1lasztott elem. </p> <p>Az alap\u00e9rtelmezett form\u00e1z\u00e1st a b\u00f6ng\u00e9sz\u0151k be\u00e9p\u00edtetten adj\u00e1k, ez\u00e9rt nagyobbak az egyes c\u00edmsor (<code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>) mez\u0151k, ill. ez\u00e9rt t\u00f6rik a <code>&lt;div&gt;</code> (ami blockszint\u0171 elem), \u00e9s marad foly\u00f3sz\u00f6veg a <code>&lt;span&gt;</code> (ami inline).</p> <p>A be\u00e9p\u00edtett st\u00edlusokat megvizsg\u00e1lhatjuk egy elemet kijel\u00f6lve. A CSS szab\u00e1ly mellett l\u00e1that\u00f3 a \"user agent stylesheet\" jelzi, hogy a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett st\u00edluslapj\u00e1ban tal\u00e1lhat\u00f3 ez a form\u00e1z\u00e1s.</p> <p> </p> A b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett st\u00edlusainak vizsg\u00e1lata Developer Tools seg\u00edts\u00e9g\u00e9vel"},{"location":"laborok/08-http/#beadando_1","title":"Beadand\u00f3","text":"<p>4. feladat beadand\u00f3 (0.5 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, ahol l\u00e1that\u00f3, hogy a <code>h3</code> tagre milyen alap\u00e9rtelmezett st\u00edlusok vonatkoznak. Az \u00edgy k\u00e9sz\u00fclt k\u00e9perny\u0151k\u00e9pet m\u00e1sold be <code>f4.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be!</p>"},{"location":"laborok/08-http/#5-feladat","title":"5. Feladat","text":""},{"location":"laborok/08-http/#html-urlapok","title":"HTML \u0171rlapok","text":"<p>A HTML \u0171rlapok egys\u00e9ges, megszokott adatbeviteli eszk\u00f6zk\u00e9nt szolg\u00e1lnak sz\u00e1munkra a felhaszn\u00e1l\u00f3val val\u00f3 kommunik\u00e1ci\u00f3ra. </p> <p>\u00c1ll\u00edts \u00f6ssze egy \u0171rlapot a repositoryban tal\u00e1lhat\u00f3 <code>form.html</code> f\u00e1jlba, az al\u00e1bbiak szerint.</p> <ul> <li> <p>Az \u0171rlap az al\u00e1bbi adatokat k\u00e9ri be a fel\u00fcleten a felhaszn\u00e1l\u00f3t\u00f3l (a *-gal jel\u00f6lt mez\u0151k k\u00f6telez\u0151en kit\u00f6ltend\u0151k):</p> <ul> <li>N\u00e9v*: sz\u00f6veges mez\u0151</li> <li>Jelsz\u00f3*: jelsz\u00f3 mez\u0151 (nem l\u00e1that\u00f3 karakterek \u2013 haszn\u00e1lja a \"mobweb\" jelsz\u00f3t szeml\u00e9ltet\u00e9sre)</li> <li>Le\u00edr\u00e1s: sz\u00f6veges mez\u0151, t\u00f6bbsoros</li> <li>Sz\u00fclet\u00e9si d\u00e1tum*: d\u00e1tum</li> <li>Nem: fi\u00fa/l\u00e1ny/egy\u00e9b, leg\u00f6rd\u00fcl\u0151 men\u00fcb\u0151l</li> <li>L\u00e1bm\u00e9ret: sz\u00e1m, 0.5-\u00f6s l\u00e9pt\u00e9kkel</li> </ul> </li> <li> <p>Minden mez\u0151h\u00f6z tartozzon egy c\u00edmke is, amely t\u0151le balra helyezkedjen el! A c\u00edmk\u00e9re kattintva a f\u00f3kusz ker\u00fclj\u00f6n a relev\u00e1ns mez\u0151be (haszn\u00e1ld az <code>id</code> \u00e9s <code>for</code> attrib\u00fatumokat)! Az egyes mez\u0151k egym\u00e1s alatt helyezkedjenek el!</p> </li> <li>Legyen egy K\u00fcld\u00e9s felirat\u00fa gomb, amely az adatokat a saj\u00e1t szerver\u00fcnknek k\u00fcldi a /postform.html URL-re, ahol egy egyszer\u0171 oldal jelenjen meg GET k\u00e9r\u00e9s hat\u00e1s\u00e1ra (POST k\u00e9r\u00e9s eset\u00e9n nem sz\u00fcks\u00e9ges bet\u00f6lt\u0151dnie az oldalnak, de az URL legyen ugyanez)!</li> </ul> Seg\u00edts\u00e9g <ul> <li>Sz\u00fcks\u00e9ges elemek<ul> <li><code>form</code> - maga az \u0171rlap</li> <li><code>input</code> - beviteli mez\u0151, aminek a <code>type</code> attrib\u00fatuma adja meg, hogy milyen t\u00edpus\u00fa.</li> <li><code>label</code> - c\u00edmke ahol a <code>for</code> attrib\u00fatum adja meg, hogy melyik beviteli mez\u0151h\u00f6z tartozik.</li> <li><code>select</code> - Leg\u00f6rd\u00fcl\u0151 lista.</li> <li><code>option</code> - Leg\u00f6rd\u00fcl\u0151 lista elem.</li> <li><code>textarea</code> - t\u00f6bbsoros beviteli mez\u0151.</li> </ul> </li> <li>Sz\u00fcks\u00e9ges attrib\u00fatumok<ul> <li><code>action</code> - az <code>form</code> milyen URL-re ir\u00e1ny\u00edtson \u00e1t.</li> <li><code>for</code> - a <code>label</code> melyik <code>input</code>-hoz tartozik.</li> <li><code>id</code> - a tag egyedi azonos\u00edt\u00f3ja.</li> <li><code>method</code> - A <code>form</code> elk\u00fcld\u00e9sekor milyen HTTP method-ot haszn\u00e1ljon (GET / POST)</li> <li><code>name</code> - a tag neve. Ha nincs megadva az <code>input</code>-n\u00e1l, akkor nem tudja a szerverre elk\u00fcldeni az inputban l\u00e9v\u0151 adatot.</li> <li><code>required</code> - k\u00f6telez\u0151 <code>input</code> mez\u0151.</li> <li><code>step</code> - sz\u00e1m t\u00edpus\u00fa <code>input</code> eset\u00e9n a fel/le ny\u00edlra kattintva mennyivel v\u00e1ltozzon az \u00e9rt\u00e9k.</li> <li><code>type</code> - az <code>input</code> t\u00edpusa</li> <li><code>value</code> - az <code>input</code>-ban szerepl\u0151 kezdeti \u00e9rt\u00e9k.</li> </ul> </li> </ul>"},{"location":"laborok/08-http/#beadando_2","title":"Beadand\u00f3","text":"<p>5. feladat beadand\u00f3 (1 pont)</p> <ul> <li>Commitold a <code>form.html</code> m\u00f3dos\u00edtott tartalm\u00e1t!</li> <li>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet <code>f5a.png</code> n\u00e9ven tetsz\u0151leges b\u00f6ng\u00e9sz\u0151ben a teljesen kit\u00f6lt\u00f6tt \u0171rlapr\u00f3l, amin pontosan egy valid\u00e1ci\u00f3s hiba tal\u00e1lhat\u00f3!</li> <li>Demonstr\u00e1ld a b\u00f6ng\u00e9sz\u0151 Network f\u00fcl\u00e9nek seg\u00edts\u00e9g\u00e9vel az \u0171rlapadatok elk\u00fcld\u00e9s\u00e9nek t\u00e9ny\u00e9t GET <code>f5b.png</code> \u00e9s POST <code>f5c.png</code> ig\u00e9k haszn\u00e1lat\u00e1val is! Fontos, hogy a k\u00e9pen l\u00e1that\u00f3ak legyenek az elk\u00fcld\u00f6tt param\u00e9terek.</li> </ul>"},{"location":"laborok/09-css/","title":"Labor 09 - CSS","text":""},{"location":"laborok/09-css/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A labor sor\u00e1n laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an k\u00e9sz\u00edtesz el feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben.</p> <p>A labor c\u00e9lja, CSS alapjainak elsaj\u00e1t\u00edt\u00e1sa \u00e9s a CSS debuggol\u00e1s\u00e1ra haszn\u00e1lt eszk\u00f6z\u00f6k gyakorl\u00e1sa.</p>"},{"location":"laborok/09-css/#elokeszulet","title":"El\u0151k\u00e9sz\u00fclet","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github.</p>"},{"location":"laborok/09-css/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</li> <li>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.<ul> <li>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</li> </ul> </li> <li>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</li> <li>A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</li> </ol>"},{"location":"laborok/09-css/#1-feladat","title":"1. Feladat","text":""},{"location":"laborok/09-css/#stiluslapok-inline-stilusok","title":"St\u00edluslapok, inline st\u00edlusok","text":"<p>Webes HTML tartalmak st\u00edlusoz\u00e1s\u00e1ra CSS-t haszn\u00e1lunk. A CSS alapjai:</p> <ul> <li>szab\u00e1ly (mintailleszt\u00e9s) alap\u00fa, deklarat\u00edv programoz\u00e1si nyelv,</li> <li>DOM elemekhez megjelen\u00e9st rendel.</li> </ul> <p>A b\u00f6ng\u00e9sz\u0151ben megjelen\u00edtett HTML tartalmak alap\u00e9rtelmez\u00e9s szerint form\u00e1zatlanok, viszont bizonyos szab\u00e1lyokat a b\u00f6ng\u00e9sz\u0151 alap\u00e9rtelmezetten illeszt az egyes elemekre, az elem t\u00edpusa szerint.</p> <p>Vizsg\u00e1ljuk meg, milyen szab\u00e1lyokat illeszt a b\u00f6ng\u00e9sz\u0151 a HTML, a BODY, a DIV, a SPAN, a H1, H2 \u00e9s egy\u00e9b elemekre!</p> <p>Nyissuk meg a Visual Studio Code-ban a lekl\u00f3nozott repositorynkat, \u00e9s a gy\u00f6k\u00e9r k\u00f6nyvt\u00e1rba tal\u00e1lhat\u00f3 <code>index.html</code> f\u00e1jlba dolgozzunk.</p> <p>Ahhoz, hogy b\u00f6ng\u00e9sz\u0151ben is l\u00e1ssuk a weboldalt az <code>index.html</code>-en kattintsunk jobb gombbal \u00e9s v\u00e1lasszuk az Open with Live Server opci\u00f3t, ami elind\u00edtja a fejleszt\u0151i webszervert \u00e9s az alap\u00e9rtelmezett b\u00f6ng\u00e9sz\u0151ben megnyitja az oldal.</p> <p>Vegy\u00fck \u00e9szre, hogy az oldalhoz nem vett\u00fcnk fel saj\u00e1t st\u00edluslapot, valamilyen form\u00e1z\u00e1s m\u00e9gis \u00e9rv\u00e9nyes\u00fclt. Egyes elemek f\u00e9lk\u00f6v\u00e9rek, kisebbek-nagyobbak, elrendez\u00e9s\u00fck sorfolytonos vagy t\u00f6rdelt.</p> <p>Vizsg\u00e1ljuk meg, milyen szab\u00e1lyok \u00e9rv\u00e9nyes\u00fclnek az egyes elemekre!</p> <p>Nyissuk meg a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett fejleszt\u0151i eszk\u00f6zeit (F12)! Lehet\u0151s\u00e9g\u00fcnk van az elemeket kijel\u00f6lni (Jobb klikk &gt; Inspect), megn\u00e9zni elhelyezked\u00e9s\u00fcket a fel\u00fcleten \u00e9s a DOM sz\u00f6veges reprezent\u00e1ci\u00f3j\u00e1ban egyar\u00e1nt.</p> <p> </p> A HTML alap\u00e9rtelmezett megjelen\u00e9se a b\u00f6ng\u00e9sz\u0151ben <p>Fontos</p> <p>A b\u00f6ng\u00e9sz\u0151k \u00e9s/vagy bizonyos szerverek t\u00fal agressz\u00edvan gyors\u00edt\u00f3t\u00e1razhatnak bizonyos f\u00e1jlokat, pl. a HTML \u00e9s CSS f\u00e1jljainkat, \u00edgy a v\u00e1ltoz\u00e1sokat nem biztos, hogy l\u00e1tni fogjuk egyszer\u0171 \u00fajrat\u00f6lt\u00e9s ut\u00e1n. Ha ez el\u0151fordul, le kell tiltanunk a cache-t a Developer Tools eszk\u00f6zt\u00e1ron.</p> <p>Jellemz\u0151en a men\u00fcsor bal oldal\u00e1n tal\u00e1lhat\u00f3k a kijel\u00f6l\u00e9shez sz\u00fcks\u00e9ges m\u0171veletek ikonjai, jobb oldalon a r\u00e9szletes n\u00e9zet.</p> <p>A kiv\u00e1lasztott elemhez a jobb oldali Computed f\u00fcl\u00f6n a t\u00e9nylegesen \u00e9rv\u00e9nyre l\u00e9pett szab\u00e1lyokat l\u00e1thatjuk. Mivel nincs explicit CSS f\u00e1jlunk linkelve \u00e9s CSS szab\u00e1lyokat sem \u00edrtunk a HTML-ben, ez\u00e9rt kiz\u00e1r\u00f3lag a b\u00f6ng\u00e9sz\u0151 be\u00e9p\u00edtett user agent stylesheet-je \u00e9rv\u00e9nyes\u00fcl. Itt l\u00e1thatjuk a CSS Box model-t is, ami az elem tartalma, a hozz\u00e1 tartoz\u00f3 padding, border \u00e9s margin \u00e9rt\u00e9kek egym\u00e1sra halmoz\u00e1s\u00e1t jelenti a 2 dimenzi\u00f3s t\u00e9glalap oldalaihoz m\u00e9rten.</p> <p>A CSS felold\u00e1s\u00e1ban a <code>cascading</code>, azaz \"egym\u00e1sba \u00e1gyazhat\u00f3\" r\u00e9sz szerint t\u00f6bb st\u00edluslap l\u00e9tezik a sz\u00e1rmaz\u00e1s szempontj\u00e1b\u00f3l; mi most a b\u00f6ng\u00e9sz\u0151be be\u00e9p\u00edtett, \u00fan. <code>user agent stylesheet</code>-et l\u00e1tjuk.</p> <p>A Computed f\u00fcl\u00f6n lenyitva az egyes szab\u00e1lyokat l\u00e1that\u00f3, hogy honnan sz\u00e1rmazik az a st\u00edlus, s\u0151t az is, hogy egy \u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1sa pontosan melyik szab\u00e1lyb\u00f3l sz\u00e1rmazik, azaz melyik szab\u00e1ly melyiket \u00edrta fel\u00fcl.</p> <p> </p> Chrome computed f\u00fcl <p>A fenti sz\u0171r\u0151t haszn\u00e1lva van lehet\u0151s\u00e9g\u00fcnk az alkalmazott CSS szab\u00e1lyok k\u00f6z\u00f6tt keresni is.</p> <p>A h1, h2 \u00e9s b elemek alap\u00e9rtelmezetten f\u00e9lk\u00f6v\u00e9rek, ezt a <code>font-weight: 700;</code> tulajdons\u00e1g \u00edrja le nek\u00fcnk.</p> <p>A html, body, div, h1, h2 elemek <code>display</code> tulajdons\u00e1ga <code>block</code>, a span, a \u00e9s b elemek pedig <code>inline</code> t\u00edpus\u00faak. A <code>display: block;</code> tulajdons\u00e1g\u00fa elemek egy blokkot (sort) foglalnak el az \u0151ket befoglal\u00f3 elemben, az inline t\u00edpus\u00faak sorfolytonosak (egym\u00e1s mellett is elhelyezkedhetnek).</p> <p>L\u00e1thatjuk, hogy a <code>body</code> elemen tal\u00e1lhat\u00f3 <code>8px</code> marg\u00f3 (<code>margin</code>) mind a 4 ir\u00e1nyban:</p> <p> </p> Marg\u00f3k vizsg\u00e1lata"},{"location":"laborok/09-css/#beadando","title":"Beadand\u00f3","text":"<p>1. feladat beadand\u00f3 (0.5 pont)</p> <p>Egy-egy k\u00e9perny\u0151k\u00e9ppel al\u00e1t\u00e1masztva demonstr\u00e1lja az al\u00e1bbi k\u00e9rd\u00e9seket:</p> <ul> <li>Mekkora a margin, padding \u00e9s border \u00e9rt\u00e9ke az <code>&lt;ol&gt;</code> elemnek?</li> <li>H\u00e1ny pixel a (f\u00fcgg\u0151leges) t\u00e1vols\u00e1g a <code>&lt;h1&gt;</code> \u00e9s <code>&lt;h2&gt;</code> elemek tartalma k\u00f6z\u00f6tt (\u00fcgyelve az \u00e1tfed\u0151 marg\u00f3kra)?</li> <li>A k\u00e9sz\u00edtett k\u00e9perny\u0151k\u00e9pet m\u00e1sold <code>f1-1.png</code> \u00e9s <code>f1-2.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be!</li> </ul>"},{"location":"laborok/09-css/#2-feladat","title":"2. Feladat","text":""},{"location":"laborok/09-css/#megjelenes-modositasa-futasi-idoben","title":"Megjelen\u00e9s m\u00f3dos\u00edt\u00e1sa fut\u00e1si id\u0151ben","text":"Eml\u00e9keztet\u0151 a CSS szab\u00e1lyok defini\u00e1l\u00e1s\u00e1hoz <p>Saj\u00e1t CSS szab\u00e1lyokat t\u00f6bbf\u00e9le m\u00f3don tudunk az oldalunkhoz rendelni:</p> <ul> <li>CSS f\u00e1jlokra t\u00f6rt\u00e9n\u0151 hivatkoz\u00e1ssal,</li> <li>CSS szab\u00e1lyok felv\u00e9tel\u00e9vel a HTML tartalm\u00e1n bel\u00fcli <code>&lt;style&gt;</code> tagben,</li> <li>inline, a HTML elemek <code>style</code> attrib\u00fatum\u00e1nak be\u00e1ll\u00edt\u00e1s\u00e1val.</li> </ul> <p>\u00dctk\u00f6z\u0151 CSS szab\u00e1lyok k\u00f6z\u00fcl az \u00e9rv\u00e9nyes\u00fcl, amelynek nagyobb a specificit\u00e1sa (megegyez\u0151 specificit\u00e1s eset\u00e9ben az utolj\u00e1ra defini\u00e1lt).</p> <p>Eml\u00e9keztet\u0151k\u00e9nt a szab\u00e1lyok specificit\u00e1si sorrendje:</p> <ul> <li>inline st\u00edlus (<code>&lt;div style=\"...\"&gt;</code>),</li> <li>ID-k sz\u00e1ma (<code>#azonosito</code>),</li> <li>oszt\u00e1lyok, attrib\u00fatumok \u00e9s pszeudo-oszt\u00e1lyok sz\u00e1ma (<code>.osztaly</code>, <code>[attributum]</code>, <code>[attributum=\"ertek\"]</code>, <code>:hover</code>),</li> <li>pszeudo-elemek (<code>:before</code>, <code>:after</code>).</li> </ul> <p>A sorrendhez hozz\u00e1tartozik az <code>!important</code> kulcssz\u00f3, ami \u00f6nmag\u00e1ban a fentiekt\u0151l specifikusabb, viszont az <code>!important</code> szab\u00e1lyokra a fenti specificit\u00e1si sorrend szint\u00e9n \u00e9rv\u00e9nyes\u00fcl.</p> <p>A szab\u00e1lyok defini\u00e1l\u00e1sa:</p> <p> </p> <ul> <li>Ha \u00faj szab\u00e1lyt akarunk felvenni, akkor a kapcsos z\u00e1r\u00f3jelek k\u00f6z\u00e9 kattintva tehetj\u00fck ezt meg, ezut\u00e1n az automatikus kieg\u00e9sz\u00edt\u00e9s funkci\u00f3val l\u00e1thatjuk az \u00f6sszes, a b\u00f6ng\u00e9sz\u0151 \u00e1ltal ismert CSS tulajdons\u00e1got (Firefox Developerben ezt az \u00fcres kurzoron a fel-le nyilak-kal tehetj\u00fck meg, Edge-ben \u00e9s Chrome-ban a Ctrl+sz\u00f3k\u00f6z-zel).</li> <li> <p>Vegy\u00fck fel a <code>&lt;h1&gt;</code> elemhez az al\u00e1bbi CSS tulajdons\u00e1got:</p> <pre><code>color: red;\n</code></pre> </li> <li> <p>K\u00f6zben vegy\u00fck \u00e9szre a DOM reprezent\u00e1ci\u00f3ban, hogy b\u00e1r a jobb oldali panelen szerkeszt\u00fcnk, pontosan ugyanaz t\u00f6rt\u00e9nik, mintha a HTML elem <code>style</code> attrib\u00fatum\u00e1t adtuk volna meg.</p> </li> <li>Ha be\u00e1ll\u00edtjuk a <code>font-weight: bold;</code> tulajdons\u00e1got a <code>&lt;body&gt;</code>-n, akkor l\u00e1thatjuk, hogy az \u00f6sszes gyermek\u00e9re is \u00e9rv\u00e9nyes\u00fcl a szab\u00e1ly. Bizonyos szab\u00e1lyok \u00f6r\u00f6kl\u0151dnek (a <code>font-weight</code> ilyen), m\u00e1sok (p\u00e9ld\u00e1ul a <code>padding</code> \u00e9s <code>margin</code>) viszont nem.</li> </ul> <p>Lehet\u0151s\u00e9g van esetenk\u00e9nt t\u00f6bb szab\u00e1ly aggreg\u00e1lt megad\u00e1s\u00e1ra is \u00fan. shorthandek haszn\u00e1lat\u00e1val. Gyakori p\u00e9ld\u00e1ul a 4-ir\u00e1ny\u00fa \u00e9rt\u00e9kad\u00e1s, ami a top-right-bottom-left ir\u00e1nysorrend szerint ad meg t\u00f6bb \u00e9rt\u00e9ket.</p> <ul> <li>A <code>padding: 50px 30px 10px 5px;</code> szab\u00e1ly mind a n\u00e9gy \u00e9rt\u00e9ket be\u00e1ll\u00edtja a fenti sorrendben.</li> <li>A <code>padding: 10% 1mm;</code> szab\u00e1ly a fenti-lenti \u00e9rt\u00e9keket 10%-ra, a jobb-balt 1 mm-re.</li> <li>A <code>padding: 0;</code> mind a 4 oldalon 0-ra \u00e1ll\u00edtja a paddingot (nem sz\u00fcks\u00e9ges m\u00e9rt\u00e9kegys\u00e9g 0 eset\u00e9n).</li> </ul> <p>Fontos</p> <p>Ha sz\u00e1zal\u00e9kban adjuk meg a paddingot vagy a marg\u00f3t akkor az a sz\u00fcl\u0151 elem sz\u00e9less\u00e9g\u00e9nek a sz\u00e1zal\u00e9k\u00e1t jelenti. M\u00e9g akkor is ha <code>margin-top</code>, vagy <code>margin-bottom</code>-ot \u00e1ll\u00edtunk be! </p> <p>Forr\u00e1s: https://www.w3.org/TR/CSS21/box.html#margin-properties </p> <p>Inline st\u00edlusok</p> <p>Inline st\u00edlusokat csak kiv\u00e9teles esetekben haszn\u00e1ljunk, jellemz\u0151en programozottan (JavaScriptb\u0151l) elfogadott lehet egy elem megjelen\u00e9s\u00e9t ilyen m\u00f3don \u00e1ll\u00edtani, de a nyers HTML-ben nem!</p> <ul> <li> <p>Vegy\u00fcnk fel egy \u00faj szab\u00e1lyt, amiben megadjuk, hogy a t\u00e1bl\u00e1zat cell\u00e1k <code>td</code> paddingja 1rem legyen minden ir\u00e1nyba. Ehhez a Styles f\u00fcl\u00f6n a jobb oldalon tal\u00e1lhat\u00f3 + jelre kell kattintani \u00e9s akkor l\u00e9trej\u00f6n egy \u00faj szab\u00e1ly ahol megadhatjuk a selectort \u00e9s a be\u00e1ll\u00edt\u00e1sokat is.     <pre><code>td {\npadding: 1rem;\n}\n</code></pre> \u00daj szab\u00e1ly l\u00e9trehoz\u00e1sa </p> </li> <li> <p>Az \u00faj szab\u00e1ly mellett azt l\u00e1tjuk, hogy az inspector-stylesheet-ben j\u00f6tt l\u00e9tre. Teh\u00e1t a h\u00e1tt\u00e9rben a b\u00f6ng\u00e9sz\u0151 l\u00e9trehoz egy CSS f\u00e1jlt \u00e9s abban t\u00e1rolja a l\u00e9trehozott st\u00edlusokat, amit meg is tudunk n\u00e9zni ha r\u00e1kattintunk az inspector-stylesheet-re.</p> </li> <li>Az \u00edgy l\u00e9trehzott szab\u00e1lyok csak az oldal \u00fajrat\u00f6lt\u00e9s\u00e9ig maradnak meg.</li> <li>Figyelj\u00fck meg a fenti k\u00e9perny\u0151n, hogy az \u00faj szab\u00e1llyal nem egy cell\u00e1ra \u00e1ll\u00edtottuk be a padding-ot hanem minden cell\u00e1ra.</li> <li>Az \u00faj szab\u00e1ly alatt egy\u00e9bk\u00e9nt l\u00e1that\u00f3ak a user agent styleheet-b\u0151l \u00e9rv\u00e9nyre jutott szab\u00e1lyok is, illetve ez alatt az \u00f6r\u00f6k\u00f6lt szab\u00e1lyok is.</li> </ul>"},{"location":"laborok/09-css/#beadando_1","title":"Beadand\u00f3","text":"<p>2. feladat beadand\u00f3 (0.5 pont)</p> <ul> <li>Hozz l\u00e9tre egy \u00faj szab\u00e1lyt a <code>table</code>-re ahol be\u00e1ll\u00edtod az al\u00e1bbi szab\u00e1lyt <pre><code>table {\nborder: solid 1px red;\nborder-collapse: collapse;\n}\n</code></pre></li> <li>Hozz l\u00e9tre egy \u00faj szab\u00e1lyt, amiben a <code>th</code> tagekre be\u00e1ll\u00edtod, hogy a h\u00e1tt\u00e9rsz\u00edn fekete legyen, a bet\u0171 sz\u00edne feh\u00e9r, a padding pedig 1rem.</li> <li>Az els\u0151 sor utols\u00f3 cell\u00e1j\u00e1nak tartalm\u00e1t (de csak azt az egyet) igaz\u00edtsd k\u00f6z\u00e9pre. Tipp: <code>text-align: center</code></li> <li>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet amin l\u00e1that\u00f3 az \u00f6sszes fenti m\u00f3dos\u00edt\u00e1s \u00e9s a k\u00e9sz\u00edtett k\u00e9perny\u0151k\u00e9pet m\u00e1sold <code>f2.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be!</li> </ul>"},{"location":"laborok/09-css/#3-feladat-css-alapok","title":"3. Feladat - CSS alapok","text":"<p>A HTML oldalhoz k\u00e9tf\u00e9lek\u00e9ppen tudunk st\u00edluslapot rendelni: k\u00fcls\u0151 CSS f\u00e1jlb\u00f3l vagy az oldal <code>head</code> tagj\u00e9ben defini\u00e1lt <code>&lt;style&gt;</code> tagben.</p>"},{"location":"laborok/09-css/#float-hasznalata","title":"Float haszn\u00e1lata","text":"<p>Az <code>index.html</code> forr\u00e1sk\u00f3dj\u00e1t eg\u00e9sz\u00edts\u00fck ki, a <code>&lt;head&gt;</code> elembe helyezz\u00fck el az al\u00e1bbi k\u00f3dot:</p> <pre><code>&lt;style&gt;\nul {\nlist-style: none;\npadding: 0;\n}\n\nul &gt; li {\nfloat: left;\npadding: 10px;\nmin-width: 200px;\nborder: 1px solid grey;\n}\n&lt;/style&gt;\n</code></pre> <p>Ha friss\u00edtj\u00fck az oldalt (nem sz\u00fcks\u00e9ges \u00fajraind\u00edtani a szervert, csak menteni a f\u00e1jlt), akkor az elrendez\u00e9s m\u00f3dosul.</p> <ul> <li>A listaelemet jelz\u0151 p\u00f6tty elt\u0171nik.</li> <li>A list\u00e1nkban a listaelemek egym\u00e1s mell\u00e9 ker\u00fclnek</li> <li>A felsorol\u00e1s ut\u00e1n k\u00f6vetkez\u0151 elem felcs\u00faszott a list\u00e1val egy sorba.</li> </ul> <p> </p> Float <p>float: left</p> <p>A <code>float: left;</code> tulajdons\u00e1g \u00e1ll\u00edt\u00e1s\u00e1val nem ugyanazt \u00e9rj\u00fck el, mintha a listaelemet <code>display: inline-block;</code>-ra \u00e1ll\u00edtan\u00e1nk, mert az <code>inline-block</code> megtartja az egym\u00e1st k\u00f6vet\u0151 elemek k\u00f6z\u00f6tti whitespace-eket, a <code>float: left;</code> viszont nem.</p> <p>A float seg\u00edts\u00e9g\u00e9vel komplexebb elrendez\u00e9seket is el tudunk \u00e9rni, viszont a float-ol\u00e1st meg kell tudnunk sz\u00fcntetni. Ehhez a <code>clear: both;</code> \u00e9rt\u00e9ket \u00e1ll\u00edthatjuk be egy elemen. A float-ol\u00e1s azon kev\u00e9s CSS tulajdons\u00e1g egyike, ami az elemet sorban k\u00f6vet\u0151 tov\u00e1bbi testv\u00e9rekre is k\u00f6zvetlen\u00fcl hat.</p> <p>Az al\u00e1bbi szab\u00e1lyt haszn\u00e1lhatjuk a float-ol\u00e1s megsz\u00fcntet\u00e9s\u00e9hez, ekkor az <code>&lt;ol&gt;</code> elemre a <code>clearfix</code> oszt\u00e1lyt alkalmazva az m\u00e1r \u00faj sorba is ker\u00fcl.</p> <pre><code>.clearfix {\nclear: both;\n}\n</code></pre> <pre><code>&lt;ol class=\"clearfix\"&gt;\n  &lt;!-- ... --&gt;\n&lt;/ol&gt;\n</code></pre> <p> </p> Float megt\u00f6r\u00e9se a clear seg\u00edts\u00e9g\u00e9vel <p>Vegy\u00fck \u00e9szre, hogy az oldal alj\u00e1n is volt egy felsorol\u00e1s, \u00e9s sajnos olyan \u00e1ltal\u00e1nos szab\u00e1lyt siker\u00fclt \u00edni, hogy az ott l\u00e9v\u0151 felsorol\u00e1sra is \u00e9rv\u00e9nyre jutott.</p> <p> </p> T\u00fal \u00e1ltal\u00e1nos szab\u00e1ly"},{"location":"laborok/09-css/#specifikus-szabalyok","title":"Specifikus szab\u00e1lyok","text":"<p>A CSS szab\u00e1lyainknak az esetek nagy t\u00f6bbs\u00e9g\u00e9ben nem tesz j\u00f3t, ha t\u00fal \u00e1ltal\u00e1nosak. A fenti szab\u00e1lyok minden listaelemre \u00e1ltal\u00e1nosan illeszkedni fognak, ami ebben a konkr\u00e9t esetben nem j\u00f3 d\u00f6nt\u00e9s, ugyanis valahol az oldal t\u00f6rzs\u00e9ben lehet, hogy szeretn\u00e9nk haszn\u00e1lni a \"klasszikus\" list\u00e1s megjelen\u00edt\u00e9st is. Ez\u00e9rt a szab\u00e1lyunkat \u00e1t kell gondolnunk, specifikusabb szab\u00e1lyt \u00e9rdemes \u00edrni:</p> <pre><code>ul.menu {\nlist-style: none;\npadding: 0;\n}\n\nul.menu &gt; li {\nfloat: left;\npadding: 10px;\nmin-width: 200px;\nborder: 1px solid grey;\n}\n</code></pre> <p>A fenti oszt\u00e1llyal megk\u00fcl\u00f6nb\u00f6ztett\u00fck a <code>menu</code> oszt\u00e1llyal ell\u00e1tott <code>ul</code> elemeket azokt\u00f3l, amiken nincs rajta az oszt\u00e1ly.</p>"},{"location":"laborok/09-css/#pszeudo-osztalyok","title":"Pszeudo oszt\u00e1lyok","text":"<p>A pszeudooszt\u00e1lyok haszn\u00e1lat\u00e1val az elemek k\u00fcl\u00f6nb\u00f6z\u0151 \u00e1llapotainak k\u00fcl\u00f6nb\u00f6z\u0151 st\u00edlust tudunk adni. Ha a listaelemek kijel\u00f6l\u00e9se a felhaszn\u00e1l\u00f3 sz\u00e1m\u00e1ra speci\u00e1lis \u00e1llapot, ezt \u00e9rdemes jelezn\u00fcnk a fel\u00fcleten. Haszn\u00e1ljuk az al\u00e1bbi szab\u00e1lyt:</p> <pre><code>ul.menu &gt; li:focus {\nfont-weight: bold;\ncolor: #44AA44;\n}\n</code></pre> <p>\u00d6nmag\u00e1ban a <code>focus</code> pszeudooszt\u00e1ly haszn\u00e1lata nem elegend\u0151, ugyanis a li elem nem f\u00f3kusz\u00e1lhat\u00f3. A <code>&lt;li&gt;</code> elemen elhelyezett tabindex attrib\u00fatum jelzi a b\u00f6ng\u00e9sz\u0151nek, hogy az elem k\u00e9pes f\u00f3kuszt kapni:</p> <pre><code>&lt;ul class=\"menu\"&gt;\n    &lt;li tabindex=\"1\"&gt;Els\u0151 elem&lt;/li&gt;\n    &lt;li tabindex=\"2\"&gt;M\u00e1dosik elem&lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> <p>Ezut\u00e1n lehets\u00e9ges az eg\u00e9r kattint\u00e1ssal vagy a Tab billenty\u0171 haszn\u00e1lat\u00e1val kijel\u00f6lni az elemet.</p>"},{"location":"laborok/09-css/#css-kulon-fajlban","title":"CSS k\u00fcl\u00f6n f\u00e1jlban","text":"<p>A HTML-be \u00e1gyazott CSS-sel a probl\u00e9ma, hogy ugyanaz a st\u00edlus nem \u00fajrahasznos\u00edthat\u00f3 a k\u00fcl\u00f6nb\u00f6z\u0151 oldalaink k\u00f6z\u00f6tt. Ez\u00e9rt \u00e9rdemes kiszervezni a CSS tartalmainkat a saj\u00e1t dedik\u00e1lt CSS f\u00e1jljainkba. A CSS tartalm\u00e1t mozgassuk \u00e1t a HTML <code>&lt;head&gt;</code> r\u00e9sz\u00e9b\u0151l egy \u00faj f\u00e1jlba az <code>index.html</code> mellett, legyen a neve <code>index.css</code>.</p> <p>A f\u00e1jlt a HTML-b\u0151l az al\u00e1bbi m\u00f3don tudjuk linkelni: tegy\u00fck az oldal <code>&lt;head&gt;</code> r\u00e9sz\u00e9be (a kor\u00e1bbi oldalon bel\u00fcli st\u00edlus-defin\u00edci\u00f3k hely\u00e9re) az al\u00e1bbi hivatkoz\u00e1st:</p> <pre><code>&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"index.css\"&gt;\n</code></pre>"},{"location":"laborok/09-css/#reszponziv-elrendezes","title":"Reszponz\u00edv elrendez\u00e9s","text":"<p>A weboldalakat k\u00fcl\u00f6nb\u00f6z\u0151 k\u00e9perny\u0151m\u00e9ret\u0171 \u00e9s felbont\u00e1s\u00fa eszk\u00f6z\u00f6kr\u0151l szoktuk l\u00e1togatni. A t\u00fal r\u00e9szletes t\u00e1bl\u00e1zatok, hossz\u00fa, meg nem t\u00f6r\u0151 sorok nem felhaszn\u00e1l\u00f3bar\u00e1tak kisebb m\u00e9ret\u0171 kijelz\u0151k\u00f6n, m\u00e9g ha az eszk\u00f6z felbont\u00e1sa kell\u0151en nagy is. A mobil eszk\u00f6z\u00f6k ez\u00e9rt szorz\u00f3kat alkalmaznak a val\u00f3s \u00e9s a hasznos felbont\u00e1s k\u00f6z\u00f6tti megk\u00fcl\u00f6nb\u00f6ztet\u00e9sk\u00e9ppen.</p> <p>A reszponz\u00edv elrendez\u00e9s sor\u00e1n a legfontosabb koncepci\u00f3k k\u00f6z\u00e9 tartozik a sz\u00e9less\u00e9g f\u00fcggv\u00e9ny\u00e9ben t\u00f6rt\u00e9n\u0151 \u00e1tm\u00e9retez\u00e9se az oldalnak. Ezeket az al\u00e1bbi szintaxis alapj\u00e1n, \u00fan. media query-vel tudjuk implement\u00e1lni:</p> <pre><code>.medium-only {\ndisplay: none;\n}\n\n@media (min-width: 768px) and (max-width: 991px) {\n.medium-only {\ndisplay: block;\n}\n}\n</code></pre> <p>A fenti szab\u00e1ly 768 \u00e9s 991 pixel k\u00f6z\u00f6tti sz\u00e9less\u00e9g\u0171 viewport-on jelenik meg, teh\u00e1t nem a k\u00e9perny\u0151 m\u00e9rete, hanem a rendelkez\u00e9sre \u00e1ll\u00f3 hely f\u00fcggv\u00e9ny\u00e9ben v\u00e1ltozik (pl. ablak \u00e1tm\u00e9retez\u00e9sekor is). A <code>medium-only</code> oszt\u00e1llyal ell\u00e1tott elemek csak ilyen k\u00e9perny\u0151m\u00e9reten jelennek meg, ugyanis a media query szab\u00e1ly specifikusabb, mint az azon k\u00edv\u00fcl defini\u00e1lt.</p> <p>Pr\u00f3b\u00e1ljuk ki, mi t\u00f6rt\u00e9nik, hogyha a k\u00e9t szab\u00e1ly sorrendj\u00e9t felcser\u00e9lj\u00fck!</p>"},{"location":"laborok/09-css/#beadando_2","title":"Beadand\u00f3","text":"<p>3. feladat beadand\u00f3 (1 pont)</p> <ul> <li> <p>Commitolja a m\u00f3dos\u00edtott HTML f\u00e1jlt \u00e9s a l\u00e9trehozott CSS f\u00e1jlt a repositoryba!</p> </li> <li> <p>K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet <code>f3-1.png</code> n\u00e9vvel \u00e9s m\u00e1solja a repository gy\u00f6ker\u00e9be, amin az egyik listaelem kijel\u00f6lt \u00e1llapotban van. A k\u00e9perny\u0151k\u00e9pen az \u00e9rv\u00e9nyre jutott CSS szab\u00e1ly is legyen l\u00e1that\u00f3. (Styles a dev toolbarban).</p> </li> <li> <p>K\u00e9perny\u0151k\u00e9pekkel demonstr\u00e1lja, hogy a fenti szab\u00e1lyt a table elemre alkalmazva a t\u00e1bl\u00e1zat az ablak m\u00e9ret\u00e9nek f\u00fcggv\u00e9ny\u00e9ben l\u00e1that\u00f3 vagy el van rejtve! <code>f3-2.png</code>, <code>f3-3.png</code></p> </li> </ul>"},{"location":"laborok/09-css/#4-feladat","title":"4. Feladat","text":"<p>Mostant\u00f3l a <code>feladat4</code> mapp\u00e1ban l\u00e9v\u0151 \u00e1llom\u00e1nyokkal dolgozz.</p> <p>K\u00e9sz\u00edtsd el az al\u00e1bbi \u00e1br\u00e1n l\u00e1that\u00f3 HTML oldal designj\u00e1t. Figyelj r\u00e1, hogy a megval\u00f3s\u00edt\u00e1s sor\u00e1n nem alkalmazhatsz inline st\u00edlusokat, \u00e9s ker\u00fcld a HTML f\u00e1jl m\u00f3dos\u00edt\u00e1s\u00e1t.</p> <p> </p> Magas felbont\u00e1son <p> </p> 900px alatt"},{"location":"laborok/09-css/#41-layout-vizsgalata","title":"4.1 Layout vizsg\u00e1lata","text":"<p>Az oldalnak az alapvet\u0151 elrendez\u00e9se m\u00e1r elk\u00e9sz\u00fclt, melyhez a form\u00e1z\u00e1sok a <code>feladat4/css/main.css</code> f\u00e1jlban tal\u00e1lhat\u00f3k, melyekb\u0151l a legfontosabbakat tekints\u00fck is \u00e1t.</p> <ul> <li>A <code>html</code> \u00e9s <code>body</code> tagen nincs margin \u00e9s padding sem, \u00e9s itt adtuk meg a bet\u0171t\u00edpust is.</li> <li>A hivatkoz\u00e1sok (<code>a</code> tagek) nincsenek al\u00e1h\u00fazva.</li> <li>Van egy <code>.container</code> CSS oszt\u00e1ly, amiben megadtuk, hogy a tartalmi r\u00e9sz 1200px sz\u00e9les legyen \u00e9s  k\u00f6z\u00e9pre igaz\u00edtottuk.<ul> <li>Itt a <code>margin-left: auto</code> \u00e9s <code>margin-right: auto</code> seg\u00edts\u00e9g\u00e9vel igaz\u00edtjuk a tartalmat  k\u00f6z\u00e9pre.</li> <li>Figyelj\u00fck meg, hogy a <code>position: relative</code> be\u00e1ll\u00edt\u00e1s is szerepel, hogy az abszol\u00fat poz\u00edcion\u00e1lt elemek ehhez k\u00e9pest legyenek igaz\u00edtva. </li> </ul> </li> <li>Mivel fix fejl\u00e9cet szeretn\u00e9nk ez\u00e9rt a f\u0151 tartalmi r\u00e9szre (<code>main</code> tag) be\u00e1ll\u00edtottunk egy 76px-es paddingot. 60px a fejl\u00e9c magass\u00e1ga \u00e9s 16px t\u00e1vols\u00e1got szeretn\u00e9nk a fejl\u00e9c \u00e9s a tartalmi r\u00e9sz k\u00f6z\u00f6tt.</li> <li>Az <code>aside</code> jobb oldalra van igaz\u00edtva.<ul> <li>Mivel a v\u00e9gs\u0151 c\u00e9l az, hogy teljesen f\u00fcggetlen\u00fcl tudjuk g\u00f6rgetni, \u00e9s akkor is teljes magass\u00e1g\u00fa legyen, ha a mellette l\u00e9v\u0151 f\u0151 tartalmi r\u00e9sz kev\u00e9s, ez\u00e9rt <code>position: absolute</code> seg\u00edts\u00e9g\u00e9vel poz\u00edcion\u00e1ljuk a <code>container</code> tetej\u00e9hez \u00e9s jobb oldalra (<code>top: 60px</code> \u00e9s <code>right: 0</code>).</li> <li>Ezen fel\u00fcl megadtuk, hogy 450px sz\u00e9les legyen, a h\u00e1tter\u00e9t \u00e9s egy bal oldali marg\u00f3t.</li> </ul> </li> <li>A l\u00e1bl\u00e9cben l\u00e9v\u0151 sz\u00f6veget k\u00f6z\u00e9pre igaz\u00edtottuk, kapott egy els\u0151 marg\u00f3t \u00e9s a bet\u0171 sz\u00edne \u00e9s m\u00e9rete is be\u00e1ll\u00edt\u00e1sra ker\u00fclt.</li> </ul> <p>Mint l\u00e1thatjuk t\u00e9nyleg van egy alapvet\u0151 be\u00e1ll\u00edt\u00e1s, de nagyon sok form\u00e1z\u00e1st m\u00e9g be kell \u00e1ll\u00edtani, hogy el\u00e9rj\u00fck a k\u00edv\u00e1nt eredm\u00e9nyt.</p>"},{"location":"laborok/09-css/#42-fejlec","title":"4.2 Fejl\u00e9c","text":"<p>A fejl\u00e9c megjelen\u00e9s\u00e9t a <code>navbar.css</code> f\u00e1jlba k\u00e9sz\u00edtsd el, amit megtal\u00e1lsz a repository <code>feladat4/css</code> k\u00f6nyvt\u00e1r\u00e1ban.</p> <p>A fejl\u00e9cnek \u00edgy kell kin\u00e9znie</p> <p> </p> A megval\u00f3s\u00edtand\u00f3 fejl\u00e9c <p>A log\u00f3 mellett k\u00e9t elemb\u0151l \u00e1ll\u00f3 men\u00fcsor tal\u00e1lhat\u00f3, ahol az elemek \u00e1tnavig\u00e1lnak rendre az <code>index.html</code> \u00e9s <code>contact.html</code> oldalakra az aktu\u00e1lis oldalr\u00f3l, megnevez\u00e9s\u00fck: F\u0151oldal, Kapcsolat (ezeket az oldalakat nem kell elk\u00e9sz\u00edteni)!</p> <ul> <li>A men\u00fcsort <code>&lt;ul&gt;</code> \u00e9s <code>&lt;li&gt;</code> elemek haszn\u00e1lat\u00e1val struktur\u00e1ld. (Tipp: <code>display: inline-block</code>)</li> <li>A men\u00fcpontok bet\u0171m\u00e9rete 1.1em legyen, el\u0151t\u00e9rsz\u00edne feh\u00e9r. Az egeret a men\u00fcpontra helyezve (Tipp: <code>:hover</code> pszeudoclass) a bet\u0171 sz\u00edne legyen sz\u00fcrke.</li> <li>A men\u00fcpontok sz\u00f6vege legyen f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edtva. (Tipp: <code>line-height</code>)</li> <li>\u00dcgyeljen r\u00e1, hogy g\u00f6rget\u00e9skor a tartalom ne takarja ki a men\u00fcsort! (Tipp: <code>z-index</code>)</li> </ul>"},{"location":"laborok/09-css/#a-megvalositas-lepesei","title":"A megval\u00f3s\u00edt\u00e1s l\u00e9p\u00e9sei","text":"<ol> <li> <p>A fejl\u00e9chez alapvet\u0151 kin\u00e9zet\u00e9nek be\u00e1ll\u00edt\u00e1sa.</p> <ul> <li>K\u00e9sz\u00edts egy <code>.page-header</code> CSS oszt\u00e1lyt amit tegy\u00e9l r\u00e1 az els\u0151 <code>header</code> tagre.</li> <li>A page-header CSS oszt\u00e1lyban az al\u00e1bbiakat \u00e1ll\u00edtsd be:<ul> <li>Legyen 100% sz\u00e9les</li> <li>A magass\u00e1ga 60px legyen</li> <li>A h\u00e1tt\u00e9r legyen bord\u00f3</li> <li>A fejl\u00e9c legyen fix (nem t\u0171nik el, ha kig\u00f6rget\u00fcnk a tartalomb\u00f3l)</li> <li>Mivel fix a fejl\u00e9c ez\u00e9rt be kell majd \u00e1ll\u00edtani, hogy a f\u0151 tartalmi blokk lentebb kezd\u0151dj\u00f6n. Most r\u00e1l\u00f3g \u00e9s ha majd padding-ot \u00e1ll\u00edtunk be akkor is r\u00e1 fog l\u00f3gni, teh\u00e1t be kell \u00e1ll\u00edtani, hogy a fejl\u00e9c legyen fentebb, mert egy\u00e9bk\u00e9nt nem fogja \u00e9rz\u00e9keli ha f\u00f6l\u00e9 vissz\u00fck az egeret. Tipp: <code>z-index</code></li> </ul> </li> </ul> Seg\u00edts\u00e9g <p>A fenti be\u00e1ll\u00edt\u00e1sokhoz az al\u00e1bbi CSS oszt\u00e1lyt kell l\u00e9trehozni. <pre><code>header.page-header {\nwidth: 100%;\nheight: 60px;\nbackground-color: #A60010;\nposition: fixed;\nz-index: 1;\n}\n</code></pre></p> </li> <li> <p>A fejl\u00e9cen bel\u00fcli layout kialak\u00edt\u00e1sa.</p> <ul> <li>K\u00e9sz\u00edts egy <code>.logo</code> CSS oszt\u00e1lyt, amit rendelj a fejl\u00e9cben l\u00e9v\u0151 k\u00e9phez.</li> <li>A CSS oszt\u00e1lyan igaz\u00edtsd balra a k\u00e9pet \u00fagy, hogy mell\u00e9 fel tudjon cs\u00faszni felsorol\u00e1s.</li> </ul> Seg\u00edts\u00e9g <p>A fenti be\u00e1ll\u00edt\u00e1sokhoz az al\u00e1bbi CSS oszt\u00e1lyt kell l\u00e9trehozni. <pre><code>    .logo {\nfloat: left;\n}\n</code></pre></p> </li> <li> <p>A navig\u00e1ci\u00f3ban l\u00e9v\u0151 linkb\u0151l men\u00fcpont k\u00e9sz\u00edt\u00e9se.</p> <ul> <li>Ne hozz l\u00e9tre CSS oszt\u00e1lyt, hanem a HTML tagekhez rendeld a szab\u00e1lyokat.</li> <li>Csak a navig\u00e1ci\u00f3n bel\u00fcli felsorol\u00e1s n\u00e9zzen \u00edgy ki.</li> <li>Az <code>ul</code> tagre \u00e1ll\u00edtsd be, hogy ne legyen marg\u00f3 \u00e9s ne legyenek el\u0151tte p\u00f6tty\u00f6k</li> <li>Az <code>li</code> tagekre \u00e1ll\u00edtsd be, hogy egym\u00e1s mell\u00e9 ker\u00fcljenek (<code>inline-block</code>), legyen k\u00f6zt\u00fck 40px t\u00e1vols\u00e1g \u00e9s f\u00fcgg\u0151legesen k\u00f6z\u00e9pre legyenek igaz\u00edtva.</li> </ul> Seg\u00edts\u00e9g <ul> <li>K\u00e9t szab\u00e1lyt kell l\u00e9trehozni <code>nav ul</code> \u00e9s <code>nav ul li</code></li> <li>A felsorol\u00e1s p\u00f6ttyeit az <code>ul</code>-en lehet megadni a <code>list-style</code> seg\u00edts\u00e9g\u00e9vel</li> <li>Az <code>li</code>-ket <code>inline-block</code>-k\u00e9nt \u00e9rdemes megjelen\u00edteni</li> <li>Az egyes elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1gokra a <code>padding</code>-ot \u00e9rdemes haszn\u00e1lni.</li> <li>F\u00fcgg\u0151leges igaz\u00edt\u00e1shoz a <code>line-height</code>-t kell be\u00e1ll\u00edtani a fejl\u00e9c magass\u00e1g\u00e1ra. (60px)</li> </ul> </li> <li> <p>A navig\u00e1ci\u00f3s linkek sz\u00edn\u00e9nek be\u00e1ll\u00edt\u00e1sa</p> <ul> <li>A fejl\u00e9cben l\u00e9v\u0151 navig\u00e1ci\u00f3s linkek legyenek feh\u00e9r sz\u00edn\u0171ek, a bet\u0171m\u00e9ter pedig 1.1em</li> <li>Ha egy menupont (link) f\u00f6l\u00e9 vissz\u00fck az egeret, akkor a bet\u0171 sz\u00edne legyen sz\u00fcrke.</li> </ul> </li> </ol>"},{"location":"laborok/09-css/#beadando_3","title":"Beadand\u00f3","text":"<p>4. feladat - Fejl\u00e9c beadand\u00f3 (1 pont)</p> <p>Commitolja a <code>index.html</code> \u00e9s <code>navbar.css</code> f\u00e1jlokat a repositoryba!</p> <p>Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! <code>f4-1.png</code></p>"},{"location":"laborok/09-css/#43-fo-hir-megjelenitese","title":"4.3 F\u0151 h\u00edr megjelen\u00edt\u00e9se","text":"<p>A f\u0151 h\u00edr megjelen\u00e9s\u00e9t a <code>news.css</code> f\u00e1jlba k\u00e9sz\u00edtse el, ami m\u00e1r l\u00e9tre van hozva, viszont egyel\u0151re \u00fcres. (A HTML oldal m\u00e1r hivatkozik r\u00e1.)</p> <p> </p> F\u0151 h\u00edr megjelen\u00edt\u00e9se <p>A kezd\u0151oldalon a legfrissebb h\u00edr jelenik meg.</p> <ul> <li> <p>A h\u00edrnek van egy fejl\u00e9ce amiben megtal\u00e1lhat\u00f3 a szerz\u0151 profilk\u00e9pe, c\u00edm, szerz\u0151 \u00e9s a publik\u00e1l\u00e1si d\u00e1tum.  Ezeket a csatolt k\u00e9perny\u0151k\u00e9p alapj\u00e1n rendezze \u00e9s form\u00e1zza!</p> <ul> <li>A szerz\u0151 profilk\u00e9pe <ul> <li>80px x 80px legyen. Akkor is \u00e1ll\u00edtsuk ezt be a CSS-ben ha a k\u00e9p pont ekkora. </li> <li>Igaz\u00edtsuk balra, hogy a c\u00edm, szerz\u0151 \u00e9s d\u00e1tum mell\u00e9 ker\u00fclj\u00f6n.</li> <li>A k\u00e9p \u00e9s a sz\u00f6veg k\u00f6z\u00f6tt legyen 1rem t\u00e1vols\u00e1g.</li> </ul> </li> <li>A c\u00edmnek csak als\u00f3 marg\u00f3ja legyen <code>.75rem</code></li> <li>A n\u00e9v legyen f\u00e9lk\u00f6v\u00e9r \u00e9s az als\u00f3 paddingja <code>.25rem</code></li> <li>A publik\u00e1l\u00e1s d\u00e1tuma legyen sz\u00fcrke, d\u0151lt bet\u0171vel \u00e9s a bet\u0171m\u00e9rete legyen <code>.75rem</code></li> </ul> </li> <li> <p>\u00c1ll\u00edtsd be, hogy a h\u00edr elem 1rem t\u00e1vols\u00e1got tartson a befoglal\u00f3 elemekt\u0151l. (Tipp: <code>padding</code>)</p> </li> <li>A h\u00edr t\u00f6rzse egy bevezet\u0151, k\u00e9p majd tov\u00e1bbi tartalomb\u00f3l \u00e1ll.</li> <li>A h\u00edrhez tartoz\u00f3 k\u00e9pek legyen k\u00f6z\u00e9pre igaz\u00edtva. Ehhez a be\u00e1ll\u00edt\u00e1st az <code>.image</code> CSS oszt\u00e1lyon \u00e9rdemes be\u00e1ll\u00edtani.</li> <li> <p>Egy k\u00e9p maxim\u00e1lis sz\u00e9less\u00e9ge 250px legyen, de csak azok, amik az <code>.images</code> alatt vannak.</p> </li> <li> <p>\u00c1ll\u00edtsd be a f\u0151 tartalmi r\u00e9sz <code>main</code> tag sz\u00e9less\u00e9g\u00e9t \u00fagy, hogy ne l\u00f3gjon be az oldals\u00f3 has\u00e1b al\u00e1, de \u00fagy, hogy reszponz\u00edv maradjon. Mivel ez a m\u00f3dos\u00edt\u00e1s a layoutot \u00e9rinti ez\u00e9rt a <code>main.css</code> -ben v\u00e9gezd el.</p> </li> </ul> Seg\u00edts\u00e9g <ul> <li>Az egyik megold\u00e1s, hogy a f\u0151 tartalmi r\u00e9sz <code>main</code> tagre be\u00e1ll\u00edtasz egy jobb oldali marg\u00f3t, ami \u00e9ppen akkora mint a jobb oldali has\u00e1b, \u00edgy az oldals\u00f3 s\u00e1v csak a marg\u00f3t fogja kitakarni.</li> <li>A m\u00e1sik megold\u00e1s, hogy a sz\u00e9less\u00e9g megad\u00e1s\u00e1n\u00e1l a <code>calc</code> seg\u00edts\u00e9g\u00e9vel ki lehet sz\u00e1molni, hogy a teljes sz\u00e9less\u00e9gb\u0151l adott pixelt levonva mennyi hely marad. Ezt a b\u00f6ng\u00e9sz\u0151 renderel\u00e9skor mindig \u00fajrasz\u00e1molja. Az\u00e9rt kell ilyen megold\u00e1st v\u00e1lasztani, mert a jobb oldali has\u00e1b abszol\u00fat poz\u00edcion\u00e1lt, \u00edgy nek\u00fcnk kell figyelni arra, hogy te takarjon ki semmit se.<ul> <li>\u00cdgy a <code>width: calc(100% - 450px)</code> t\u0171nik a j\u00f3 v\u00e1laszt\u00e1snak, mert 450px sz\u00e9les a jobb oldali has\u00e1b.</li> </ul> </li> <li>Ellen\u0151rizz\u00fck, hogy t\u00e9nyleg helyes \u00e9rt\u00e9ket \u00e1ll\u00edtottunk-e be, mert a jobb oldali has\u00e1b sz\u00e9less\u00e9ge att\u00fal f\u00fcgg, hogy milyen box model van rajta be\u00e1ll\u00edtva. Most a jobb oldali has\u00e1b sz\u00e9less\u00e9ge 450px + a padding. \u00c1ll\u00edtsd \u00e1t a box modellt \u00fagy, hogy a padding ne sz\u00e1mol\u00f3djon bele. Tipp: <code>box-sizing</code></li> </ul>"},{"location":"laborok/09-css/#beadando_4","title":"Beadand\u00f3","text":"<p>4. feladat - H\u00edr sz\u00f6vege beadand\u00f3 (1 pont)</p> <p>Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! <code>f4-2.png</code></p>"},{"location":"laborok/09-css/#44-oldalso-sav","title":"4.4 Oldals\u00f3 s\u00e1v","text":"<p>Az oldals\u00f3 s\u00e1v megjelen\u00edt\u00e9s\u00e9t is a <code>news.css</code> f\u00e1jlba k\u00e9sz\u00edtsd el.</p> <p> </p> Oldals\u00f3 s\u00e1v <ul> <li>Az oldals\u00f3 s\u00e1vban l\u00e9v\u0151 cikkek c\u00edm\u00e9nek bet\u0171m\u00e9rete legyen <code>1rem</code>, \u00e9s az als\u00f3 marg\u00f3ja legyen <code>.5rem</code> a t\u00f6bbi legyen <code>0</code>.</li> <li>K\u00e9sz\u00edts CSS szab\u00e1lyt, hogy az egyes h\u00edrek k\u00f6z\u00f6tt (csak ami az oldals\u00f3 s\u00e1vban van) legyen egy elv\u00e1laszt\u00f3 vonal \u00e9s <code>1rem</code> t\u00e1vols\u00e1g a k\u00f6vetkez\u0151 elemt\u0151l.</li> <li> <p>Az utols\u00f3 h\u00edr ut\u00e1n viszont m\u00e1r ne legyen elv\u00e1laszt\u00f3 vonal (Tipp: <code>:last-child</code>)</p> </li> <li> <p>\u00c1ll\u00edtsd be, hogy a jobb oldali has\u00e1b a rendelkez\u00e9sre \u00e1ll\u00f3 teljes magass\u00e1got t\u00f6ltse ki. Mivel ez is layout be\u00e1ll\u00edt\u00e1s ez\u00e9rt a <code>main.css</code> -ben \u00e1ll\u00edtsd be az <code>aside</code> tagen.</p> <ul> <li>A magass\u00e1got a <code>calc</code> seg\u00edts\u00e9g\u00e9vel lehet kisz\u00e1molni, de ez robosztuss\u00e1g szempontj\u00e1b\u00f3l az\u00e9rt nem a legjobb megold\u00e1s, mert ha v\u00e1ltozik a fix r\u00e9sz (fejl\u00e9c, l\u00e1bl\u00e9c, marg\u00f3k...) akkor m\u00f3dos\u00edtani kell ezt a szab\u00e1lyt is.</li> <li>A m\u00e1sik megold\u00e1s egy jelenleg experimental f\u00e1zisban l\u00e9v\u0151 megold\u00e1s haszn\u00e1lata. Hivatalosan a <code>height: stretch</code> \u00e9rt\u00e9k lenne, de ez m\u00e9g ezen a n\u00e9ven nem t\u00e1mogatott. Viszont a Chromium alap\u00fa b\u00f6ng\u00e9sz\u0151k a <code>height: -webkit-fill-available</code> n\u00e9vvel t\u00e1mogatj\u00e1k. Ez a be\u00e1ll\u00edt\u00e1s azt jelenti, hogy az elem magass\u00e1ga annyi legyen amennyi hely rendelkez\u00e9sre \u00e1ll. (R\u00e9szletek a t\u00e1mogatotts\u00e1gr\u00f3l: https://caniuse.com/mdn-css_properties_height_stretch)</li> <li>Ezen fel\u00fcl m\u00e9g be kell \u00e1ll\u00edtani, hogy a sz\u00f6veg ne l\u00f3gjon ki az elemb\u0151l, azaz automatikusan jelenjen meg a scroll, ha sz\u00fcks\u00e9ges.</li> </ul> </li> </ul>"},{"location":"laborok/09-css/#beadando_5","title":"Beadand\u00f3","text":"<p>4. feladat - Oldals\u00f3 s\u00e1v beadand\u00f3 (1 pont)</p> <p>Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! <code>f4-3.png</code></p>"},{"location":"laborok/09-css/#imsc-beadando","title":"IMSc Beadand\u00f3","text":"<p>4. feladat - Oldals\u00f3 s\u00e1v beadand\u00f3 (1 IMSc pont)</p> <ul> <li>Ha az oldals\u00f3 h\u00edr c\u00edme r\u00f6vid, akkor a tartalmi r\u00e9sz felcs\u00faszik al\u00e1 a <code>float</code> miatt. K\u00e9sz\u00edtsd szab\u00e1lyt, ami a HTML m\u00f3dos\u00edt\u00e1sa n\u00e9lk\u00fcl az oldals\u00f3 s\u00e1vban l\u00e9v\u0151 h\u00edrek fejl\u00e9ce ut\u00e1n t\u00f6rli a floatol\u00e1st.</li> <li>Haszn\u00e1lt a <code>::after</code> -t a megold\u00e1shoz Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel a megold\u00e1st! <code>f4-3-iMsc.png</code></li> </ul>"},{"location":"laborok/09-css/#45-reszponzivitas","title":"4.5 Reszponzivit\u00e1s","text":"<p>Eg\u00e9sz\u00edtse ki a <code>main.css</code> f\u00e1jlt \u00fagy, hogy ha 900px-n\u00e9l kisebbre \u00e1ll\u00edtjuk az ablakot, akkor a jobb oldali s\u00e1v t\u0171nj\u00f6n el, \u00e9s a teljes oldalt a f\u0151 h\u00edr foglalja el. (Tipp: <code>@media( max-width: 900px )</code>)</p> <p>Tippek a megold\u00e1shoz</p> <ul> <li>Haszn\u00e1lja a b\u00f6ng\u00e9sz\u0151 DOM vizualiz\u00e1l\u00f3 eszk\u00f6zt, \u00edgy l\u00e1thatja, hogy a kijel\u00f6lt elemre milyen CSS szab\u00e1lyok illeszkednek, \u00edgy k\u00f6nnyen kider\u00edthet\u0151, hogy kisebb ablak m\u00e9retn\u00e9l mit kell m\u00f3dos\u00edtani.</li> <li>A megold\u00e1s att\u00f3l f\u00fcgg, hogy sz\u00e9less\u00e9get, vagy marg\u00f3t \u00e1ll\u00edtott\u00e1l annak \u00e9rdek\u00e9ben, hogy a jobb oldali has\u00e1b ne takarja ki a tartalmat, hiszen pont ezt az \u00e9rt\u00e9ket kell majd \u00e1t\u00e1ll\u00edtani, ha nem l\u00e1tsz\u00f3dik a jobb oldali has\u00e1b</li> <li>Els\u0151k\u00e9nt el kell rejteni a teljes jobb oldali has\u00e1bot.</li> <li>Be kell \u00e1ll\u00edtani alap\u00e9rtelmezettre a sz\u00e9less\u00e9get / jobb oldali marg\u00f3t, hogy ha nem l\u00e1tsz\u00f3dik a jobb oldali has\u00e1b, akkor a teljes k\u00e9perny\u0151t kit\u00f6ltse a f\u0151 tartalmi r\u00e9sz.</li> <li><code>@media</code> query-ket az <code>and</code> \u00e9s az <code>or</code> logikai oper\u00e1torokkal tud egym\u00e1s ut\u00e1n f\u0171zni, pl. <code>@media screen and (min-width: 200px) {...}</code>, neg\u00e1lni a <code>not</code> kulcssz\u00f3val lehets\u00e9ges, b\u00e1r ebben a megold\u00e1sban erre nem lesz sz\u00fcks\u00e9g.</li> </ul>"},{"location":"laborok/09-css/#beadando_6","title":"Beadand\u00f3","text":"<p>4. Feladat - Reszponzivit\u00e1s beadand\u00f3 (0.5 pont)</p> <p>Demonstr\u00e1lja k\u00e9perny\u0151k\u00e9ppel (<code>f4-4.png</code>), hogy 900px alatt nem l\u00e1tsz\u00f3dik a jobb oldali has\u00e1b.</p>"},{"location":"laborok/10-bootstrap/","title":"Labor 10 - Bootstrap","text":""},{"location":"laborok/10-bootstrap/#elokeszulet","title":"El\u0151k\u00e9sz\u00fclet","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github.</p>"},{"location":"laborok/10-bootstrap/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<ol> <li>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</li> <li>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.<ul> <li>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</li> </ul> </li> <li>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</li> <li>A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</li> </ol>"},{"location":"laborok/10-bootstrap/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A webfejleszt\u00e9sben \u00e1ltal\u00e1nos jelens\u00e9g, hogy a diz\u00e1jnerek \"csak\" UI / UX terveket \u00e1ll\u00edtanak \u00f6ssze HTML \u00e9s CSS k\u00f3dot nem \u00edrnak, \u00edgy a fejleszt\u0151k kapj\u00e1k azt a feladatot, hogy a megtervezett kin\u00e9zet\u0171re var\u00e1zsolj\u00e1k az alkalmaz\u00e1st.</p> <p>A UI/UX tervek k\u00fcl\u00f6nb\u00f6z\u0151 szoftverekkel k\u00e9sz\u00fclnek att\u00f3l f\u00fcgg\u0151en, hogy mi a c\u00e9lja. Azonban egy dolog mindegyikben k\u00f6z\u00f6s. Gyorsan lehet prototipiz\u00e1lni vele, ami k\u00f6nnyen dem\u00f3zhat\u00f3 a megrendel\u0151nek.</p> <ul> <li>A dr\u00f3tv\u00e1z (wireframe), ahol a hangs\u00faly az elrendez\u00e9sen \u00e9s az adatokon van, nem a sz\u00edneken ott gyakran Figma-ban k\u00e9sz\u00fcl a kin\u00e9zet.      Elk\u00e9sz\u00edtett oldalv\u00e1z figma seg\u00edts\u00e9g\u00e9vel </li> <li>Ha a hangs\u00faly ink\u00e1bb a sz\u00ednvil\u00e1gon \u00e9s a designon van, akkor pedig a Zeplin egy gyakori v\u00e1laszt\u00e1s.      Zeplin </li> </ul> <p>A fejleszt\u00e9s c\u00e9lj\u00e1b\u00f3l mindegy is, hogy melyik alkalmaz\u00e1sban k\u00e9sz\u00fcl el az oldal designja, a rajzokb\u00f3l CSS \u00e9s HTML k\u00f3dot a fejleszt\u0151nek kell k\u00e9sz\u00edtenie.</p> <p>A mai labor alkalm\u00e1val az al\u00e1bbi k\u00e9pb\u0151l (\u00e9s egy kicsi HTML v\u00e1z seg\u00edts\u00e9g\u00e9vel) kell az oldalt elk\u00e9sz\u00edteni.</p> <p> </p> Elk\u00e9sz\u00edtend\u0151 oldal designja"},{"location":"laborok/10-bootstrap/#ismerkedes-a-kiindulo-projekttel","title":"Ismerked\u00e9s a kiindul\u00f3 projekttel","text":"<ol> <li>Nyissuk meg a VS Code-dal lekl\u00f3nozott repository <code>feladat</code> mapp\u00e1j\u00e1t (File -&gt; Open Folder)!</li> <li>Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az <code>index.html</code> megnyit\u00e1sa ut\u00e1n, vagy F1 &gt; \"Live Server: Open with Live Server\")!</li> <li>Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s!</li> </ol> <p>A diz\u00e1jnol\u00e1s folyam\u00e1n \u00e1ltal\u00e1ban valamilyen keretrendszerb\u0151l indulunk ki, mely k\u00e9sz megold\u00e1sokat ad a leggyakoribb feladatokra, \u00edgy cs\u00f6kkentve az egyedi CSS mennyis\u00e9g\u00e9t. A Bootstrap k\u00e9t alapvet\u0151 funkci\u00f3t ny\u00fajt:</p> <ul> <li>Layout rendszer <ul> <li>Reszponz\u00edv megjelen\u00e9s.</li> <li>Bootstrap Gridre \u00e9p\u00fcl, ami flexbox alap\u00fa</li> <li>5.1-t\u0151l lehet\u0151s\u00e9ged az, hogy a SASS forr\u00e1sk\u00f3ban lecser\u00e9lj\u00fck a BootStrap Grid-et CSS Grid-re, ez m\u00e9g egyel\u0151re exparimental st\u00e1tuszban van. (R\u00e9szletek itt tal\u00e1lhat\u00f3k.)</li> </ul> </li> <li>Egys\u00e9ges sz\u00ednek \u00e9s form\u00e1z\u00e1s az alapvet\u0151 elemekre.</li> <li>Gyakori komponensek (felugr\u00f3 ablakok, k\u00e1rty\u00e1k, nyithat\u00f3-z\u00e1rhat\u00f3 blokkok, kiemel\u00e9sek, panelek) CSS \u00e9s JS seg\u00edts\u00e9g\u00e9vel.</li> </ul> <p>A laboron ezekb\u0151l a k\u00e9sz komponensekb\u0151l fogunk megismerni egy p\u00e1rat k\u00f6zelebbr\u0151l is.</p>"},{"location":"laborok/10-bootstrap/#bootstrap-hozzaadasa-egy-oldalhoz","title":"Bootstrap hozz\u00e1ad\u00e1sa egy oldalhoz","text":"<ul> <li>Nyissuk meg az <code>index.html</code> f\u00e1jlt, amit a labor sor\u00e1n meg fogunk form\u00e1zni.</li> <li>N\u00e9zz\u00fck meg, hogy az oldal <code>head</code>-j\u00e9ben milyen \u00e1llom\u00e1nyokat \u00e9s honnan t\u00f6lt\u00fcnk be.   <pre><code>&lt;head&gt;\n  &lt;meta charset=\"utf-8\"&gt;\n  &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n  &lt;title&gt;MyBlog&lt;/title&gt;\n\n  &lt;!-- Bootstrap linkel\u00e9se CDN-r\u0151l --&gt;\n  &lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\"&gt;\n\n  &lt;!-- Font awesome 6 CDN-r\u0151l (solid, regular \u00e9s brand is) --&gt;\n  &lt;link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v6.2.0/css/all.css\" crossorigin=\"anonymous\"&gt;\n\n  &lt;!-- Google font (Muli) let\u00f6lt\u00e9se --&gt;\n  &lt;link href=\"https://fonts.googleapis.com/css?family=Muli\" rel=\"stylesheet\"&gt;\n\n  &lt;!-- Saj\u00e1t CSS --&gt;\n  &lt;link rel=\"stylesheet\" href=\"assets/css/site.css\"&gt;\n&lt;/head&gt;\n</code></pre></li> <li>Figyelj\u00fck meg, hogy n\u00e9gy k\u00fcl\u00f6nb\u00f6z\u0151 CSS \u00e1llom\u00e1nyt t\u00f6lt\u00fcnk be, egy kiv\u00e9tel\u00e9vel CDN-r\u0151l:<ul> <li>Az els\u0151 mag\u00e1t a Bootstrap-et t\u00f6lti be.</li> <li>Ezt k\u00f6vet\u0151en egy gyakran haszn\u00e1lt ikongy\u0171jtem\u00e9nyt, a Font Awesome-ot t\u00f6ltj\u00fck le.</li> <li>Ezen fel\u00fcl, mivel egyedi bet\u0171t\u00edpust haszn\u00e1lunk, azt a Google fonts oldal\u00e1r\u00f3l t\u00f6ltj\u00fck le.</li> <li>A legutols\u00f3 hivatkoz\u00e1s pedig az \u00e1ltalunk k\u00e9sz\u00edtett CSS f\u00e1jlt hivatkozza be.</li> </ul> </li> </ul> <p>Bet\u00f6lt\u00e9si lehet\u0151s\u00e9gek</p> <p>A CSS \u00e9s JS k\u00f6nyvt\u00e1rakat t\u00f6bbf\u00e9lek\u00e9ppen is be tudjuk t\u00f6lteni:</p> <ul> <li>CDN-r\u0151l, publikus webr\u0151l t\u00f6lti le a CSS f\u00e1jlt, amit most is haszn\u00e1lunk,</li> <li>van lehet\u0151s\u00e9g\u00fcnk csomagkezel\u0151t (npm, bower) haszn\u00e1lni let\u00f6lt\u00e9sre \u00e9s magunk kiszolg\u00e1lni a f\u00e1jlt,</li> <li>ak\u00e1r saj\u00e1t magunk k\u00e9zzel is let\u00f6lthetj\u00fck a megfelel\u0151 f\u00e1jlokat, ebben az esetben is a saj\u00e1t webszerver\u00fcnk szolg\u00e1lja ki ezeket a f\u00e1jlokat.</li> </ul> <p>Ha az alkalmaz\u00e1s elrendez\u00e9s\u00e9t szeretn\u00e9nk megadni, el\u00e9g sok boilerplate-jelleg\u0171 CSS k\u00f3dot kellene \u00edrnunk. A Bootstrap megk\u00f6zel\u00edt\u00e9se, hogy a gyakori elrendez\u00e9si lehet\u0151s\u00e9geket \u00e9s st\u00edlusoz\u00e1si lehet\u0151s\u00e9geket k\u00e9szen \u00e9s konfigur\u00e1lhat\u00f3an adja nek\u00fcnk.</p> <p>A megval\u00f3s\u00edtand\u00f3 oldal az al\u00e1bbi f\u0151bb r\u00e9szekb\u0151l \u00e1ll:</p> <ul> <li>navig\u00e1ci\u00f3s s\u00e1v,</li> <li>oldal k\u00f6zponti eleme, ami blogbejegyz\u00e9sek list\u00e1j\u00e1t tartalmazza,</li> <li>l\u00e1bl\u00e9c.</li> </ul>"},{"location":"laborok/10-bootstrap/#1-feladat-reszponziv-navigacios-sav","title":"1. Feladat - Reszponz\u00edv navig\u00e1ci\u00f3s s\u00e1v","text":"<p>Els\u0151 l\u00e9p\u00e9sk\u00e9nt az oldal navig\u00e1ci\u00f3s s\u00e1vj\u00e1t k\u00e9sz\u00edtj\u00fck el.</p> <p>A navig\u00e1ci\u00f3s s\u00e1v fel\u00e9p\u00edt\u00e9se a k\u00f6vetkez\u0151:</p> <ul> <li>bal sz\u00e9len tal\u00e1lhat\u00f3 a BME AUT logo, ami az <code>./assets/img/logo-bme-aut.png</code> \u00fatvonalon \u00e9rhet\u0151 el,</li> <li>ezt k\u00f6vet\u0151en a k\u00e9t navig\u00e1ci\u00f3s link: Home \u00e9s Registration,</li> <li>a s\u00e1v jobb sz\u00e9l\u00e9n pedig egy keres\u00e9s sz\u00f6vegdoboz \u00e9s egy Search felirat\u00fa gomb tal\u00e1lhat\u00f3.</li> </ul> <p>A HTML v\u00e1z szerepel a kiindul\u00f3 <code>index.html</code>-ben, de ebben is kell majd m\u00f3dos\u00edt\u00e1sokat v\u00e9gezni.</p> Fejl\u00e9c tervezett kin\u00e9zete az egyes felbont\u00e1sokon <p> Fejl\u00e9c magas felbont\u00e1son </p> <p> Fejl\u00e9c alacsony felbont\u00e1son </p> <p> Fejl\u00e9c alacsony felbont\u00e1son nyitva </p> <p>A navig\u00e1ci\u00f3s s\u00e1v form\u00e1z\u00e1sa gyakori feladat, \u00edgy a Bootstrap ad r\u00e1 k\u00e9sz komponenst, a navbar -t. </p> <p>A navig\u00e1ci\u00f3t is reszponz\u00edvan kell megval\u00f3s\u00edtani, teh\u00e1t ha \u00e1tm\u00e9retezz\u00fck az oldalt, akkor a navig\u00e1ci\u00f3s men\u00fcpontokat el kell rejteni \u00e9s egy \u00fagynevezett hamburger men\u00fct kell megjelen\u00edteni helyette, amire kattintva megjelennek a men\u00fcpontok.</p> <p>A feladat elk\u00e9sz\u00edt\u00e9se el\u0151tt n\u00e9zz\u00fck meg, hogyan \u00e9p\u00fcl fel a Bootstrap navbar komponense. Az oldalon tal\u00e1lunk k\u00e9sz HTML v\u00e1zakat is.</p> <p>Alapvet\u0151en k\u00e9t ir\u00e1nyba indulhatunk el</p> <ul> <li>A Bootstrap mintak\u00f3dj\u00e1t m\u00e1soljuk \u00e1t egyben \u00e9s ebbe illesztj\u00fck bele a saj\u00e1t tartalmunkat.</li> <li>A saj\u00e1t HTML oldalv\u00e1zunkb\u00f3l indulunk ki \u00e9s eg\u00e9sz\u00edtj\u00fck ki l\u00e9p\u00e9sr\u0151l l\u00e9p\u00e9sre a Bootstrap mint\u00e1ban szerepl\u0151 elemekkel \u00e9s oszt\u00e1lyokkal.</li> </ul> A legfontosabb oszt\u00e1lyok, amire a navbar \u00e9p\u00edt <ul> <li><code>nav</code> tagen \u00e9rtelmezett oszt\u00e1lyok<ul> <li><code>navbar</code>: Maga a navig\u00e1ci\u00f3s s\u00e1v.</li> <li><code>navbar-expand{-sm|-md|-lg|-xl|-xxl}</code>: T\u00f6r\u00e9spont defini\u00e1l\u00e1sa ami alatt a hamburger ikonnak kell l\u00e1tsz\u00f3dia, f\u00f6l\u00f6tte pedig a rendes navig\u00e1ci\u00f3s linkeknek.</li> <li><code>navbar-dark</code> \u00e9s <code>bg-dark</code>: S\u00f6t\u00e9t t\u00e9ma haszn\u00e1lata. </li> </ul> </li> <li><code>.navbar-brand</code>: brand logo megjelen\u00edt\u00e9s\u00e9re.</li> <li>Hamburger ikon form\u00e1z\u00e1sa<ul> <li><code>navbar-toggler</code>: A hamburger ikon gombj\u00e1ra kell tenni. Mobil n\u00e9zeten el lehessen rejteni a linkeket egy hamburger men\u00fc al\u00e1.</li> <li><code>data-bs-toggle</code>: Ha r\u00e1kattintanak minek kell t\u00f6rt\u00e9nnie. Val\u00f3j\u00e1ban ez v\u00e1ltja ki az a JS h\u00edv\u00e1st, aminek hat\u00e1s\u00e1ra a <code>data-bs-target</code>-ben megadott elemen mit hajtson v\u00e9gre.</li> <li><code>data-bs-target</code>: Melyik elemen kell v\u00e9grehatani a toggle m\u0171veletet.</li> <li>Az <code>aria-*</code> tagek az Accessibility szempontj\u00e1b\u00f3l fontosak, de ezek megad\u00e1sa n\u00e9lk\u00fcl is m\u0171k\u00f6dik minden.<ul> <li><code>aria-controls</code>: Melyik HTML elemet vez\u00e9rli ez az elem.</li> <li><code>aria-expanded</code>: Azt adja meg, hogy az elem \u00e9ppen z\u00e1rva <code>collapsed</code> vagy nyitva <code>expanded</code> van.</li> <li><code>aria-label</code>: Mivel itt labelt nem tudunk megadni, ide lehet megadni azt a sz\u00f6veget, amit a <code>label</code>-nek adn\u00e1nk.</li> </ul> </li> </ul> </li> <li>Men\u00fcelemek form\u00e1z\u00e1sa<ul> <li><code>collapse</code> \u00e9s <code>navbar-collapse</code>: Ez mondja meg, hogy az adott elem nyitva vagy z\u00e1rva jelenjen meg, ha a hamburger ikon akt\u00edv. Ezen az elemen kell be\u00e1ll\u00edtani azt az <code>id</code>-t amit a <code>data-bs-target</code>-ben megadtunk.</li> <li><code>.navbar-nav</code>: teljes magass\u00e1g\u00fa egyszer\u0171 navig\u00e1ci\u00f3s elemek megad\u00e1s\u00e1hoz (a leg\u00f6rd\u00fcl\u0151 lista is t\u00e1mogatott).</li> <li><code>.nav-item</code>: Egy men\u00fcpont a navig\u00e1ci\u00f3s list\u00e1ban.</li> <li><code>.nav-link</code>: Egy men\u00fcponton bel\u00fcli linkre kell r\u00e1tenni.</li> <li><code>.active</code>: Kiv\u00e1lasztott navig\u00e1ci\u00f3s elem. \u00c9rtemes az <code>aria-current=\"page\"</code>-el egy\u00fctt \u00e1ll\u00edtani.</li> </ul> </li> <li><code>.navbar-text</code>: ha f\u00fcgg\u0151legesen k\u00f6z\u00e9pre igaz\u00edtott sz\u00f6veget szeretn\u00e9nk haszn\u00e1lni.</li> <li><code>.collapse.navbar-collapse</code>: elemek csoportos elrejt\u00e9s\u00e9re haszn\u00e1lhat\u00f3.</li> </ul> <ul> <li> <p>V\u00e1lasszuk kiindul\u00e1snak ezt a template-et. Ebben m\u00e1r benne van minden fontos funkci\u00f3, csak testre kell szabni a tartalm\u00e1t \u00e9s egy-egy helyen a megjelen\u00e9s\u00e9t.</p> </li> <li> <p>Enn\u00e9l a feladatn\u00e1l azt a megold\u00e1st v\u00e1lasztjuk, hogy a Boostrap \u00e1ltal ny\u00fajtott minta k\u00f3dot szabjuk testre, hogy azok a tartalmi elemek legyenek benne ami nek\u00fcnk kell.</p> </li> <li>M\u00e1soljuk be a template teljes k\u00f3dj\u00e1t a <code>index.html</code>-be.</li> </ul> <pre><code>&lt;!-- Navig\u00e1ci\u00f3s s\u00e1v --&gt;\n&lt;nav class=\"navbar navbar-expand-lg bg-light\"&gt;\n    &lt;div class=\"container\"&gt;\n\n        &lt;!-- Brand --&gt;\n        &lt;a class=\"navbar-brand\" href=\"#\"&gt;Navbar&lt;/a&gt;\n\n        &lt;!-- Hamburger men\u00fc  --&gt;\n        &lt;button class=\"navbar-toggler\" type=\"button\" \n            data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\"&gt;\n            &lt;span class=\"navbar-toggler-icon\"&gt;&lt;/span&gt;\n        &lt;/button&gt;\n\n        &lt;!-- Ez az elem z\u00e1r\u00f3dik be ha a hamburger ikonra kattintunk --&gt;\n        &lt;div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\"&gt;\n\n            &lt;!-- Navig\u00e1ci\u00f3s linkek --&gt;\n            &lt;ul class=\"navbar-nav me-auto mb-2 mb-lg-0\"&gt;\n                &lt;li class=\"nav-item\"&gt;\n                    &lt;a class=\"nav-link active\" aria-current=\"page\" href=\"#\"&gt;Home&lt;/a&gt;\n                &lt;/li&gt;\n                &lt;li class=\"nav-item\"&gt;\n                    &lt;a class=\"nav-link\" href=\"#\"&gt;Link&lt;/a&gt;\n                &lt;/li&gt;\n                &lt;li class=\"nav-item dropdown\"&gt;\n                    &lt;a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\"\n                        data-bs-toggle=\"dropdown\" aria-expanded=\"false\"&gt;\n                        Dropdown\n                    &lt;/a&gt;\n                    &lt;ul class=\"dropdown-menu\"&gt;\n                        &lt;li&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;Action&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;Another action&lt;/a&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;hr class=\"dropdown-divider\"&gt;&lt;/li&gt;\n                        &lt;li&gt;&lt;a class=\"dropdown-item\" href=\"#\"&gt;Something else here&lt;/a&gt;&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/li&gt;\n                &lt;li class=\"nav-item\"&gt;\n                    &lt;a class=\"nav-link disabled\"&gt;Disabled&lt;/a&gt;\n                &lt;/li&gt;\n            &lt;/ul&gt;\n\n            &lt;!-- Keres\u0151 form --&gt;\n            &lt;form class=\"d-flex\" role=\"search\"&gt;\n                &lt;input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"&gt;\n                &lt;button class=\"btn btn-outline-success\" type=\"submit\"&gt;Search&lt;/button&gt;\n            &lt;/form&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/nav&gt;\n</code></pre> <ul> <li>Figyelj\u00fck meg, hogy a <code>nav</code> tagen m\u00e1r rajta van a <code>navbar</code> \u00e9s <code>navbar-expand-lg</code> oszt\u00e1ly, viszont be kell \u00e1ll\u00edtani, hogy s\u00f6t\u00e9t t\u00e9m\u00e1t haszn\u00e1ljon. Ehhez a <code>navbar-dark</code> \u00e9s <code>bg-dark</code> oszt\u00e1lyt kell haszn\u00e1lni. R\u00e9szletek: S\u00f6t\u00e9t t\u00e9ma haszn\u00e1lata.</li> <li>A <code>nav</code> alatt l\u00e9v\u0151 <code>div</code> tag szolg\u00e1l arra, hogy megadhassuk milyen sz\u00e9les legyen a fejl\u00e9c\u00fcnk. Itt a <code>container</code> vagy <code>container-fluid</code> \u00e9rt\u00e9keket c\u00e9lszer\u0171 haszn\u00e1lni.</li> <li>A k\u00f6vetkez\u0151 elem a brand, ami a template-ben egy link, amiben csak sima sz\u00f6veg tal\u00e1lhat\u00f3. <ul> <li>A link a https://www.aut.bme.hu oldalra navig\u00e1ljon.</li> <li>A linken bel\u00fcl tansz\u00e9ki log\u00f3 k\u00e9pe szerepeljen ami a <code>./assets/img/logo-bme-aut.png</code> URL-en \u00e9rhet\u0151 el.</li> <li>R\u00e9szletek: K\u00e9p haszn\u00e1lata a brandben.</li> </ul> </li> <li>Ezt egy <code>button</code> tag k\u00f6veti, ami a hamburger men\u00fc.<ul> <li>A <code>navbar-toggler</code> oszt\u00e1ly m\u00e1r szerepel is rajta</li> <li>Be van \u00e1ll\u00edtva, a <code>data-bs-target</code> tagben hogy melyik elemet kell megjelen\u00edtenie / elrejtenie \u00e9s az is</li> <li>\u00c9s l\u00e1thatjuk, hogy a <code>data-bs-toggle</code> tagben meg van adva, hogy a kattint\u00e1sra minek kell t\u00f6rt\u00e9nnie. </li> <li>A gombban pedig egy <code>span</code> tal\u00e1lhat\u00f3 ami pedig maga a hamburger men\u00fc k\u00e9pe.</li> <li>R\u00e9szletek: Collapse haszn\u00e1lata</li> </ul> </li> <li>A k\u00f6vetkez\u0151 r\u00e9szben az egyes navig\u00e1ci\u00f3s linkek szerepelnek itt kell a legnagyobb v\u00e1ltoztat\u00e1s.<ul> <li>Az els\u0151 <code>li</code> tagben l\u00e9v\u0151 link legyen a Home link ami az index.html oldara navig\u00e1ljon.</li> <li>A m\u00e1sodik <code>li</code> tagben l\u00e9v\u0151 link pedig a Registration ami a register.html oldalra navig\u00e1ljon.</li> <li>A t\u00f6bbi elemre nincs sz\u00fcks\u00e9g, t\u00f6r\u00f6lj\u00fck ki.</li> <li>R\u00e9szletek: Navig\u00e1ci\u00f3s linkek.</li> </ul> </li> <li>Az utols\u00f3 blokk pedig a keres\u0151 form.<ul> <li>\u00c1ll\u00edtsuk be, hogy a <code>form</code> als\u00f3 marg\u00f3ra 0 legyen. Tipp: <code>mb-0</code>.</li> <li>R\u00e9szletek Keres\u0151 form.</li> </ul> </li> </ul>"},{"location":"laborok/10-bootstrap/#beadando","title":"Beadand\u00f3","text":"<p>1. feladat beadand\u00f3 (1 pont)</p> <p>K\u00e9sz\u00edtsd el a fent ismertetett navig\u00e1ci\u00f3s s\u00e1vot Bootstrap seg\u00edts\u00e9g\u00e9vel. \u00dcgyelj a reszpoz\u00edv megjelen\u00edt\u00e9sre.</p> <p>K\u00e9sz\u00edtsd el az al\u00e1bbi k\u00e9perny\u0151k\u00e9peket az elk\u00e9sz\u00fclt navig\u00e1ci\u00f3s s\u00e1vr\u00f3l \u00e9s m\u00e1sold be \u0151ket a repository gy\u00f6ker\u00e9be!</p> <ul> <li>Magas felbont\u00e1son, ahol a keres\u0151 sz\u00f6vegdobozban a neptunk\u00f3dod szerepel <code>f1-high.png</code></li> <li>Kis felbont\u00e1s z\u00e1rt hamburger men\u00fc <code>f1-low.png</code></li> <li>Kis felbont\u00e1s lenyitott hamburger men\u00fc, ahol a keres\u0151 sz\u00f6vegdobozban a neptunk\u00f3dod szerepel <code>f1-low-open.png</code></li> </ul> <p>Commitold a m\u00f3dos\u00edtott HTML f\u00e1jlt a repositoryba!</p>"},{"location":"laborok/10-bootstrap/#imsc-szabaly-feluldefinialasa","title":"iMSc - Szab\u00e1ly fel\u00fcldefini\u00e1l\u00e1sa","text":"<p>A navig\u00e1ci\u00f3s men\u00fcben a linkek feh\u00e9r sz\u00edn\u0171ek, hiszen a Bootstrap erre \u00e1ll\u00edtja be.</p> <p>Defini\u00e1ld fel\u00fcl a Bootstrapben megadott men\u00fcpont sz\u00edneket a <code>site.css</code> -ben \u00fagy, hogy </p> <ul> <li>a linkek - kiv\u00e9ve az akt\u00edv elemet - z\u00f6ldek legyenek;</li> <li>ha egy men\u00fcpont f\u00f6l\u00e9 vissz\u00fck az egeret, akkor v\u00e1ltson s\u00f6t\u00e9tz\u00f6ldre;</li> <li>ha az akt\u00edv elem men\u00fcpontja f\u00f6l\u00e9 vissz\u00fck az egeret az is legyen s\u00f6t\u00e9tz\u00f6ld.</li> <li>Az <code>!important</code> kulcssz\u00f3t nem haszn\u00e1lhatod!</li> </ul> <p>A template amib\u0151l kiindultunk el\u00e9g nagy felbont\u00e1sn\u00e1l v\u00e1lt \u00e1t mobil n\u00e9zetre.  * M\u00f3dos\u00edtsd az index.html oldal k\u00f3dj\u00e1ban, hogy alacsonyabb felbont\u00e1son v\u00e1ltson \u00e1t mobil n\u00e9zetre.</p>"},{"location":"laborok/10-bootstrap/#beadando-imsc","title":"Beadand\u00f3 iMSc","text":"<p>1. feladat iMSc BEADAND\u00d3 (1 iMSc pont)</p> <p>K\u00e9sz\u00edts k\u00e9perny\u0151k\u00e9pet <code>f1-imsc-1.png</code> n\u00e9vvel \u00e9s m\u00e1sold a repository gy\u00f6ker\u00e9be  a b\u00f6ng\u00e9sz\u0151 devTool (F12) ablak\u00e1r\u00f3l, amin l\u00e1that\u00f3, hogy milyen CSS oszt\u00e1ly hat\u00e1rozza meg most az egyes men\u00fcpontok (pl.: Home) bet\u0171sz\u00edn\u00e9t.</p> <p>Commitold a m\u00f3dos\u00edtott HTML \u00e9s CSS f\u00e1jlt a repositoryba!</p>"},{"location":"laborok/10-bootstrap/#2-feladat-blog-bejegyzes","title":"2. Feladat - Blog bejegyz\u00e9s","text":"<p>A navig\u00e1ci\u00f3s s\u00e1v elk\u00e9sz\u00edt\u00e9se ut\u00e1n t\u00e9rj\u00fcnk \u00e1t a f\u0151 tartalmi elemre, a blog bejegyz\u00e9sek form\u00e1z\u00e1s\u00e1ra. El\u0151sz\u00f6r csak egy bejegyz\u00e9st form\u00e1zzunk meg \u00fagy, hogy az al\u00e1bbi designt kapjuk.</p> <p> </p> Egy blogbejegyz\u00e9s megjelen\u00e9se card haszn\u00e1lat\u00e1val <p>A blog post HTML v\u00e1za m\u00e1r szerepel az index oldalon, ezt kell kieg\u00e9sz\u00edteni a megfelel\u0151 Bootstrap oszt\u00e1lyokkal \u00e9s helyenk\u00e9nt k\u00e9sz\u00edteni egy-egy egyedi CSS szab\u00e1lyt, amivel kieg\u00e9sz\u00edtj\u00fck a Bootstrap-es oszt\u00e1lyokat.</p> <p>A feladat megold\u00e1sa el\u0151tt vizsg\u00e1ljuk meg a Bootstrap card komponenst!</p> <p>A card komponens legfontosabb CSS oszt\u00e1lyai az al\u00e1bbiak:</p> <ul> <li><code>card</code>: Maga a k\u00e1rtya</li> <li><code>card-body</code>: A k\u00e1rtya tartalmi r\u00e9sze</li> <li><code>card-title</code>: A bodyban haszn\u00e1ljuk a c\u00edm kiemel\u00e9s\u00e9re.</li> <li><code>card-footer</code>: A k\u00e1rtya l\u00e1bl\u00e9ce. Card header and footer</li> <li><code>card-img-top</code>: A k\u00e1rty\u00e1ba helyezett k\u00e9p fent jelenjen meg. Card image caps</li> </ul> <p>Az al\u00e1bbi k\u00f3dr\u00e9szlet egy k\u00e1rtya fel\u00e9p\u00edt\u00e9s\u00e9t mutatja, melyben k\u00e9p \u00e9s l\u00e1bl\u00e9c is szerepel.</p> <pre><code>&lt;div class=\"card\"&gt;\n  &lt;img src=\"...\" class=\"card-img-top\" alt=\"...\"&gt;\n  &lt;div class=\"card-body\"&gt;\n    &lt;h5 class=\"card-title\"&gt;Card title&lt;/h5&gt;\n    &lt;p class=\"card-text\"&gt;\n        Some quick example text to build on the card title and make up the bulk of the card's content.\n    &lt;/p&gt;\n  &lt;/div&gt;\n  &lt;div class=\"card-footer\"&gt;\n    Footer\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"laborok/10-bootstrap/#megvalositas-lepesei","title":"Megval\u00f3s\u00edt\u00e1s l\u00e9p\u00e9sei","text":"<p>El\u0151sz\u00f6r az oldal c\u00edmsor\u00e1t \u00e9s az alatta l\u00e9v\u0151 bekezd\u00e9st form\u00e1zzuk</p> <ul> <li>\u00c1ll\u00edtsd be, hogy a c\u00edm alatt \u00e9s f\u00f6l\u00f6tt legyen marg\u00f3. Tipp: <code>my-3</code></li> <li>A c\u00edmsor alatti bekezd\u00e9s legyen k\u00f6z\u00e9pre igaz\u00edtva. Tipp: <code>text-center</code></li> </ul> <p>A fenti k\u00e1rtya template alapj\u00e1n kell kieg\u00e9sz\u00edteni az el\u0151re elk\u00e9sz\u00edtett k\u00f3dv\u00e1zat.</p> <ul> <li>A k\u00e9p legyen a k\u00e1rtya tetej\u00e9n egy linkbe \u00e1gyazva. A k\u00e9p igaz\u00edt\u00e1s\u00e1hoz haszn\u00e1ld a <code>card-img-top</code> oszt\u00e1lyt.</li> <li>A k\u00e9p ut\u00e1n kezd\u0151dik k\u00e1rtya t\u00f6rzse <code>card-body</code>.</li> <li>A c\u00edmhez a <code>card-title</code> oszt\u00e1lyt haszn\u00e1ld, ami szint\u00e9n link is egyben. Itt k\u00e9sz\u00edteni kell egy k\u00fcl\u00f6n CSS szab\u00e1lyt, hogy a link sz\u00f6vege sz\u00fcrke legyen <code>#666</code>. Ha f\u00f6l\u00e9 viszik az egeret, akkor pedig s\u00f6t\u00e9tz\u00f6ld. Ha j\u00f3 helyre illeszted a CSS-ben az \u00faj szab\u00e1lyt, akkor csak egyet kell l\u00e9trehozni.</li> <li>A sz\u00f6veges r\u00e9szhez a <code>card-text</code> oszt\u00e1lyt haszn\u00e1ld.</li> <li>Az egy\u00e9b adatok pedig a k\u00e1rtya l\u00e1bl\u00e9c\u00e9ben <code>card-footer</code> jelenjenek meg. Tipp: A l\u00e1bl\u00e9chez \u00e9rdemes egyedi CSS oszt\u00e1ly(oka)t is defini\u00e1lni, melyben az al\u00e1bbiakat kell be\u00e1ll\u00edtani:<ul> <li>a l\u00e1bl\u00e9c f\u00f6l\u00f6tti vonal legyen szaggatott,</li> <li>a bet\u0171m\u00e9ret 0.75rem,</li> <li>a h\u00e1tt\u00e9rsz\u00edn \u00e1tl\u00e1tsz\u00f3,</li> <li>a l\u00e1bl\u00e9cben szerepl\u0151 linkek legyenek sz\u00fcrk\u00e9k \u00e9s ha f\u00f6l\u00e9 vissz\u00fck az egeret akkor z\u00f6ldek. Az ikonok mindig legyenek z\u00f6ldek.</li> <li>a l\u00e1bl\u00e9cben l\u00e9v\u0151 sz\u00f6veg elrendez\u00e9s\u00e9re is figyelj! Tip: haszn\u00e1lj flexboxot <code>d-flex</code> \u00fagy hogy az elemek k\u00f6z\u00f6tti t\u00e1vols\u00e1g n\u0151j\u00f6n csak. <code>justify-content-between</code>.</li> </ul> </li> </ul>"},{"location":"laborok/10-bootstrap/#beadando_1","title":"Beadand\u00f3","text":"<p>2. feladat beadand\u00f3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet a teljes oldalr\u00f3l, amin l\u00e1that\u00f3 az elk\u00e9sz\u00edtett blogpost - csak ez az egy - megform\u00e1zva \u00e9s m\u00e1sold a k\u00e9perny\u0151k\u00e9pet <code>f2.png</code> n\u00e9ven a repository gy\u00f6ker\u00e9be!</p>"},{"location":"laborok/10-bootstrap/#3-feladat-reszponziv-blog","title":"3. Feladat - Reszponz\u00edv blog","text":"<p>Eg\u00e9sz\u00edtsd ki a HTML k\u00f3dot \u00fagy, hogy az oldalon \u00f6sszesen 6 blogbejegyz\u00e9s jelenjen meg. Az egyes bejegyz\u00e9sek minden adata lehet azonos, csak a k\u00e9peket cser\u00e9ld le. A k\u00e9peket az <code>assets/img</code> k\u00f6nyvt\u00e1rban tal\u00e1lod. </p> <p>Mivel t\u00f6bb k\u00e1rtya ker\u00fcl egym\u00e1s mell\u00e9 egy layout megold\u00e1st kell k\u00e9sz\u00edteni. Az al\u00e1bbi k\u00e9t lehet\u0151s\u00e9g k\u00f6z\u00fcl v\u00e1laszd ki a szimpatikusat \u00e9s az alapj\u00e1n k\u00e9sz\u00edtsd el az oldal elrendez\u00e9s\u00e9t \u00fagy, hogy magas felbont\u00e1son 3, k\u00f6zepesen 2, kicsin pedig 1 bejegyz\u00e9s ker\u00fclj\u00f6n egy sorba.</p> <ul> <li>Az egyik megold\u00e1s a Card groups haszn\u00e1lata. Itt nincs padding az egyes k\u00e1rty\u00e1k k\u00f6z\u00f6tt.</li> <li> <p>A m\u00e1sik megold\u00e1s a Grid cards haszn\u00e1lata, ami a bootstrap grid rendszer\u00e9n alapszik.</p> </li> <li> <p>\u00c1ll\u00edtsd be, hogy a k\u00e1ty\u00e1k a benne l\u00e9v\u0151 sz\u00f6vegt\u0151l f\u00fcggetlen\u00fcl egyforma magasak legyenek. Ahhoz, hogy l\u00e1that\u00f3 legyen a helyes m\u0171k\u00f6d\u00e9s az els\u0151 blogbejegyz\u00e9s sz\u00f6veg\u00e9t vedd hosszabbra! Tipp: <code>h-100</code></p> </li> </ul> K\u00e9perny\u0151k\u00e9pek k\u00fcl\u00f6nb\u00f6z\u0151 felbont\u00e1sok <p> Nagy k\u00e9perny\u0151m\u00e9ret </p> <p> K\u00f6zepes k\u00e9perny\u0151m\u00e9ret </p> <p> Kicsi k\u00e9perny\u0151m\u00e9ret </p>"},{"location":"laborok/10-bootstrap/#beadando_2","title":"Beadand\u00f3","text":"<p>3. feladat beadand\u00f3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, k\u00f6zepes felbont\u00e1son, ahol k\u00e9t has\u00e1bban jelennek meg a k\u00e9pek. A k\u00e9perny\u0151n legyen l\u00e1that\u00f3 a b\u00f6ng\u00e9sz\u0151 DevToolbarja, ahol ki van jel\u00f6lve az els\u0151 <code>div</code> amin a <code>col</code> oszt\u00e1ly szerepel \u00e9s l\u00e1that\u00f3 a rajta be\u00e1ll\u00edtott CSS szab\u00e1lyok is. </p> <p>A k\u00e9perny\u0151k\u00e9pet <code>f3.png</code> n\u00e9vvel m\u00e1sold a repository gy\u00f6ker\u00e9be!</p>"},{"location":"laborok/10-bootstrap/#4-feladat-oldal-lablec","title":"4. Feladat - Oldal l\u00e1bl\u00e9c","text":"<p>A k\u00f6vetkez\u0151 r\u00e9sz a l\u00e1bl\u00e9c elk\u00e9sz\u00edt\u00e9se.</p> <ul> <li>Adj meg megfelel\u0151 m\u00e9ret\u0171 paddingot, amihez a <code>p-4</code> CSS oszt\u00e1lyt vagy annak egy\u00e9b v\u00e1ltozatait haszn\u00e1ld. Bootstrap spacing</li> <li>\u00c1ll\u00edtd be a s\u00f6t\u00e9t h\u00e1tteret, \u00fagy mint ahogy az a fejl\u00e9cben is megad\u00e1sra ker\u00fclt.</li> <li>A copyright sz\u00f6veg ker\u00fclj\u00f6n balra, az ikonok pedig jobbra. Ehhez a flexboxot haszn\u00e1ld a bootstrapben defini\u00e1lt oszt\u00e1lyok seg\u00edts\u00e9g\u00e9vel. Bootstrap felx</li> <li>K\u00e9sz\u00edts egyedi CSS szab\u00e1lyokat a l\u00e1bl\u00e9cre ahol az al\u00e1bbiakat \u00e1ll\u00edtod be<ul> <li>A sz\u00f6veg feh\u00e9r sz\u00edn\u0171 legyen.</li> <li>Az egyes ikonok m\u00e9rete 1.25rem legyen</li> </ul> </li> </ul> <p> </p> L\u00e1bl\u00e9c"},{"location":"laborok/10-bootstrap/#beadando_3","title":"Beadand\u00f3","text":"<p>4. feladat beadand\u00f3 (1 pont)</p> <p>K\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet <code>f4.png</code> n\u00e9vvel az elk\u00e9sz\u00edtett l\u00e1bl\u00e9cr\u0151l, melyen a DevToolbarban l\u00e1tsz\u00f3dnak a <code>footer</code>-en be\u00e1ll\u00edtott CSS szab\u00e1lyok \u00e9s m\u00e1sold a repository gy\u00f6ker\u00e9be!</p>"},{"location":"laborok/10-bootstrap/#5-feladat-regisztracios-urlap","title":"5. Feladat - Regisztr\u00e1ci\u00f3s \u0171rlap","text":"<p>Az elk\u00e9sz\u00edtett oldal tetej\u00e9n tal\u00e1lhat\u00f3 egy Register felirat\u00fa link, ami a register.html oldalra ir\u00e1ny\u00edt. A feladat ennek az oldalnak az elk\u00e9sz\u00edt\u00e9se.</p> <p>Miel\u0151tt nekikezdesz a feladatnak \u00e9rdemes \u00e1tn\u00e9zni a Bootstrap form kezel\u00e9s\u00e9t.</p> <p>A legfontosabb CSS oszt\u00e1lyok az \u0171rlapok form\u00e1z\u00e1s\u00e1hoz az al\u00e1bbiak:</p> <ul> <li><code>form-label</code>: a labelre tessz\u00fck, ami egy als\u00f3 marg\u00f3t \u00e1ll\u00edt be, hogy az egym\u00e1s alatt elhelyezhet\u0151 <code>label</code> \u00e9s <code>input</code> tagek k\u00f6z\u00f6tt megfelel\u0151 t\u00e1vols\u00e1g legyen.</li> <li><code>form-control</code>: ezzel form\u00e1zzuk a beviteli mez\u0151ket.</li> <li><code>form-text</code>: Ha a sz\u00f6vegdoboz alatt szeretn\u00e9nk apr\u00f3bb bet\u0171s inform\u00e1ci\u00f3s sz\u00f6veget elhelyezni.</li> <li>Ha a c\u00edmke \u00e9s sz\u00f6vegdoboz p\u00e1rokat egym\u00e1s al\u00e1 szeretn\u00e9nk tenni, akkor egy <code>div</code> tagben szoktuk \u00f6sszefogni a c\u00edmke, sz\u00f6vegdoboz \u00e9s az esetleges magyar\u00e1z\u00f3 sz\u00f6veget. \u00cdgy ezeket a blokkokat a <code>row</code> \u00e9s <code>col</code> CSS oszt\u00e1lyok seg\u00edts\u00e9g\u00e9vel m\u00e1r tetsz\u0151legesen el tudjuk rendezni.</li> </ul> <pre><code>&lt;div class=\"mb-3\"&gt;\n    &lt;label for=\"exampleInputEmail\" class=\"form-label\"&gt;Email address&lt;/label&gt;\n    &lt;input type=\"email\" class=\"form-control\" id=\"exampleInputEmail\" aria-describedby=\"emailHelp\"&gt;\n    &lt;div id=\"emailHelp\" class=\"form-text\"&gt;\n        We'll never share your email with anyone else.\n    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"laborok/10-bootstrap/#megvalositas-lepesei_1","title":"Megval\u00f3s\u00edt\u00e1s l\u00e9p\u00e9sei","text":"<ul> <li>Hozd l\u00e9tre a register.html-t a repository gy\u00f6ker\u00e9ben.</li> <li>Az oldal fejl\u00e9c \u00e9s l\u00e1bl\u00e9c r\u00e9sze v\u00e1ltozatlan, teh\u00e1t azt m\u00e1sold \u00e1t a megl\u00e9v\u0151 index.html oldalr\u00f3l. Csak az oldal k\u00f6z\u00e9ps\u0151 <code>section</code> tagen bel\u00fcli r\u00e9sze fog v\u00e1ltozni.</li> <li>Adj az oldalhoz egy headinget a Regisztr\u00e1ci\u00f3 sz\u00f6veggel. A headingek megjel\u00e9s\u00e9hez is vannak el\u0151re defini\u00e1lt (\u00e9s fel\u00fcldefini\u00e1lhat\u00f3) CSS oszt\u00e1lyok: Bootstrap heading</li> <li> <p>A c\u00edmsor alatt egy regisztr\u00e1ci\u00f3s \u0171rlapot kell k\u00e9sz\u00edteni, ahol a felhaszn\u00e1l\u00f3t\u00f3 bek\u00e9rj\u00fck a k\u00f6vetkez\u0151 al\u00e1bbi adatokat: </p> <ul> <li>Email: A felhaszn\u00e1l\u00f3 email c\u00edme.</li> <li>Password: V\u00e1lasztott jelsz\u00f3, ahol a be\u00edrt karakterek nem l\u00e1tsz\u00f3dnak.</li> <li>State: El\u0151re felt\u00f6lt\u00f6tt leg\u00f6d\u00fcl\u0151 lista. Tipp: Bootstrap select </li> <li>ZIP: Ir\u00e1ny\u00edt\u00f3sz\u00e1m (csak sz\u00e1m lehet)</li> <li>City: V\u00e1ros szabad sz\u00f6veges mez\u0151</li> <li>Address: Utca, h\u00e1zsz\u00e1m szabad sz\u00f6veges mez\u0151</li> <li>Accept terms: Checkbox, hogy elfogadja a felt\u00e9teleket. Tipp: Bootstrap checkbox</li> <li>Sign in: gomb, ami elk\u00fcldi az \u0171rlapot a szerverre.</li> </ul> </li> <li> <p>Az inputok l\u00e9trehoz\u00e1s\u00e1n\u00e1l \u00fcgyelj mindig a megfelel\u0151 t\u00edpus haszn\u00e1lat\u00e1ra \u00e9s mindenhol adj meg name attrib\u00fatumot, hogy az adatokat el lehessen k\u00fcldeni a szerverre.</p> </li> <li>A sz\u00f6vegdobozokba tegy\u00e9l placeholder sz\u00f6veget is.</li> <li>Az al\u00e1bbi k\u00e9pen l\u00e1that\u00f3 elrendez\u00e9st val\u00f3s\u00edtsd meg.</li> </ul> <p>A layout kialak\u00edt\u00e1s\u00e1hoz vizsg\u00e1ld meg a Bootstrap form layout megold\u00e1sokat.</p> <p> </p> Regisztr\u00e1ci\u00f3s \u0171rlap asztali n\u00e9zetben <ul> <li>Ellen\u0151rizd, hogy az oldal kis k\u00e9perny\u0151 m\u00e9reten az al\u00e1bbi elrendez\u00e9sben jelenik-e meg. Ha nem, akkor jav\u00edtsd a k\u00f3dot, hogy az al\u00e1bbi kin\u00e9zetet kell kapnod.</li> </ul> <p> </p> Regisztr\u00e1ci\u00f3s \u0171rlap mobil n\u00e9zetben <p>5. feladat beadand\u00f3 (1 pont)</p> <p>Az elk\u00e9sz\u00edtett \u0171rlapot t\u00f6ltsd ki \u00e9s a Address mez\u0151be a neptun k\u00f3dodat \u00edrd be, majd kattints a Sing in gombra. Ekkor az URL-ben l\u00e1that\u00f3ak lesznek a formban megadott adatok is. Err\u0151l k\u00e9sz\u00edts egy k\u00e9perny\u0151k\u00e9pet, amit <code>f5.png</code> n\u00e9ven m\u00e1solj be a repository gy\u00f6ker\u00e9be.</p>"},{"location":"laborok/10-bootstrap/#imsc-urlap-kozepre-igazitasa","title":"iMSc - \u0170rlap k\u00f6z\u00e9pre igaz\u00edt\u00e1sa","text":"<ul> <li>Flexbox seg\u00edts\u00e9g\u00e9vel igaz\u00edtsd a regisztr\u00e1ci\u00f3s \u0171rlapot f\u00fcgg\u0151legesen k\u00f6z\u00e9pre.<ul> <li>El\u0151sz\u00f6r \u00e1ll\u00edtsd be, hogy a <code>body</code> is flexboxot haszn\u00e1ljon \u00e9s olyan magas legyen mind a b\u00f6ng\u00e9sz\u0151. Haszn\u00e1ld az oszlop-os elrendez\u00e9st.</li> <li>Add meg, hogy k\u00f6z\u00e9pre legyen igaz\u00edva a tartalmi r\u00e9sz. Itt \u00e9rdemes a <code>margin: auto</code> haszn\u00e1lta.</li> <li>A k\u00f6z\u00e9pre igaz\u00edtott r\u00e9sz k\u00f6r\u00e9 tegy\u00e9l egy 1px vastag keretet is.</li> </ul> </li> <li>Defini\u00e1ld fel\u00fcl a placeholder sz\u00f6vegek megjelen\u00edt\u00e9s\u00e9t is. Legyen piros d\u0151lt bet\u0171 a placeholder mindenhol. Tipp: <code>::placeholder</code></li> </ul> <p>5. feladat iMSc BEADAND\u00d3 (1 iMSc pont)</p> <p>Demonstr\u00e1ld k\u00e9perny\u0151k\u00e9ppel <code>f5-iMsc.png</code> a fenti megjelen\u00e9st.</p>"},{"location":"laborok/11-js/","title":"Labor 11 - JavaScript alapok","text":""},{"location":"laborok/11-js/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A laboron egy egyszer\u0171 \"offline\" To-Do alkalmaz\u00e1st k\u00e9sz\u00edt\u00fcnk. Az els\u0151 feladatokat, ahol a k\u00f3dv\u00e1zat \u00e9s legfontosabb funkci\u00f3kat val\u00f3s\u00edtjuk meg, laborvezet\u0151i seg\u00edts\u00e9ggel, majd tov\u00e1bbi funkci\u00f3kat \u00f6n\u00e1ll\u00f3an kell elv\u00e9gezni, a JavaScript tud\u00e1s elsaj\u00e1t\u00edt\u00e1s \u00e9rdek\u00e9ben.</p> A JavaScriptr\u0151l di\u00f3h\u00e9jban <p>A kor\u00e1bban megismert HTML \u00e9s CSS adj\u00e1k a weboldalunk v\u00e1z\u00e1t, alapm\u0171k\u00f6d\u00e9s\u00e9t \u00e9s kin\u00e9zet\u00e9t, viszont a korai dokumentum-alap\u00fa weboldalakt\u00f3l \u00e1tt\u00e9rt\u00fcnk a dinamikus weboldalakra, melyek fut\u00e1s id\u0151ben m\u00f3dos\u00edtj\u00e1k az aktu\u00e1lis dokumentumot (a DOM-ot), \u00edgy interakci\u00f3t kezelhet\u00fcnk, \u00e9s a weboldalunkra (a kliens oldalra) \u00f6n\u00e1ll\u00f3 alkalmaz\u00e1sk\u00e9nt tekint\u00fcnk.</p> <p>Az alkalmaz\u00e1sainkhoz dinamizmust (id\u0151beni v\u00e1ltoz\u00e1st) szkriptel\u00e9ssel rendel\u00fcnk, erre JavaScriptet haszn\u00e1lunk. A JavaScript egy dinamikusan t\u00edpusos, interpret\u00e1lt szkriptnyelv, a hozz\u00e1 tartoz\u00f3 futtat\u00f3k\u00f6rnyezetek v\u00e9grehajt\u00f3 egys\u00e9gei pedig alapvet\u0151en egysz\u00e1l\u00faak, \u00edgy nincsen k\u00f6lcs\u00f6n\u00f6s kiz\u00e1r\u00e1si probl\u00e9m\u00e1nk.</p> <p>\u00c9rdemes tov\u00e1bb\u00e1 megeml\u00edteni a felhaszn\u00e1land\u00f3 t\u00edpusokat (<code>function</code>, <code>object</code>, <code>string</code>, <code>number</code>, <code>undefined</code>, <code>boolean</code>, <code>symbol</code>), az ezek k\u00f6z\u00f6tti szabad konverzi\u00f3t \u00e9s a JavaScript esem\u00e9nyhurkot (event loop). Az event loop a JavaScriptet folyamatosan befejez\u0151d\u00e9sig futtatja (\"Run-to-completion\"), am\u00edg a fut\u00e1s be nem fejez\u0151dik, majd aszinkron esem\u00e9nyre v\u00e1r. Az esem\u00e9nyek bek\u00f6vetkezt\u00e9vel az esem\u00e9nyhez regisztr\u00e1lt esem\u00e9nykezel\u0151k lefutnak. Az esem\u00e9nyek lehetnek:</p> <ul> <li>felhaszn\u00e1l\u00f3i interakci\u00f3,</li> <li>id\u0151z\u00edt\u00e9s,</li> <li>IO m\u0171veletek eredm\u00e9nye (pl. AJAX, Websocket).</li> </ul> <p>A fontosabb kulcsgondolatok teh\u00e1t r\u00f6viden:</p> <ul> <li>interpret\u00e1lt futtat\u00e1s,</li> <li>DOM dinamikus manipul\u00e1ci\u00f3ja,</li> <li>dinamikus t\u00edpusoss\u00e1g \u00e9s t\u00edpuskonverzi\u00f3,</li> <li>egysz\u00e1l\u00fas\u00e1g, event loop \u00e9s aszinkronit\u00e1s.</li> </ul> <p>Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g, hogy a JavaScript (klasszikus \u00e9rtelemben v\u00e9ve) nem objektum-orient\u00e1lt, az oszt\u00e1lyok koncepci\u00f3ja a nyelvben k\u00e9s\u0151bb jelent meg; a nyelv a prototipikus \u00f6r\u00f6kl\u00e9s m\u00f3dszer\u00e9t alkalmazza az objektumorient\u00e1lt megk\u00f6zel\u00edt\u00e9shez. Ezen k\u00edv\u00fcl k\u00fcl\u00f6n\u00f6s saj\u00e1toss\u00e1gai vannak, a <code>this</code> kulcssz\u00f3 pl. nem az aktu\u00e1lis objektumra, hanem az aktu\u00e1lis f\u00fcggv\u00e9nyre mutat (kiv\u00e9tel az arrow syntax, ami a <code>this</code>-t az eredeti \u00e9rt\u00e9ken hagyja).</p> <p>Az Internet Explorer elh\u00edres\u00fclt arr\u00f3l, hogy a fejleszt\u00e9s r\u00e1 jelent\u0151sen neh\u00e9zkesebb, mint b\u00e1rmely alternat\u00edv\u00e1ra. Ma m\u00e1r a Microsoft is hivatalosan is az \u00faj, Chromium alap\u00fa Edge b\u00f6ng\u00e9sz\u0151t t\u00e1mogatja, amely - a m\u00e1r nem is t\u00e1mogatott - Windows 7 OS-en is m\u0171k\u00f6dik, \u00edgy \u00faj weboldalakat Internet Explorer t\u00e1mogat\u00e1ssal m\u00e1r nem kell k\u00e9sz\u00edten\u00fcnk.</p>"},{"location":"laborok/11-js/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github.</p> <ol> <li>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</li> <li>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.<ul> <li>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</li> </ul> </li> <li>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</li> <li>A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</li> </ol>"},{"location":"laborok/11-js/#1-feladat-esemenykezeles","title":"1. Feladat - Esem\u00e9nykezel\u00e9s","text":"<p>Az alkalmaz\u00e1s alapjak\u00e9nt egy egyszer\u0171 HTML oldal szolg\u00e1l, amihez a saj\u00e1t JavaScript\u00fcnket \u00edrjuk.</p> <p>A JS k\u00f3dot HTML-ben is elhelyezhetn\u00e9nk, viszont az nem karbantarthat\u00f3 \u00e9s alapvet\u0151en nem best practice, \u00fagyhogy a saj\u00e1t <code>todo.js</code> f\u00e1jlba fogjuk tenni a k\u00f3dot, amit behivatkozunk. A st\u00edlusoz\u00e1st Bootstrappel oldjuk meg.</p> <ul> <li>Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository <code>feladat</code> mapp\u00e1j\u00e1t (File \u2192 Open Folder) \u00e9s ind\u00edtsuk el az alkalmaz\u00e1st a Live Serverrel (<code>index.html</code> \u2192 jobb klikk \u2192 Open with Live Server)</li> <li>Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s!</li> </ul> <p> </p> Kiindul\u00f3 \u00e1llapot <p>Warning</p> <p>A b\u00f6ng\u00e9sz\u0151 k\u00fcl\u00f6nb\u00f6z\u0151 k\u00f6r\u00fclm\u00e9nyek f\u00fcggv\u00e9ny\u00e9ben cache-elheti a f\u00e1jljainkat, ez\u00e9rt a friss\u00edt\u00e9st ilyenkor k\u00e9zzel kell megoldanunk. Ne felejts\u00fck el menteni a f\u00e1jlt, ezut\u00e1n a b\u00f6ng\u00e9sz\u0151ben \u00e1ll\u00edtsuk be az F12 Developer Tools-ban a Network f\u00fcl\u00f6n az \"Always refresh from server\" / \"Disable cache\" elnevez\u00e9s\u0171 be\u00e1ll\u00edt\u00e1st!</p> <p>L\u00e1thatjuk, hogy a statikus oldal az al\u00e1bbiakb\u00f3l tev\u0151dik \u00f6ssze:</p> <ul> <li>c\u00edm,</li> <li>f\u00fclek az \u00f6sszes, akt\u00edv, inakt\u00edv \u00e9s k\u00e9sz elemek sz\u0171r\u00e9s\u00e9re,</li> <li>a to-do elemek list\u00e1ja, az egyes elemek mellett az \u00e9rtelmezett m\u0171veletek,</li> <li>\u00faj elem hozz\u00e1ad\u00e1sa panel, melyen az \u00faj to-do bejegyz\u00e9s sz\u00f6veg\u00e9t kell megadnunk egy \u0171rlapon.</li> </ul> <p>A <code>&lt;body&gt;</code> v\u00e9g\u00e9n egy <code>&lt;script&gt;</code> a <code>todo.js</code> f\u00e1jlra hivatkozik! A szkript az oldal l\u00e9nyegi tartalm\u00e1nak bet\u00f6lt\u0151d\u00e9se ut\u00e1n fut le, \u00edgy nem kell majd v\u00e1rakoznunk a dokumentum teljes bet\u00f6lt\u0151d\u00e9s\u00e9re (a gyakorlatban ez azt jelenti, hogy a szkript fut\u00e1s\u00e1nak kezdet\u00e9n a DOM a HTML-nek megfelel\u0151 \u00e1llapotban m\u00e1r l\u00e9trej\u00f6tt). A gyakorlatban ez v\u00e1ltoz\u00f3, szok\u00e1s a <code>&lt;head&gt;</code> elemben in bet\u00f6lteni JS f\u00e1jlokat amikor kritikus, viszont az g\u00e1tolja a HTML megjelen\u00e9s\u00e9t, am\u00edg a JS f\u00e1jl le nem t\u00f6lt\u0151dik.</p>"},{"location":"laborok/11-js/#11-todo-osztaly-es-allapotok","title":"1.1 Todo oszt\u00e1ly \u00e9s \u00e1llapotok","text":"<p>Az egyes Todo elemek modellj\u00e9re \u00e9rdemes saj\u00e1t oszt\u00e1lyt defini\u00e1lnunk.</p> Oszt\u00e1lyok <p>Modern (ES6/ES2015 \u00e9s magasabb) JavaScriptben konstruktor f\u00fcggv\u00e9ny helyett haszn\u00e1lhatunk val\u00f3s oszt\u00e1lyokat is, a gyakorlaton ezt fogjuk l\u00e1tni. JavaScriptben egy (nem oszt\u00e1ly) f\u00fcggv\u00e9ny konstruktorf\u00fcggv\u00e9ny, ha a <code>this</code> v\u00e1ltoz\u00f3n tulajdons\u00e1gokat helyez el \u00e9s nem t\u00e9r vissza semmivel. Ekkor a <code>new</code> kulcssz\u00f3val megh\u00edvva a f\u00fcggv\u00e9nyt az konstruktork\u00e9nt funkcion\u00e1l \u00e9s a <code>this</code> (tulajdons\u00e1gokkal \"felaggatott\") \u00e9rt\u00e9k\u00e9t kapjuk vissza. Ezen fel\u00fcl az <code>instanceof</code> kulcssz\u00f3val megvizsg\u00e1lhatjuk, hogy egy adott f\u00fcggv\u00e9ny konstruktora \u00e1ltal k\u00e9sz\u00edtett objektumr\u00f3l van-e sz\u00f3, teh\u00e1t szinte m\u00e1r oszt\u00e1lyp\u00e9ld\u00e1nyk\u00e9nt kezelhetj\u00fck az objektumot.</p> <p>A f\u00fclek lehets\u00e9ges \u00e1llapotai az <code>all</code>, <code>active</code>, <code>inactive</code> \u00e9s <code>done</code>. Az <code>all</code> kiv\u00e9tel\u00e9vel ezeket az \u00e1llapotokat veheti fel egy Todo elem is.</p> <p>A <code>todo.js</code> elej\u00e9re vegy\u00fck fel a Todo oszt\u00e1lyt, annak konstruktorf\u00fcggv\u00e9ny\u00e9t \u00e9s a konkr\u00e9t p\u00e9ld\u00e1nyokat t\u00e1rol\u00f3 (\u00fcres) t\u00f6mb\u00f6t, valamint a lehets\u00e9ges \u00e1llapotokat</p> <pre><code>class Todo {\nconstructor(name, state) {\nthis.name = name;\nthis.state = state;\n}\n}\n\nconst todos = [];   // Az oldal bet\u00f6lt\u0151d\u00e9sekor a TODO lista egy \u00fcres t\u00f6mb.\nconst states = [\"active\", \"inactive\", \"done\"];\nconst tabs = [\"all\"].concat(states);    // \"all\" + a state t\u00f6mb elemei a f\u00fclek.\n\nconsole.log(tabs);\n</code></pre> JavaScript v\u00e1ltoz\u00f3k <p>JavaScriptben h\u00e1rom kulcssz\u00f3val deklar\u00e1lhatunk lok\u00e1lis v\u00e1ltoz\u00f3t:</p> <ul> <li><code>var</code>: az \"eredeti\" m\u00f3dja a v\u00e1ltoz\u00f3 deklar\u00e1ci\u00f3j\u00e1nak, modern JS-ben \u00e9rdemes ker\u00fclni. Engedi ugyanazon v\u00e1ltoz\u00f3 \u00fajradeklar\u00e1ci\u00f3j\u00e1t, s\u0151t, nem k\u00f6ti scope-hoz a v\u00e1ltoz\u00f3t.</li> <li><code>let</code>: scope-hoz k\u00f6ti a v\u00e1ltoz\u00f3t, ez\u00e9rt nem deklar\u00e1lhat\u00f3 \u00fajra \u00e9s nem is \"sziv\u00e1rog\" \u00e1t a scope-ok k\u00f6z\u00f6tt.</li> <li><code>const</code>: konstans \u00e9rt\u00e9k\u0171/referenci\u00e1j\u00fa \"v\u00e1ltoz\u00f3t\" (\u00e9rdekes v\u00e1ltoz\u00f3nak nevezni, ha nem v\u00e1ltozhat) t\u00e1rol. A v\u00e1ltoz\u00f3 nem kaphat \u00faj \u00e9rt\u00e9ket (teh\u00e1t ha referenciat\u00edpus, pl. objektum vagy t\u00f6mb, akkor nem lehet \u00faj objektumot/\u00e9rt\u00e9ket adni a v\u00e1ltoz\u00f3nak), de ha objektumot t\u00e1rol, annak tagjai (vagy a t\u00f6mb elemei) \u00e9rtelemszer\u0171en v\u00e1ltozhatnak.</li> </ul> <p>A legnyilv\u00e1nval\u00f3bb (ha nem is a legrobusztusabb) m\u00f3dja a hibakeres\u00e9snek az, ha a konzolra \u00edrunk. Az F12 seg\u00edts\u00e9g\u00e9vel a Console f\u00fcl\u00f6n l\u00e1thatjuk a kimenetet.</p>"},{"location":"laborok/11-js/#12-uj-todo-felvetele","title":"1.2 \u00daj Todo felv\u00e9tele","text":"<p>Iratkozzunk fel az \u0171rlap <code>submit</code> esem\u00e9ny\u00e9re \u00e9s val\u00f3s\u00edtsuk meg az \u00faj Todo elem l\u00e9trehoz\u00e1s\u00e1t. A feliratkoz\u00e1st megtehetj\u00fck HTML-b\u0151l \u00e9s JavaScriptb\u0151l is, most az ut\u00f3bbit alkalmazzuk! Illessz\u00fck be az al\u00e1bbi k\u00f3dr\u00e9szletet a kor\u00e1bbi k\u00f3dr\u00e9szletek ut\u00e1n!</p> <ul> <li>Hozzunk l\u00e9tre egy <code>form</code> v\u00e1ltoz\u00f3t, amibe ments\u00fck el az oldalon tal\u00e1lhat\u00f3 <code>new-todo-form</code> azonos\u00edt\u00f3j\u00fa form referenci\u00e1j\u00e1t. Tipp: <code>document.getElementById(\"new-todo-form\")</code></li> <li>Egy m\u00e1sik <code>input</code> nev\u0171 v\u00e1ltoz\u00f3ba pedig ment\u00fck el a sz\u00f6vegdoboz referenci\u00e1j\u00e1t, ahol a Todo elem nev\u00e9t meg lehet. Ennek az azonos\u00edt\u00f3ja a <code>new-todo-title</code>.</li> <li>Iratkozzunk fel a <code>form</code> submit esem\u00e9ny\u00e9re egy f\u00fcggv\u00e9nnyel, aminek egy <code>event</code> bemen\u0151 param\u00e9tere legyen.</li> <li>Tiltsuk le az \u0171rlap postol\u00e1s\u00e1nak alap\u00e9rtelmezett viselked\u00e9s\u00e9t, hogy ne t\u00f6ltse \u00fajra az oldalt. Tipp: <code>preventDefault()</code>.</li> <li>Ha a sz\u00f6vegdobozban szerepel valamilyen \u00e9rt\u00e9k, akkor azzal a n\u00e9vvel adjunk a <code>todos</code> t\u00f6mbh\u00f6z egy \u00faj Todo elemet.</li> <li>Az sz\u00f6vegdobozb\u00f3l t\u00f6r\u00f6lj\u00fck ki a beg\u00e9pelt sz\u00f6veget.</li> </ul> Megval\u00f3s\u00edt\u00e1s: Todo elem felv\u00e9tele <pre><code>const form = document.getElementById(\"new-todo-form\");\nconst input = document.getElementById(\"new-todo-title\");\n\nform.onsubmit = function(event) {\n// Megg\u00e1toljuk az alap\u00e9rtelmezett m\u0171k\u00f6d\u00e9st, ami friss\u00edten\u00e9 az oldalt.\nevent.preventDefault(); // Csak akkor adjuk a t\u00f6mbh\u00f6z ha a sz\u00f6gegdobozban \u00e9rv\u00e9nyes \u00e9rt\u00e9k van.\n// Ekvivalens ezzel: if (input &amp;&amp; input.value &amp;&amp; input.value.length) \n// vagy if (input != null &amp;&amp; input.value != null &amp;&amp; input.value.length &gt; 0)\nif (input?.value?.length) { // Az \u00faj todo-t akt\u00edv \u00e1llapotban hozunk l\u00e9tre.\ntodos.push(new Todo(input.value, \"active\")); // Ki\u00fcr\u00edtj\u00fck az inputot\ninput.value = \"\"; // TODO: \u00fajrarajzolni a list\u00e1t\n}\n}\n</code></pre> <p>Defini\u00e1lnunk kell m\u00e9g egy <code>Button</code> oszt\u00e1lyt a gombok kezel\u00e9s\u00e9re, amiket a Todo elemekhez fogunk rendelni. Nem volna sz\u00fcks\u00e9g a modellek defini\u00e1l\u00e1s\u00e1ra, elv\u00e9gre is a JS egy dinamikus nyelv, de strukt\u00far\u00e1t ad a k\u00f3dnak, objektum-orient\u00e1ltabban kezelhet\u0151.</p> <p>A Button oszt\u00e1lyon az al\u00e1bbi tulajdons\u00e1gok legyenek:</p> <ul> <li><code>action</code> - M\u0171velet, amit a gomb v\u00e9gez</li> <li><code>icon</code> - FontAwesome ikon neve (class=\"fas fa-*\")</li> <li><code>type</code> - Bootstrapbeni t\u00edpus (\"secondary\", \"danger\" stb.)</li> <li><code>title</code> - Tooltip sz\u00f6vege</li> </ul> <p>Illetve k\u00e9sz\u00edt\u00fcnk egy t\u00f6mb\u00f6t <code>buttons</code> n\u00e9vvel, amibe a k\u00f6vetkez\u0151 n\u00e9gy gombot tegy\u00fck bele: Done, Active, Inactive, Remove. A gombok nev\u00e9b\u0151l kider\u00fcl, hogy ezekkel tudjuk \u00faj \u00e1llapotba tenni, vagy t\u00f6r\u00f6lni az elemet.</p> Info <p>A VS Code-ban val\u00f3sz\u00edn\u0171leg az IntelliSense nyom\u00e1ra tudunk bukkanni a JS k\u00f3d \u00edr\u00e1sa k\u00f6zben. Ennek az oka nem a JavaScript, hanem a h\u00e1tt\u00e9rben fut\u00f3 TypeScript ford\u00edt\u00f3. Mivel minden JavaScript egyben TypeScript k\u00f3d is, ez\u00e9rt a t\u00edpusinform\u00e1ci\u00f3k kinyerhet\u0151k a k\u00f3db\u00f3l. Ez a TypeScript nagy el\u0151nye a JS-sel szemben. Ford\u00edt\u00e1si hib\u00e1ink nem lesznek JavaScriptben, de az IntelliSense seg\u00edts\u00e9g\u00e9t ki lehet \u00edgy haszn\u00e1lni.</p> Megval\u00f3s\u00edt\u00e1s: Gombok felv\u00e9tele <pre><code>class Button {\nconstructor(action, icon, type, title) {\nthis.action = action;\nthis.icon = icon;\nthis.type = type;\nthis.title = title;\n}\n}\n\n// A gombokat reprezent\u00e1l\u00f3 modell objektumok t\u00f6mbje\nconst buttons = [\nnew Button(\"done\", \"check\", \"success\", \"Mark as done\"),\nnew Button(\"active\", \"plus\", \"secondary\", \"Mark as active\"),\n// Az objektumot dinamikusan is kezelhetj\u00fck, ekkor nem a konstruktorral p\u00e9ld\u00e1nyos\u00edtjuk\n{ action: \"inactive\", icon: \"minus\", type: \"secondary\", title: \"Mark as inactive\" },\nnew Button(\"remove\", \"trash\", \"danger\", \"Remove\"),\n];\n</code></pre> <p>\u00cdgy m\u00e1r gyakorlatilag fel tudunk venni \u00faj elemet, viszont ez nem l\u00e1tszik a fel\u00fcleten, ugyanis csak mem\u00f3ri\u00e1ban dolgoztunk, \u00e9s nem m\u00f3dos\u00edtottuk megfelel\u0151en a DOM-ot.</p>"},{"location":"laborok/11-js/#13-todo-lista-kirajzolasa","title":"1.3 Todo lista kirajzol\u00e1sa","text":"<p>K\u00e9sz\u00edten\u00fcnk kell egy olyan f\u00fcggv\u00e9nyt, ami a todos t\u00f6mbben l\u00e9v\u0151 elemeket a fel\u00fcleten meg tudja jelen\u00edteni.</p> <p>Ehhez el\u0151sz\u00f6r k\u00e9sz\u00edts\u00fcnk egy olyan f\u00fcggv\u00e9nyt <code>createElementFromHTML</code> n\u00e9vvel, ami a param\u00e9terk\u00e9nt megkapott HTML sztringb\u0151\u00e9 elk\u00e9sz\u00edt a mem\u00f3ri\u00e1ban egy virtu\u00e1lis DOM elemet.</p> <pre><code>function createElementFromHTML(html) {\nconst virtualElement = document.createElement(\"div\");\nvirtualElement.innerHTML = html;\n\nreturn virtualElement.childElementCount == 1 ? virtualElement.firstChild : virtualElement.children;\n}\n</code></pre> <p>Erre az\u00e9rt van sz\u00fcks\u00e9g, mert nincs arra nat\u00edv JavaScript API (jelenleg), hogy stringb\u0151l HTML elemet hozzunk l\u00e9tre, viszont b\u00e1rmely (ak\u00e1r virtu\u00e1lis, teh\u00e1t az aktu\u00e1lis DOM-ban nem, de mem\u00f3ri\u00e1ban l\u00e9tez\u0151) DOM elem innerHTML-j\u00e9nek be\u00e1ll\u00edt\u00e1s\u00e1val a DOM elem(ek) t\u00e9nylegesen l\u00e9trej\u00f6n(nek). </p> <p>Alternat\u00edv megold\u00e1sk\u00e9nt megtehetn\u00e9nk, hogy l\u00e9trehozzuk a <code>createElement</code> seg\u00edts\u00e9g\u00e9vel az elemet, majd egyes\u00e9vel be\u00e1ll\u00edtjuk az attrib\u00fatumait, de az j\u00f3val k\u00f6r\u00fclm\u00e9nyesebb, k\u00f3dol\u00f3sabb megold\u00e1st eredm\u00e9nyez.</p> <p>Ezt k\u00f6vet\u0151en k\u00e9sz\u00edt\u00fck el a <code>renderTodos</code> f\u00fcggv\u00e9nyt, ami az \u00f6sszes Todo elemet kirajzolja a fel\u00fcletre. Bemen\u0151 param\u00e9ter nem kell neki, mert a <code>todos</code> t\u00f6mb\u00f6t el\u00e9rj\u00fck.</p> <ul> <li>A lista elemet a <code>todo-list</code> azonos\u00edt\u00f3j\u00fa DOM elemben tal\u00e1lhat\u00f3ak. Ezt el\u0151sz\u00f6r t\u00f6r\u00f6lni kell. Tipp: <code>innerHTML</code> -t kell \u00fcres sztringre \u00e1ll\u00edtani.</li> <li>Iter\u00e1ljunk v\u00e9gig a <code>todos</code> t\u00f6mb\u00f6n \u00e9s egy <code>row</code> v\u00e1ltoz\u00f3ba k\u00e9sz\u00edts\u00fck el sz\u00fcks\u00e9ges HTML template-et. A HTML template megtal\u00e1lhat\u00f3 az index.html oldalon, k\u00f6zvetlen\u00fcl a <code>todo-list</code> azonos\u00edt\u00f3j\u00fa elem alatt.</li> <li>A gombokhoz tartoz\u00f3 HTML tartalmat is \u00e9rdemes egy ciklussal gener\u00e1lni. Ehhez a <code>buttons</code> t\u00f6mb\u00f6n kell v\u00e9gigiter\u00e1lni \u00e9s a <code>createElementFromHTML</code> f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel minden gombhoz l\u00e9trehozni a sz\u00fcks\u00e9ges DOM elemet<ul> <li>Itt kell figyelni arra, hogy azt a gombot tegy\u00fck <code>disabled</code>-re amelyik \u00e1llapotban \u00e9ppen a Todo elem van.</li> <li>Majd az egyes gombokhoz gener\u00e1lt DOM elemet adjuk hozz\u00e1 az <code>action-buttons</code> CSS oszt\u00e1llyal ell\u00e1tott elemhez, ami a sornak a templatej\u00e9ben <code>row</code> v\u00e1ltoz\u00f3 kell, hogy szerepeljen. Tipp: <code>.querySelector(\"   \").appendChild(domElem)</code></li> </ul> </li> <li>V\u00e9g\u00fcl az \u00edgy \u00f6ssze\u00e1ll\u00edtott sor template-et (<code>row</code>) hozz\u00e1 kell adni a <code>todo-list</code>-hez.</li> <li>Ne feledd, hogy ezt a f\u00fcggv\u00e9nyt meg is kell h\u00edvni, hogy a kezdeti \u00e1llapotot kirajzolja!</li> </ul> Selectorok <p>A <code>querySelector()/querySelectorAll()</code> API-kkal egy CSS szelektort adhatunk meg a document-en vagy egy elemen, \u00e9s az illeszked\u0151 els\u0151/\u00f6sszes elemet kapjuk vissza.</p> Megval\u00f3s\u00edt\u00e1s: HTML tartalom renderel\u00e9se <pre><code>function renderTodos() {\n// Megkeress\u00fck a kont\u00e9nert, ahov\u00e1 az elemeket tessz\u00fck\nconst todoList = document.getElementById(\"todo-list\"); // A jelenleg a DOM-ban lev\u0151 to-do elemeket t\u00f6r\u00f6lj\u00fck\ntodoList.innerHTML = \"\"; // Bej\u00e1rjuk a jelenlegi todo elemeket.\nfor(let todo of todos)\n{\nconst row = createElementFromHTML(\n`&lt;div class=\"row\"&gt;\n                &lt;div class=\"col d-flex p-0\"&gt;\n                    &lt;a class=\"list-group-item flex-grow-1\" href=\"#\"&gt;\n${todo.name}\n                    &lt;/a&gt;\n                    &lt;div class=\"btn-group action-buttons\"&gt;&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;`);\n\n// A gomb modellek alapj\u00e1n legy\u00e1rtjuk a DOM gombokat.\nfor(let button of buttons)\n{\nconst btn = createElementFromHTML(\n`&lt;button class=\"btn btn-outline-${button.type} fas fa-${button.icon}\" title=\"${button.title}\"&gt;&lt;/button&gt;`\n);\n\nif (todo.state === button.action) // azt a gombot letiljuk, amilyen \u00e1llapotban van egy elem\nbtn.disabled = true;\n\n// TODO: a gomb klikk esem\u00e9ny\u00e9nek kezel\u00e9se\n\n// A virtu\u00e1lis elem gomb kont\u00e9ner\u00e9be beletessz\u00fck a gombot\nrow.querySelector(\".action-buttons\").appendChild(btn); }\n\n// Az \u00f6ssze\u00e1ll\u00edtott HTML-t a DOM-ban lev\u0151 todo-list ID-j\u00fa elemhez f\u0171zz\u00fck.\ntodoList.appendChild(row); }\n}\n\n// Kezdeti \u00e1llapot kirajzol\u00e1sa.\nrenderTodos(); </code></pre> <p>Most m\u00e1r l\u00e1tjuk, hogy mi fog ker\u00fclni a <code>// TODO: \u00fajrarajzolni a list\u00e1t</code> komment hely\u00e9re a form elk\u00fcld\u00e9sekor:</p> <pre><code>renderTodos();\n</code></pre> T\u00f6rl\u00e9s <p>Ha abba a hib\u00e1ba esn\u00e9nk, hogy a DOM elemeket egyes\u00e9vel szeretn\u00e9nk elt\u00e1vol\u00edtani a DOM-b\u00f3l a <code>#todo-list</code> elem <code>children</code> tulajdons\u00e1g\u00e1nak seg\u00edts\u00e9g\u00e9vel, vigy\u00e1znunk kell, ugyanis ez egy \"\u00e9l\u0151\" kollekci\u00f3: mik\u00f6zben az elemeket t\u00f6r\u00f6lj\u00fck, a kollekci\u00f3 length tulajdons\u00e1ga is v\u00e1ltozik! Persze egy egyszer\u0171 <code>for</code> ciklussal megoldhat\u00f3, de mindenk\u00e9ppen a v\u00e9g\u00e9t\u0151l indulva j\u00e1rjuk be a kollekci\u00f3t, am\u00edg az ki nem \u00fcr\u00fcl!</p>"},{"location":"laborok/11-js/#beadando","title":"Beadand\u00f3","text":"<p>1. feladat beadand\u00f3 (1 pont)</p> <p>Illessz be egy k\u00e9perny\u0151k\u00e9pet n\u00e9h\u00e1ny hozz\u00e1adott tennival\u00f3r\u00f3l, amib\u0151l az egyiknek a neve a neptun k\u00f3dod legyen! (<code>f1.png</code>)</p>"},{"location":"laborok/11-js/#2-feladat-todo-elemek-allapotvaltas","title":"2. Feladat - Todo elemek \u00e1llapotv\u00e1lt\u00e1s","text":"<p>Az alkalmaz\u00e1sban t\u00f6bb helyen is kell \u00e1llapotv\u00e1ltoz\u00e1st kezelni. Egyfel\u0151l az egyes Todo elemek \u00e1llapota v\u00e1ltozhat, m\u00e1sfel\u0151l a tabf\u00fclekre kattintva csak az adott \u00e1llapotban l\u00e9v\u0151 elemeket kell megjelen\u00edteni, illetve jel\u00f6lni kell az aktu\u00e1lisan kiv\u00e1lasztott f\u00fclet is.</p> <p>Felhaszn\u00e1l\u00f3i interakci\u00f3t \u00fagy tudunk megval\u00f3s\u00edtani, hogy esem\u00e9nykezel\u0151t rendel\u00fcnk egy tag megfelel\u0151 esem\u00e9ny\u00e9hez. </p> <p>HTML-ben az <code>on{esem\u00e9nyn\u00e9v}</code> attrib\u00fatumok megad\u00e1s\u00e1val tudunk esem\u00e9nykezel\u0151t k\u00f6tni egy taghez. P\u00e9ld\u00e1ul: `Ment\u00e9s</p> <p>JavaScriptben a DOM API-t haszn\u00e1lval</p> <ul> <li>az elem referenci\u00e1j\u00e1t megszerezve az <code>.addEventListener(\"esem\u00e9nyn\u00e9v\", callbackF\u00fcggv\u00e9ny)</code> f\u00fcggv\u00e9ny megh\u00edv\u00e1s\u00e1val </li> <li>vagy a megfelel\u0151 feliratkoztat\u00f3 f\u00fcggv\u00e9ny be\u00e1ll\u00edt\u00e1s\u00e1val. P\u00e9ld\u00e1ul: <code>onclick = callbackF\u00fcggv\u00e9ny</code></li> </ul>"},{"location":"laborok/11-js/#21-tabful-valtas","title":"2.1. Tabf\u00fcl v\u00e1lt\u00e1s","text":"<p>K\u00e9sz\u00edts\u00fck el a k\u00f3dot, amiben az egyes tabf\u00fclek k\u00f6z\u00f6tt v\u00e1ltani tudunk. Ehhez a <code>todo.js</code> f\u00e1jlt kell kieg\u00e9sz\u00edteni.</p> <ul> <li>Vegy\u00fcnk fel egy v\u00e1ltoz\u00f3t <code>currentTab</code> n\u00e9vvel, amiben elt\u00e1roljuk az aktu\u00e1lisan kiv\u00e1lasztott f\u00fcl t\u00edpus\u00e1t.</li> <li>K\u00e9sz\u00eds\u00fcnk egy f\u00fcgg\u00e9nyt <code>selectTab</code> n\u00e9vvel, ami param\u00e9ter\u00fcl megkapja, hogy melyik f\u00fclet kell megjelen\u00edtenie \u00e9s ez alapj\u00e1n a <code>todo-tab</code> CSS oszt\u00e1llyal rendelkez\u0151 tabf\u00fcleken az <code>.active</code> CSS oszt\u00e1lyt \u00e1tteszi az \u00fajonnan kiv\u00e1lasztott f\u00fclre.</li> </ul> Megval\u00f3s\u00edt\u00e1s: Tabf\u00fcl v\u00e1lt\u00e1s JavaScript <pre><code>// Aktu\u00e1lisan kiv\u00e1lasztott f\u00fcl.\nlet currentTab; function selectTab(type) {\n// Be\u00e1ll\u00edtjuk az \u00fajonnan kiv\u00e1lasztott f\u00fclet.\ncurrentTab = type; for (let tab of document.getElementsByClassName(\"todo-tab\")) {\n// Az \u00f6sszes f\u00fclr\u0151l levessz\u00fck az `.active` oszt\u00e1lyt.\ntab.classList.remove(\"active\"); // Ha \u00e9ppen ez a f\u00fcl a kiv\u00e1lasztott, visszatessz\u00fck az `.active` oszt\u00e1lyt.\nif (tab.getAttribute(\"data-tab-name\") == type) tab.classList.add(\"active\");\n}\n\n// \u00dajrarajzolunk mindent.\nrenderTodos(); }\n\n// App indul\u00e1sakor (oldal bet\u00f6lt\u00e9skor) kiv\u00e1lasztjuk az \"all\" f\u00fclet.\nselectTab(\"all\"); </code></pre> self-invoking function declaration <p>A fenti minta, amikor egy f\u00fcggv\u00e9nyt a defini\u00e1l\u00e1sa ut\u00e1n k\u00f6zvetlen\u00fcl megh\u00edvunk, egy \"cs\u00fany\u00e1bb\", de elterjedt alternat\u00edv\u00e1val szokt\u00e1k alkalmazni, ez az \u00fan. self-invoking function declaration, aminek sok v\u00e1ltozata ismeretes, ez az egyik: <pre><code>(const selectTab = function(type) { /* ... */})(\"all\");\n</code></pre></p> <ul> <li>A HTML-ben az egyes f\u00fclekhez a klikk esem\u00e9ny kezel\u0151ben h\u00edvjuk meg a <code>selectTab</code> f\u00fcggv\u00e9nyt. Tipp: <code>onclick=\"selectTab('all')\"</code>)</li> <li>Ezen fel\u00fcl minden f\u00fclh\u00f6z vegy\u00fcnk fel egy adatt\u00e1rol\u00f3 attrib\u00fatumot is. Ezt az attrib\u00fatumot a <code>data-</code> el\u0151taggal l\u00e1ttuk el jelezv\u00e9n, hogy az attrib\u00fatum kiz\u00e1r\u00f3lag adathordoz\u00e1sra szolg\u00e1l. Tipp: <code>data-tab-name=\"all\"</code></li> </ul> Megval\u00f3s\u00edt\u00e1s: Tabf\u00fcl v\u00e1lt\u00e1s HTML <pre><code>&lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"todo-tab nav-link\" data-tab-name=\"all\" href=\"#all\" onclick=\"selectTab('all')\"&gt;\n        All &lt;span class=\"badge bg-secondary\"&gt;1&lt;/span&gt;\n    &lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"todo-tab nav-link\" data-tab-name=\"active\" href=\"#active\" onclick=\"selectTab('active')\"&gt;\n        Active &lt;span class=\"badge bg-secondary\"&gt;1&lt;/span&gt;\n    &lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"todo-tab nav-link\" data-tab-name=\"inactive\" href=\"#inactive\" onclick=\"selectTab('inactive')\"&gt;\n        Inactive &lt;span class=\"badge bg-secondary\"&gt;&lt;/span&gt;\n    &lt;/a&gt;\n&lt;/li&gt;\n&lt;li class=\"nav-item\"&gt;\n    &lt;a class=\"todo-tab nav-link\" data-tab-name=\"done\" href=\"#done\" onclick=\"selectTab('done')\"&gt;\n        Done &lt;span class=\"badge bg-secondary\"&gt;&lt;/span&gt;\n    &lt;/a&gt;\n&lt;/li&gt;\n</code></pre>"},{"location":"laborok/11-js/#22-todo-elem-allapot-valtasa","title":"2.2. Todo elem \u00e1llapot v\u00e1lt\u00e1sa","text":"<p>Az elemek \u00e1llapot\u00e1nak v\u00e1ltoz\u00e1s\u00e1t hasonl\u00f3k\u00e9ppen kezelhetj\u00fck, mint a tabf\u00fclek v\u00e1lt\u00e1s\u00e1t.</p> <p>Amikor a gombokat gy\u00e1rtjuk a <code>renderTodos()</code> f\u00fcggv\u00e9nyben, az esem\u00e9nykezel\u0151ket ott helyben be tudjuk regisztr\u00e1lni (a <code>/ TODO: a gomb klikk esem\u00e9ny\u00e9nek kezel\u00e9se</code> komment hely\u00e9re)</p> <ul> <li>Regisztr\u00e1ljuk be a kattint\u00e1s esem\u00e9nykezel\u0151t a gombhoz.</li> <li>A <code>remove</code> akci\u00f3t k\u00fcl\u00f6n kell kezelni. Egy meger\u0151s\u00edt\u00e9s ut\u00e1n (tipp: <code>confirm</code>) a <code>todos</code> t\u00f6mbb\u0151l kell kivenni az elemet.</li> <li>Az \u00f6sszes t\u00f6bbi esetben csak az adott todo elem \u00e1llapot\u00e1t kell m\u00f3dos\u00edtani a gomb actionj\u00e9re.</li> </ul> Megval\u00f3s\u00edt\u00e1s: Gomb esem\u00e9nykezel\u0151k \u00e1llapot v\u00e1ltoz\u00e1shoz <pre><code>// Feliratkoz\u00e1s a kattints esem\u00e9nyre.\n// A `btn.onclick = function() {` f\u00fcggv\u00e9ny helyett az arrow function-t haszn\u00e1ljuk.\nbtn.onclick = () =&gt; { // T\u00f6rl\u00e9st k\u00fcl\u00f6n kell kezelni.\nif (button.action === \"remove\") { // Meger\u0151s\u00edt\u00e9s ut\u00e1n kivesz\u00fcnk a 'todo'-adik elemt\u0151l 1 elemet a todos t\u00f6mbb\u0151l.\nif (confirm(\"Are you sure you want to delete the todo titled '\" + todo.name + \"'?\")) { todos.splice(todos.indexOf(todo), 1);\nrenderTodos();\n}\n}\nelse { // Ha nem t\u00f6rl\u00e9s, akkor \u00e1t\u00e1ll\u00edtjuk a kiv\u00e1lasztott todo \u00e1llapot\u00e1t a gomb \u00e1llapot\u00e1ra.\ntodo.state = button.action;\nrenderTodos();\n}\n}\n</code></pre> <p>Confirm</p> <p>\u00c9rdekess\u00e9g a <code>confirm()</code> f\u00fcggv\u00e9ny, amely b\u00f6ng\u00e9sz\u0151ben nat\u00edvan implement\u00e1lt: a felhaszn\u00e1l\u00f3nak egy egyszer\u0171 meger\u0151s\u00edt\u0151 ablakot dob fel a megadott sz\u00f6veggel, \u00e9s blokkolva v\u00e1rakozik a v\u00e1laszra. A v\u00e1lasz egy boolean \u00e9rt\u00e9k, \u00edgy az <code>if</code> t\u00f6rzse csak akkor fut le, ha a felhaszn\u00e1l\u00f3 OK-val v\u00e1laszol. Hasonl\u00f3 az <code>alert()</code>, az viszont csak egy OK-zhat\u00f3 figyelmeztet\u00e9st dob fel, ami nem t\u00e9r vissza semmivel, ill. a <code>prompt()</code>, amivel stringet k\u00e9rhet\u00fcnk be. Ezeket ritk\u00e1n, lehet\u0151leg soha nem haszn\u00e1ljuk, helyett\u00fck nem blokkol\u00f3, aszinkron egyedi megold\u00e1st k\u00e9sz\u00edt\u00fcnk.</p> <p>Ha <code>for (var ... in ...)</code> ciklust \u00e9s <code>function</code>-t haszn\u00e1ln\u00e1nk a <code>buttons</code> \u00e9s <code>todos</code> t\u00f6mb\u00f6k\u00f6n, akkor a klikk esem\u00e9nykezel\u0151 ebben a form\u00e1ban hib\u00e1s lesz, mert az iter\u00e1ci\u00f3k \u00fajrahasznos\u00edtan\u00e1k a todo \u00e9s button v\u00e1ltoz\u00f3kat. Az arrow function viszont ezeket a v\u00e1ltoz\u00f3kat \u00fan. \"closure\"-be helyezi, technikailag a v\u00e1ltoz\u00f3kb\u00f3l egy lok\u00e1lis m\u00e1solat k\u00e9sz\u00fcl, \u00edgy a f\u00fcggv\u00e9ny helyesen fog lefutni.</p>"},{"location":"laborok/11-js/#23-badge-ek-frissitese","title":"2.3. Badge-ek friss\u00edt\u00e9se","text":"<p>Eg\u00e9sz\u00edts\u00fck ki a <code>renderTodos()</code> f\u00fcggv\u00e9nyt, hogy friss\u00edtse a f\u00fclek mellett tal\u00e1lhat\u00f3 badge-ben megjelen\u0151 sz\u00e1m\u00e9rt\u00e9keket:</p> Megval\u00f3s\u00edt\u00e1s: badge-ek friss\u00edt\u00e9se <pre><code>document.querySelector(\".todo-tab[data-tab-name='all'] .badge\").innerHTML = todos.length || \"\";\n\nfor (let state of states)\ndocument.querySelector(`.todo-tab[data-tab-name='${state}'] .badge`).innerHTML = todos.filter(t =&gt; t.state === state).length || \"\";\n</code></pre> <p>Filter</p> <p>A <code>filter()</code> f\u00fcggv\u00e9nynek egy callbacket adunk \u00e1t, ez fog ki\u00e9rt\u00e9kel\u0151dni minden elemre: ha a felt\u00e9tel igaz, akkor az elemet visszakapjuk, k\u00fcl\u00f6nben nem. Magyarul: azokra az elemekre sz\u0171r\u00fcnk, amelyek \u00e1llapota az aktu\u00e1lisan bej\u00e1rt \u00e1llapot (\"active\", \"inactive\", \"done\"), teh\u00e1t megsz\u00e1moljuk, h\u00e1ny elem van az adott st\u00e1tuszban. Ezen fel\u00fcl, ha az \u00e9rt\u00e9k <code>falsey</code>, teh\u00e1t eset\u00fcnkben 0, helyette \u00fcres stringet adunk vissza, \u00edgy nem fog megjelenni a badge.</p>"},{"location":"laborok/11-js/#24-lista-szurese","title":"2.4. Lista sz\u0171r\u00e9se","text":"<p>Utols\u00f3 l\u00e9p\u00e9sk\u00e9nt logikus, hogy az aktu\u00e1lis f\u00fcl alapj\u00e1n sz\u0171rj\u00fck le az elemeket, ne mindig az \u00f6sszes l\u00e1tsz\u00f3djon. Ezt a <code>renderTodos()</code> apr\u00f3 m\u00f3dos\u00edt\u00e1s\u00e1val tudjuk megtenni. Sz\u0171rj\u00fck le a <code>todos</code> t\u00f6mb\u00f6t, majd a sz\u0171r\u00e9s eredm\u00e9ny\u00e9n iter\u00e1ljunk v\u00e9gig a <code>for..of</code> ciklussal.</p> <p>Teh\u00e1t az eredeti <code>todos</code> t\u00f6mb\u00f6t a <code>filter</code> seg\u00edts\u00e9g\u00e9vel sz\u0171rj\u00fck \u00fagy, hogy csak azok az elemek maradjanak a sz\u0171rt t\u00f6mbben, ami az aktu\u00e1lis f\u00fclnek megfelel VAGY az \"all\" f\u00fcl\u00f6n vagyunk (teh\u00e1t l\u00e1tsz\u00f3djon minden).</p> Megval\u00f3s\u00edt\u00e1s: lista sz\u0171r\u00e9se <pre><code>const filtered = todos.filter(function(todo){ return todo.state === currentTab || currentTab === \"all\"; });\nfor(let todo of filtered) { // ...\n</code></pre> Alternat\u00edva <p>Egy t\u00f6m\u00f6r megold\u00e1s, amit persze nem egyszer\u0171 meg\u00e9rteni, az al\u00e1bbi:</p> <pre><code>const filtered = todos.filter(todo =&gt; [\"all\", todo.state].includes(currentTab);\n</code></pre> <p>Szint\u00e9n alternat\u00edv megold\u00e1sk\u00e9nt, ahol a f\u00fcl vizsg\u00e1latot kiszervezt\u00fck:</p> <pre><code>const filtered = (currentTab === 'all' ? todos : todos.filter(todo =&gt; todo.state === currentTab));\n</code></pre>"},{"location":"laborok/11-js/#beadando_1","title":"Beadand\u00f3","text":"<p>BEADAND\u00d3 (1 pont)</p> <p>Illesszen be egy-egy k\u00e9perny\u0151k\u00e9pet (<code>f2-1.png</code>, <code>f2-2.png</code>, <code>f2-3.png</code>) a tennival\u00f3k \u00e1llapotainak v\u00e1ltoztat\u00e1s\u00e1r\u00f3l, a k\u00fcl\u00f6nb\u00f6z\u0151 oldalakon t\u00f6rt\u00e9n\u0151 megjelen\u00e9s\u00fckr\u0151l!</p>"},{"location":"laborok/11-js/#3-feladat-onallo-sorrendezes","title":"3. Feladat (\u00d6n\u00e1ll\u00f3) - Sorrendez\u00e9s","text":"<p>Legyenek fel-le mozgathat\u00f3k a to-do elemek az <code>all</code> list\u00e1ban!</p> <ul> <li>Hozz l\u00e9tre k\u00e9t \u00faj gombot, amely a felfel\u00e9 \u00e9s lefel\u00e9 mozgat\u00e1st jelzik az elemn\u00e9l! Haszn\u00e1ld a <code>fas fa-arrow-up</code> \u00e9s <code>fas fa-arrow-down</code> oszt\u00e1lyokat az ikonokhoz! A gombok csak az <code>all</code> f\u00fcl\u00f6n legyenek l\u00e1that\u00f3k!</li> <li>A gomb legyen letiltva, ha nem mozgathat\u00f3 az elem a megadott ir\u00e1nyba!</li> <li>A gombra kattintva az elem ker\u00fclj\u00f6n el\u0151r\u00e9bb/h\u00e1tr\u00e9bb az elemek list\u00e1j\u00e1ban!</li> </ul>"},{"location":"laborok/11-js/#beadando_2","title":"Beadand\u00f3","text":"<p>BEADAND\u00d3 (1.5 pont)</p> <p>Illessz be egy-egy k\u00e9perny\u0151k\u00e9pet n\u00e9h\u00e1ny tennival\u00f3r\u00f3l sorrendez\u00e9s el\u0151tt \u00e9s ut\u00e1n! (<code>f3-1.png</code>, <code>f3-2.png</code>)</p>"},{"location":"laborok/11-js/#4-feladat-onallo-perzisztalas","title":"4. Feladat (\u00d6n\u00e1ll\u00f3) - Perziszt\u00e1l\u00e1s","text":"<p>Egy to-do list\u00e1nak nem sok \u00e9rtelme van, ha nem menthet\u0151k el az adataink. A ment\u00e9sre egy\u00e9rtelm\u0171 lehet\u0151s\u00e9get biztos\u00edt a <code>localStorage</code> \u00e9s a <code>sessionStorage</code>. Mindkett\u0151 kulcs-\u00e9rt\u00e9k t\u00e1rol\u00f3, a kulcsok \u00e9s \u00e9rt\u00e9kek egyar\u00e1nt <code>string</code> t\u00edpus\u00faak. A k\u00fcl\u00f6nbs\u00e9g a kett\u0151 k\u00f6z\u00f6tt az \u00e9lettartamuk: m\u00edg a <code>localStorage</code> - b\u00e1r korl\u00e1tos m\u00e9ret\u0171 - a b\u00f6ng\u00e9sz\u0151t \u00fajraind\u00edtva is megtartja \u00e1llapot\u00e1t, a <code>sessionStorage</code> a b\u00f6ng\u00e9sz\u0151t/f\u00fclet bez\u00e1rva elv\u00e9sz. A <code>sessionStorage</code> adatokat mem\u00f3ri\u00e1ban, a <code>localStorage</code> adatokat viszont perzisztensen, f\u00e1jlban t\u00e1rolja a b\u00f6ng\u00e9sz\u0151.</p> <p>A t\u00e1rol\u00e1shoz minden renderel\u00e9si ciklus elej\u00e9n volna \u00e9rdemes menten\u00fcnk. B\u00e1r az alkalmaz\u00e1sunk <code>renderTodos()</code> f\u00fcggv\u00e9nye nev\u00e9b\u0151l fakad\u00f3an a DOM-ot manipul\u00e1lja, ez az a pont, ahol b\u00e1rmilyen v\u00e1ltoz\u00e1sr\u00f3l \u00e9rtes\u00fcl\u00fcnk. Fontos, hogy tartsuk be a separation of concerns elvet: mindenki a saj\u00e1t feladat\u00e1val foglalkozzon! Ez\u00e9rt ne itt val\u00f3s\u00edtsuk meg a perziszt\u00e1l\u00e1st, hanem egy saj\u00e1t f\u00fcggv\u00e9nyben, amit megh\u00edvunk minden v\u00e1ltoz\u00e1st induk\u00e1l\u00f3 ponton a k\u00f3dban:</p> <ul> <li>elem \u00e1llapot\u00e1nak v\u00e1ltoz\u00e1sa,</li> <li>elem l\u00e9trehoz\u00e1sa,</li> <li>elem t\u00f6rl\u00e9se.</li> </ul> <p>V\u00e1ltoz\u00e1sdetekt\u00e1l\u00e1s</p> <p>Komplexebb alkalmaz\u00e1sfejleszt\u0151 keretrendszerekben is probl\u00e9m\u00e1t okoz a v\u00e1ltoz\u00e1sokr\u00f3l t\u00f6rt\u00e9n\u0151 \u00e9rtes\u00fcl\u00e9s, a React, az AngularJS \u00e9s az Angular mind m\u00e1s \u00e9s m\u00e1s m\u00f3dszereket alkalmaznak a v\u00e1ltoz\u00e1sok detekt\u00e1l\u00e1s\u00e1ra.</p> <p>A t\u00e1rol\u00e1shoz a <code>localStorage.setItem(key, value)</code> f\u00fcggv\u00e9nyt haszn\u00e1ljuk. A soros\u00edtand\u00f3 objektumot egyszer\u0171en JSON-be soros\u00edthatjuk: <code>JSON.stringify(object)</code>, illetve visszafejthetj\u00fck: <code>JSON.parse(string)</code>.</p> <p>Objektum soros\u00edt\u00e1s</p> <p>Fontos, hogy a <code>JSON.parse()</code> \u00e1ltal visszafejtett objektumok egyszer\u0171 objektumok, ha a forr\u00e1s objektumunkon pl. f\u00fcggv\u00e9nyek is szerepeltek, azok a deszerializ\u00e1lt objektumon nem lesznek el\u00e9rhet\u0151k!</p> <p>A r\u00e9szfeladatok teh\u00e1t:</p> <ul> <li>K\u00e9sz\u00edts egy f\u00fcggv\u00e9nyt, ami elmenti a teljes todos t\u00f6mb tartalm\u00e1t <code>localStorage</code>-ba,</li> <li>B\u00e1rmilyen v\u00e1ltoz\u00e1s hat\u00e1s\u00e1ra (elem \u00e1llapotv\u00e1ltoz\u00e1sa, l\u00e9trej\u00f6tte, t\u00f6rl\u00e9se) mentsd el a f\u00fcggv\u00e9ny seg\u00edts\u00e9g\u00e9vel az elemeket,</li> <li>Alkalmaz\u00e1s indul\u00e1sakor egyetlen alkalommal t\u00f6ltsd vissza az \u00f6sszes elt\u00e1rolt todo elemet, \u00e9s ez legyen a <code>todos</code> v\u00e1ltoz\u00f3 kiindul\u00f3 tartalma!</li> <li>Az elk\u00e9sz\u00edtett alkalmaz\u00e1st az implement\u00e1ci\u00f3 ut\u00e1n teszted egy inkogn\u00edt\u00f3 abalkban is, hogy ott is m\u0171k\u00f6dik-e, vagy net\u00e1n a <code>todos</code> t\u00f6mb <code>null</code> vagy <code>undefined</code> \u00e9rt\u00e9ket kap, amin a <code>push</code> nem \u00e9rtelmezett.</li> </ul> <p>Storage debuggol\u00e1s</p> <p>A storage tartalm\u00e1t b\u00f6ng\u00e9sz\u0151t\u0151l f\u00fcgg\u0151en k\u00fcl\u00f6nb\u00f6z\u0151 helyen tudjuk megvizsg\u00e1lni, jellemz\u0151en az Application/Storage vagy Debugger f\u00fcl\u00f6n tal\u00e1lhat\u00f3.</p>"},{"location":"laborok/11-js/#beadando_3","title":"Beadand\u00f3","text":"<p>BEADAND\u00d3 (1.5 pont)</p> <p>Illessz be egy k\u00e9perny\u0151k\u00e9pet a lok\u00e1lis t\u00e1rol\u00f3ban (localStorage) tal\u00e1lhat\u00f3 perziszt\u00e1lt to-do elemekr\u0151l! (<code>f4.png</code>)</p>"},{"location":"laborok/12-js-advanced/","title":"Labor 12 - Halad\u00f3 JavaScript","text":""},{"location":"laborok/12-js-advanced/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben.</p>"},{"location":"laborok/12-js-advanced/#modern-javascript-funkciok-es-eszkozok","title":"Modern JavaScript funkci\u00f3k \u00e9s eszk\u00f6z\u00f6k","text":"<p>A JavaScript nyelv napjainkban rohamosan (tal\u00e1n lassan cs\u00f6kken\u0151 \u00fctemben) fejl\u0151dik, de a b\u00f6ng\u00e9sz\u0151gy\u00e1rt\u00f3k lassan felvett\u00e9k az iramot ECMAScript szabv\u00e1nyos\u00edt\u00e1si folyamattal. A manaps\u00e1g t\u00e1mogatand\u00f3 b\u00f6ng\u00e9sz\u0151k legt\u00f6bbje szinte az \u00f6sszes ECMAScript 5 \u00e9s 6 funkci\u00f3t t\u00e1mogatja. Az Internet Explorer egy elavult, manaps\u00e1g ker\u00fclend\u0151 b\u00f6ng\u00e9sz\u0151, ami t\u00e1mogat bizonyos ES5 funkci\u00f3kat, de \u00faj funkci\u00f3friss\u00edt\u00e9seket nem kap. Kev\u00e9s \u00e9rv maradt a haszn\u00e1lata mellett, ugyanis a Microsoft Edge b\u00f6ng\u00e9sz\u0151 eset\u00e9ben is \u00e1tt\u00e9rt a Chromium motorra, ami m\u00e9g Windows 7 OS-en is el\u00e9rhet\u0151. Kir\u00edv\u00f3 eset gyakran n\u00e9h\u00e1ny kev\u00e9sb\u00e9 elterjedt mobil b\u00f6ng\u00e9sz\u0151 (pl. Opera Mini), valamint a Safari iOS \u00e9s Mac verzi\u00f3i is hagynak n\u00e9mi k\u00edv\u00e1nni val\u00f3t maguk ut\u00e1n (a k\u00fcl\u00f6nf\u00e9le JavaScript funkci\u00f3k t\u00e1mogat\u00e1sa ter\u00e9n). Ezzel azt mondhatjuk, hogy modern JavaScript alap\u00fa alkalmaz\u00e1sok fejleszt\u00e9sekor elegend\u0151 az \u00fan. \"\u00f6r\u00f6kz\u00f6ld\" b\u00f6ng\u00e9sz\u0151ket t\u00e1mogatnunk, amik naprak\u00e9szen tartj\u00e1k magukat folyamatos friss\u00edt\u00e9sekkel.</p> <p>Az \u00faj nyelvi funkci\u00f3k jelent\u0151s r\u00e9sze megfeleltethet\u0151 kor\u00e1bban alkalmazott programoz\u00e1si mint\u00e1knak, ez\u00e1ltal az \u00fajabb funkci\u00f3kat (\u00faj ECMAScript verzi\u00f3kban megjelen\u0151 szabv\u00e1nyos elemeket) leford\u00edthatjuk szabv\u00e1nyos kor\u00e1bbi ES verzi\u00f3ra (jellemz\u0151en ES5-re). A babel ford\u00edt\u00f3 a \"modern\" forr\u00e1sunkat k\u00e9pes \u00e1tford\u00edtani er\u0151sen kompatibilis JavaScriptt\u00e9. Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g a TypeScript, ami a JavaScript nyelvre \u00e9p\u00fcl, kib\u0151v\u00edtve azt k\u00fcl\u00f6nf\u00e9le funkci\u00f3kkal, els\u0151sorban a t\u00edpusinform\u00e1ci\u00f3k rendszer\u00e9vel.</p> <p>Typescript</p> <p>A TypeScript nyelv a fenti ford\u00edt\u00e1si folyamatot annyival eg\u00e9sz\u00edti ki, hogy ford\u00edt\u00e1si id\u0151ben k\u00fcl\u00f6nf\u00e9le vizsg\u00e1latokat v\u00e9gez a k\u00f3don, \u00edgy a hib\u00e1ink ak\u00e1r m\u00e1r ford\u00edt\u00e1si id\u0151ben is kider\u00fclhetnek. Els\u0151sorban ehhez t\u00edpusvizsg\u00e1latokat \u00e9s statikus k\u00f3danal\u00edzist hajt v\u00e9gre. A VS Code az anal\u00edzist TypeScript seg\u00edts\u00e9g\u00e9vel a norm\u00e1l JavaScript f\u00e1jlokon is elv\u00e9gzi, ez\u00e9rt kapunk IntelliSense-t, s\u0151t, ez\u00e9rt jelennek meg esetenk\u00e9nt v\u00e1ltoz\u00f3k, param\u00e9terek t\u00edpusai is a seg\u00edts\u00e9gben.</p> <p>Fontosabb modern JS k\u00e9pess\u00e9gek:</p> <ul> <li>arrow function: <code>function (param) { return param + 1; }</code> helyett \u00edrhatjuk a r\u00f6videbb <code>param =&gt; param + 1;</code> k\u00f3dot. Ezen fel\u00fcl az arrow function nem rendel k\u00fcl\u00f6n \u00e9rt\u00e9ket a <code>this</code> v\u00e1ltoz\u00f3nak, \u00edgy a this ilyen esetekben a k\u00fcls\u0151 f\u00fcggv\u00e9nyre mutat (a f\u00fcggv\u00e9nyen bel\u00fcl ugyanaz a <code>this</code>, mint a h\u00edv\u00f3 f\u00e9l sz\u00e1m\u00e1ra).</li> <li> <p>string interpolation: a string interpol\u00e1ci\u00f3 sablonoz\u00e1st, \"template-ez\u00e9st\" jelent, a string-ben k\u00fcl\u00f6nb\u00f6z\u0151 hely\u0151rz\u0151ket helyezhet\u00fcnk el, amelyek ki\u00e9rt\u00e9kel\u0151dnek: </p> <pre><code>`Hello, I'm ${this.getName()}!`\n</code></pre> </li> <li> <p>const \u00e9s let: a <code>var</code> \"univerz\u00e1lis\" v\u00e1ltoz\u00f3deklar\u00e1ci\u00f3 helyett \u00e9rdemesebb haszn\u00e1lni a <code>let</code> \u00e9s <code>const</code> kulcsszavakat: el\u0151bbi v\u00e1ltoztathat \u00e9rt\u00e9ket, ut\u00f3bbi pedig nem. El\u0151ny\u00fck, hogy val\u00f3ban blokkszint\u0171ek, a <code>var</code> k\u00e9pes blokkok k\u00f6z\u00f6tt is \u00e9rv\u00e9nyes\u00fclni (sajnos).</p> </li> <li> <p>class: haszn\u00e1lhatjuk az objektum-orient\u00e1lt class kulcssz\u00f3t, amelyet kor\u00e1bban c\u00edmk\u00e9zetlen, k\u00f6z\u00f6ns\u00e9ges konstruktorf\u00fcggv\u00e9nyekkel pr\u00f3b\u00e1ltunk k\u00f6r\u00fcl\u00edrni:</p> <pre><code>class Dog {\nconstructor(name) {\nthis.getName = () =&gt; name;\n}\nbark() {\nalert(`Hello, I'm ${this.getName()}!`);\n}\n}\n\nconst spot = new Dog(\"Spot\");\nspot.bark();\n</code></pre> </li> <li> <p>import/export: f\u00e1jljainkban v\u00e1ltoz\u00f3kat, oszt\u00e1lyokat deklar\u00e1lhatunk, melyeket k\u00edv\u00fclr\u0151l haszn\u00e1lhatnak (kv\u00e1zi, mint a publikus l\u00e1that\u00f3s\u00e1g), ezeket az export kulcssz\u00f3val l\u00e1tjuk el. A m\u00e1sik oldalon, ahol haszn\u00e1lni szeretn\u00e9nk a f\u00e1jlb\u00f3l egy publik\u00e1lt szimb\u00f3lumot, az import kulcssz\u00f3val tehetj\u00fck ezt meg, a f\u00e1jl el\u00e9r\u00e9si \u00fatj\u00e1t megadva:</p> dog.js<pre><code>export class Dog { bark() =&gt; console.log(`Woof! I'm ${this.name}!`)\n}\n</code></pre> barks.js<pre><code>import { Dog } from './dog';\n\nexport function makeNewDogAndBark(name) {\nconst dog = new Dog(name);\ndog.bark();\nreturn dog;\n}\n</code></pre> </li> </ul> <p>Babel n\u00e9lk\u00fcl</p> <p>Az itt bemutatott JavaScript funkci\u00f3k mindegyike el\u00e9rhet\u0151 m\u00e1r a b\u00f6ng\u00e9sz\u0151ben, \u00edgy haszn\u00e1lhatjuk \u0151ket babel \u00e9s webpack n\u00e9lk\u00fcl is, de erre az \u00fatmutat\u00f3 r\u00e9szletes utas\u00edt\u00e1st nem ad. Ha valaki webpack n\u00e9lk\u00fcl szeretn\u00e9 elk\u00e9sz\u00edteni a labort, \u00fagy:</p> <ul> <li>a <code>ClientApp</code> helyett k\u00f6zvetlen\u00fcl a <code>wwwroot</code>-ba dolgozzon,</li> <li>az <code>import { X } from 'x'</code> helyett minden\u00fctt <code>import { X } from 'x.js'</code> szintaxist haszn\u00e1ljon,</li> <li>Bootstrap belinkel\u00e9se t\u00f6rt\u00e9nhet k\u00f6zvetlen\u00fcl CDN-r\u0151l: <code>&lt;link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"&gt;</code>,</li> <li>a kiindul\u00f3 JavaScript f\u00e1jl a belinkelt <code>guessgame.js</code> lesz a <code>client-start.js</code> helyett (az ut\u00f3bbi f\u00e1jlra nem lesz sz\u00fcks\u00e9g),</li> <li>a <code>guessgame.js</code> hivatkoz\u00e1sakor arra <code>module</code>-k\u00e9nt kell hivatkozni (k\u00fcl\u00f6nben az <code>import</code> utas\u00edt\u00e1sok nem fognak m\u0171k\u00f6dni), teh\u00e1t a kiindul\u00f3 <code>&lt;script&gt;</code> elem lecser\u00e9lend\u0151: <code>&lt;script src=\"guessgame.js\" type=\"module\"&gt;</code>.</li> </ul> <p>A m\u0171k\u00f6d\u00e9s ebben az esetben alapvet\u0151en m\u00e1s: a webpack seg\u00edts\u00e9g\u00e9vel az \u00f6sszes .js f\u00e1jlunkb\u00f3l egyetlen, \u00f6sszecsomagolt f\u00e1jl k\u00e9sz\u00fclne, a k\u00f6zvetlen modulbet\u00f6lt\u00e9ssel viszont minden hivatkozott .js f\u00e1jl k\u00fcl\u00f6n-k\u00fcl\u00f6n HTTP k\u00e9r\u00e9sekkel jut el a b\u00f6ng\u00e9sz\u0151be. Ez fejleszt\u00e9si id\u0151ben nem gond, de \u00e9les alkalmaz\u00e1sn\u00e1l mindenk\u00e9ppen valamif\u00e9le build folyamat, SPA CLI eszk\u00f6z vagy modulcsomagol\u00f3 haszn\u00e1lata javasolt.</p>"},{"location":"laborok/12-js-advanced/#feladat-1-elokeszites","title":"Feladat 1 - El\u0151k\u00e9sz\u00edt\u00e9s","text":"<p>A laboron k\u00e9sz\u00edtend\u0151 alkalmaz\u00e1s egy kisebb/nagyobb bark\u00f3ba lesz. A \"g\u00e9p\" gondol egy sz\u00e1mra, majd a felhaszn\u00e1l\u00f3 dolga kital\u00e1lni a sz\u00e1mot. A tippre a v\u00e1lasz mindig \"kisebb\", \"nagyobb\" vagy \"tal\u00e1lt\".</p> <p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github.</p> <ol> <li>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</li> <li>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.<ul> <li>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</li> </ul> </li> <li>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</li> <li>A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</li> <li>Nyissuk meg a Visual Studio Code-dal a repository <code>feladat\\ClientApp</code> mapp\u00e1j\u00e1t (File -&gt; Open Folder)!</li> <li> <p>Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsokat Figyelem! El\u0151z\u0151 laborokhoz k\u00e9pest v\u00e1ltoz\u00e1s!</p> <pre><code>npm install\nnpm run start\n</code></pre> <p>NPM cache</p> <p>Fontos! A laborg\u00e9peken nem vagy nem mindig \u00e9rhet\u0151 el megfelel\u0151en az NPM lok\u00e1lis cache p\u00e9ld\u00e1nya, ez\u00e9rt haszn\u00e1ljuk helyette itt az <code>npm install --cache .cache</code> parancsot, ami az aktu\u00e1lis mapp\u00e1ban egy <code>.cache</code> nev\u0171 mapp\u00e1t haszn\u00e1l a k\u00f6zponti gyors\u00edt\u00f3t\u00e1r helyett. Lok\u00e1lis g\u00e9pen is haszn\u00e1lhatjuk ezt a parancsot, de ott elegend\u0151 (kell, hogy legyen) az <code>npm install</code> is.</p> <p>Ez a <code>.cache</code> mappa NE KER\u00dcLJ\u00d6N commitol\u00e1sra!</p> </li> <li> <p>Pr\u00f3b\u00e1ljuk ki az alkalmaz\u00e1st b\u00f6ng\u00e9sz\u0151ben!</p> </li> </ol> <p>BEADAND\u00d3 (1 pont)</p> <p>M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet az alkalmaz\u00e1s kezd\u0151k\u00e9perny\u0151j\u00e9r\u0151l! (<code>f1.png</code>)</p>"},{"location":"laborok/12-js-advanced/#kiindulo-bemutatasa","title":"Kiindul\u00f3 bemutat\u00e1sa","text":""},{"location":"laborok/12-js-advanced/#npm","title":"NPM","text":"<p>A jelenlegi kliens alkalmaz\u00e1sunk egy node.js \u00e9s npm alap\u00fa fejleszt\u00e9si eszk\u00f6zk\u00e9szletet haszn\u00e1l, amely jelenleg a legelterjedtebb JS alap\u00fa munkafolyamat az iparban is. Ennek az alap konfigur\u00e1ci\u00f3ja (amelyet ak\u00e1r projektf\u00e1jlnak is tekinthet\u00fcnk) a <code>package.json</code> f\u00e1jlban tal\u00e1lhat\u00f3, amelynek a legfontosabb elemei:</p> <ul> <li>Projekt metaadatok: tartalmazz\u00e1k a projekt tulajdons\u00e1gait (n\u00e9v, szerz\u0151, verzi\u00f3, stb.)</li> <li>F\u00fcgg\u0151s\u00e9gek: kliensoldali JavaScript f\u00fcgg\u0151s\u00e9geket (<code>dependencies</code>) \u00e9s fejleszt\u00e9s idej\u0171 eszk\u00f6z\u00f6ket (<code>devDependencies</code>) defini\u00e1lhatunk az NPM csomagkezel\u0151b\u0151l, amelyeket az <code>npm install</code> parancs t\u00f6lt le a <code>node_modules</code> mapp\u00e1ba. Ebben a projektben kliens oldalon haszn\u00e1ljuk a Bootstrapet \u00e9s a jQueryt, fejleszt\u00e9s id\u0151ben pedig a Webpacket \u00e9s Babelt.</li> <li>Parancsok: a <code>scripts</code> tulajdons\u00e1gban el\u0151re defini\u00e1lt parancsokat vehet\u00fcnk fel, amelyeket az npm-en kereszt\u00fcl tudunk futtatni <code>npm run &lt;parancs neve&gt;</code> form\u00e1ban. Eset\u00fcnkben a <code>start</code> az \u00e9rdekes, mivel az lefuttatja a webpack ford\u00edt\u00e1si folyamat\u00e1t, majd nyit egy fejleszt\u00e9s idej\u0171 szervert adott porton (mint el\u0151z\u0151 \u00f3r\u00e1kon a <code>http-server</code>) <code>serve --port XXXX</code>, \u00e9s megnyitja a b\u00f6ng\u00e9sz\u0151t is <code>--open</code>.</li> </ul> <p>B\u00f6ng\u00e9sz\u0151 friss\u00edt\u00e9s</p> <p>Az alkalmaz\u00e1s indul\u00e1s\u00e1t k\u00f6vet\u0151en (<code>serve</code> m\u00f3dban), ha \u00faj JS f\u00e1jlokat hozunk l\u00e9tre \u00e9s hivatkozzuk \u0151ket, a Webpack HMR (Hot Module Replacement) ezeket a f\u00e1jlokat automatikusan friss\u00edti a b\u00f6ng\u00e9sz\u0151ben. Ett\u0151l f\u00fcggetlen\u00fcl el\u0151fordulhat, hogy a kliens oldalt \u00fajra kell ind\u00edtanunk, ekkor tov\u00e1bbra is sz\u00fcks\u00e9ges a b\u00f6ng\u00e9sz\u0151ben friss\u00edten\u00fcnk F5-tel.</p>"},{"location":"laborok/12-js-advanced/#webpack-babel","title":"Webpack, babel","text":"<p>A Webpack egy \"modulcsomagol\u00f3\". A JavaScript f\u00e1jljainkat \u00e9rdemes k\u00fcl\u00f6n tartani, hogy ne t\u00f6bbt\u00edzezer soros k\u00f3df\u00e1jljaink legyenek, hanem minden a saj\u00e1t hely\u00e9n legyen - mivel a b\u00f6ng\u00e9sz\u0151ben sok f\u00e1jlt let\u00f6lteni pedig m\u00e9g HTTP/2-vel sem optim\u00e1lisabb, mintha egy nagy f\u00e1jlt t\u00f6lten\u00e9nk le. Webpack seg\u00edts\u00e9g\u00e9vel t\u00f6bbek k\u00f6z\u00f6tt a JS f\u00e1jljainkat minifik\u00e1lni tudjuk, \u00f6ssze tudjuk \u0151ket csomagolni kevesebb f\u00e1jll\u00e1, valamint k\u00fcl\u00f6nf\u00e9le plusz funkci\u00f3kat tudunk pluginekkel \u00e9s bet\u00f6lt\u0151kkel az alkalmaz\u00e1sunk terjeszt\u00e9si folyamat\u00e1ba \u00e9kelni, pl. source map f\u00e1jlokat, transpilereket vagy k\u00e9p-optimaliz\u00e1l\u00f3kat haszn\u00e1lni. Manaps\u00e1g gyakorta haszn\u00e1lt funkci\u00f3ja a Hot Module Replacement (HMR), amely b\u00e1rmif\u00e9le \u00fajraind\u00edt\u00e1s n\u00e9lk\u00fcl, amikor a forr\u00e1sf\u00e1jlunk m\u00f3dosul, \u00e9rtes\u00edti a b\u00f6ng\u00e9sz\u0151t a v\u00e1ltoz\u00e1sr\u00f3l \u00e9s azonnal az \u00faj k\u00f3d t\u00f6lt\u0151dik be (friss\u00edteni sem sz\u00fcks\u00e9ges a b\u00f6ng\u00e9sz\u0151t). Gyakran a Webpacket valamilyen magasabb szint\u0171 keretrendszer r\u00e9szek\u00e9nt (pl. Angular) haszn\u00e1ljuk, el\u0151l\u00fcnk el van fedve, de haszn\u00e1lhatjuk k\u00e9zzel is. H\u00e1tr\u00e1nya, hogy a konfigur\u00e1ci\u00f3 gyakran nagyon bonyolult, a dokument\u00e1ci\u00f3ja pedig nem a legjobb min\u0151s\u00e9g\u0171.</p> <p>A webpack konfigur\u00e1ci\u00f3ja a <code>webpack.config.js</code> f\u00e1jlban tal\u00e1lhat\u00f3, amelyben az al\u00e1bbiak ker\u00fclnek konfigur\u00e1l\u00e1sra:</p> <ul> <li>app bel\u00e9p\u00e9si pontja: a kliens oldali k\u00f3d a ClientApp mapp\u00e1ban lesz tal\u00e1lhat\u00f3. Az alkalmaz\u00e1s bel\u00e9p\u00e9si pontja a <code>ClientApp/src/client-start.js</code> f\u00e1jl.</li> <li>babel ford\u00edt\u00f3 a js f\u00e1jlokra</li> <li><code>HtmlWebpackPlugin</code> annak \u00e9rdek\u00e9ben, hogy az index.html sablonozhat\u00f3 legyen, \u00edgy a f\u00fcgg\u0151s\u00e9gek behivatkoz\u00e1s\u00e1t nem nek\u00fcnk kell megtenni, mert ezt a webpack automatikusan injekt\u00e1lja. A ford\u00edt\u00e1s ut\u00e1n ez a guessgame.js n\u00e9vre hallgat, ez az \u00f6sszecsomagolt, kliens oldali JavaScript alkalmaz\u00e1sunk.</li> <li>jQuery plugin</li> </ul>"},{"location":"laborok/12-js-advanced/#feladat-2-modern-javascript-funkciok","title":"Feladat 2 - Modern JavaScript funkci\u00f3k","text":"<p>A megold\u00e1s sor\u00e1n haszn\u00e1ljuk az objektumorient\u00e1lt megk\u00f6zel\u00edt\u00e9st \u00e9s a modern JS funkci\u00f3kat! Igyekezz\u00fcnk komponens-orient\u00e1ltan gondolkodni: egy objektum komponens, ha megjelenik a fel\u00fcleten a reprezent\u00e1ci\u00f3ja, k\u00e9pes kommunik\u00e1lni m\u00e1s objektumokkal \u00e9s komponensekkel, ezen fel\u00fcl lehet \u00e1llapota (mez\u0151i, tulajdons\u00e1gai, amiket karbantart).</p> <p>Az alkalmaz\u00e1sunknak sz\u00fcks\u00e9ge lesz egy \"g\u00e9pre\", ami majd kigondolja a sz\u00e1mot. Az egyszer\u0171s\u00e9g kedv\u00e9\u00e9rt most ez egy 1 \u00e9s 100 k\u00f6z\u00f6tti sz\u00e1m lesz, az \u00e9rt\u00e9k nem konfigur\u00e1lhat\u00f3. Szimul\u00e1ljuk, hogy a \"sz\u00e1m\u00edt\u00e1s\" komplex, \u00fagyhogy kis k\u00e9sleltet\u00e9st visz\u00fcnk majd abba, am\u00edg a v\u00e1laszt visszakapjuk a tipp\u00fcnkre.</p> <p>Az objektumaink, melyek a fel\u00fcleten is megjelennek, rendelkezni fognak egy <code>render()</code> f\u00fcggv\u00e9nnyel, \u00e9s lesz egy (az alkalmaz\u00e1s szempontj\u00e1b\u00f3l) glob\u00e1lis <code>render()</code> f\u00fcggv\u00e9ny\u00fcnk is, ami minden komponenst kirajzol azok <code>render()</code> f\u00fcggv\u00e9ny\u00e9nek megh\u00edv\u00e1s\u00e1val.</p> <p>El\u0151sz\u00f6r k\u00e9sz\u00edts\u00fck el az id\u0151z\u00edt\u0151t! Az id\u0151z\u00edt\u0151 a j\u00e1t\u00e9k indul\u00e1sakor elkezdi sz\u00e1molni a kliensen az eltelt id\u0151t. M\u00e1s elemekr\u0151l nem tud, \u00f6n\u00e1ll\u00f3an m\u0171k\u00f6dni k\u00e9pes, elindulni \u00e9s meg\u00e1llni tud, el lehet t\u0151le k\u00e9rni form\u00e1zottan az eltelt id\u0151t, \u00e9s ki tudja rajzolni az eltelt id\u0151t a fel\u00fcletre. A komponens k\u00f3dja \u00edgy az al\u00e1bbi:</p> ClientApp\\src\\timer.js<pre><code>export class Timer {\nstart() {\nthis.started = Date.now();\nthis.interval = setInterval(() =&gt; this.render(), 150);\n}\n\nstop() {\nthis.stopped = Date.now();\nclearInterval(this.interval);\n}\n\nclear() {\nthis.started = this.stopped = undefined;\n}\n\ngetElapsedTime() {\nreturn this.started ? Math.floor(((this.stopped ? this.stopped : Date.now()) - this.started) / 1000) : \"-\";\n}\n\nrender() {\ndocument.getElementById(\"timer\").innerText = this.getElapsedTime();\n}\n}\n</code></pre> <p>Az id\u0151z\u00edt\u0151t \u00f6nmag\u00e1ban tesztelhetj\u00fck, ehhez p\u00e9ld\u00e1nyos\u00edtjuk, elind\u00edtjuk, majd le\u00e1ll\u00edtjuk:</p> ClientApp\\src\\client-start.js<pre><code>import { Timer } from './timer';\n\nwindow.addEventListener('DOMContentLoaded', () =&gt; {\nconst timer = new Timer();\ntimer.start();\nsetTimeout(() =&gt; timer.stop(), 3000);\n});\n</code></pre> <p>Az id\u0151z\u00edt\u0151 persze \u00f6nmag\u00e1ban nem egy hasznos funkci\u00f3 a j\u00e1t\u00e9kban, viszont maga a j\u00e1t\u00e9k, mint komponens egy eleme. A j\u00e1t\u00e9kos is ilyen elem, r\u00f3la csak a nev\u00e9t kell tudnunk, viszont ez id\u0151vel fog csak ismertt\u00e9 v\u00e1lni sz\u00e1munkra, teh\u00e1t egy Promise objektummal tudjuk reprezent\u00e1lni.</p> ClientApp\\src\\player.js<pre><code>export class Player {\nconstructor() {\nthis.onNameSet = new Promise((resolve, reject) =&gt; {\ndocument.getElementById('start-form').addEventListener('submit', e =&gt; {\ne.preventDefault();\nconst name = document.getElementById('name-input').value;\nif (name &amp;&amp; name.length) {\nresolve(name);\n}\n});\n});\n\nthis.onNameSet.then(name =&gt; {\nthis.name = name;\nthis.render();\n});\n}\n\nrender() {\nfor (let element of [document.getElementById('name-input'), document.getElementById('start-button')])\nelement.disabled = !!(this.name &amp;&amp; this.name.length);\n}\n}\n</code></pre> <p>A Promise beteljesedik, amikor a <code>#start-form</code> \u0171rlapot elk\u00fcldik, \u00e9s a <code>#name-input</code> \u00e9rt\u00e9ke nem \u00fcres. Erre a Promise-re a j\u00e1t\u00e9kos maga is feliratkozik, \u00e9s sikeres beteljesed\u00e9s eset\u00e9n a <code>name</code> property-t be\u00e1ll\u00edtja mag\u00e1nak. A <code>render()</code>-ben megvizsg\u00e1lja, hogy van-e n\u00e9v, \u00e9s ha van, a <code>disabled</code> attrib\u00fatumokat megfelel\u0151en be\u00e1ll\u00edtja.</p> <p>Note</p> <p>Haszn\u00e1lhatn\u00e1nk a Promise bev\u00e1r\u00e1s\u00e1ra az <code>await</code> kulcssz\u00f3t is; ez viszont konstruktorban nem haszn\u00e1lhat\u00f3.</p> <p>L\u00e1thatjuk, hogy mindenki saj\u00e1t mag\u00e1t rendereli ki, amikor \u00e1llapotv\u00e1ltoz\u00e1st \u00e9szlel.</p> <p>Az eg\u00e9sz \u00f6sszek\u00f6t\u00e9s\u00e9re hozzuk l\u00e9tre a Game-et, ami mag\u00e1t a j\u00e1t\u00e9kot reprezent\u00e1lja. A Game m\u00e1r biztonsan ismer egy id\u0151z\u00edt\u0151t \u00e9s egy j\u00e1t\u00e9kost. A j\u00e1t\u00e9kos nev\u00e9nek v\u00e1ltoz\u00e1s\u00e1ra iratkozzunk fel, ez fogja elind\u00edtani a j\u00e1t\u00e9kot mag\u00e1t. A kezdeti \u00e1llapotot is ki tudja renderelni. Egy <code>components</code> property-ben fogjuk gy\u0171jteni az egyes komponenseinket, \u00e9s azoknak meg tudjuk h\u00edvni mindnek a <code>render</code> f\u00fcggv\u00e9ny\u00e9t (amennyiben a komponensnek van <code>render</code> f\u00fcggv\u00e9nye):</p> ClientApp\\src\\game.js<pre><code>import { Player } from './player';\nimport { Timer } from './timer';\n\nexport class Game {\nconstructor() {\nthis.timer = new Timer();\nthis.player = new Player();\n\nthis.player.onNameSet.then(() =&gt; this.start());\n\nthis.components = [this.timer, this.player];\n\nthis.render();\n}\n\nrender() {\nthis.components.map(c =&gt; c &amp;&amp; typeof(c.render) === 'function' &amp;&amp; c.render());\n}\n\nstart() {\nthis.timer.start();\n}\n\nonGuessed(num, guess) {\n}\n\nonGuessing(num) {\n}\n}\n</code></pre> <p>A j\u00e1t\u00e9kot a dokumentum bet\u00f6lt\u00e9sekor p\u00e9ld\u00e1nyos\u00edtjuk. Az onGuessed f\u00fcggv\u00e9nyt k\u00edv\u00fclr\u0151l tudj\u00e1k majd megh\u00edvni, jelezv\u00e9n, hogy egy tipp kisebb vagy nagyobb volt a \"gondolt\" sz\u00e1mn\u00e1l, esetleg tal\u00e1lt. Az onGuessing f\u00fcggv\u00e9nnyel egy tippet tudnak majd a j\u00e1t\u00e9knak k\u00fcldeni. A <code>client-start.js</code> tartalm\u00e1t cser\u00e9lj\u00fck le az al\u00e1bbira:</p> ClientApp\\src\\client-start.js<pre><code>import { Game } from './game';\n\nwindow.addEventListener('DOMContentLoaded', () =&gt; {\nconst game = new Game();\n});\n</code></pre> <p>BEADAND\u00d3 (1 pont)</p> <p>M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet, ahol megadja a nev\u00e9t, \u00e9s ennek hat\u00e1s\u00e1ra az id\u0151z\u00edt\u0151 elindult, a n\u00e9v bek\u00e9r\u00e9s\u00e9re szolg\u00e1l\u00f3 input, valamint az ind\u00edt\u00e1sra szolg\u00e1l\u00f3 gomb pedig le vannak tiltva. (<code>f2.png</code>)</p>"},{"location":"laborok/12-js-advanced/#feladat-3-jateklogika","title":"Feladat 3 - J\u00e1t\u00e9klogika","text":"<p>A j\u00e1t\u00e9klogik\u00e1t egy random gener\u00e1tor \u00e1ltal adott 1 \u00e9s 100 k\u00f6z\u00f6tti eg\u00e9sz sz\u00e1m, \u00e9s a tippel\u00e9sre adott kisebb/nagyobb v\u00e1lasz interf\u00e9sze adja. \u00cdrjuk meg a j\u00e1t\u00e9klogik\u00e1t a kliens oldalon!</p> ClientApp\\src\\logic.js<pre><code>export class Logic {\nconstructor(game) { this.game = game; }\n\nstartGame() {\nconst secretNumber = Math.floor(((Math.random() * 100) + 1));\nthis.secretGuess = (num) =&gt; secretNumber &lt; num ? 'less' : secretNumber &gt; num ? 'greater' : 'correct';\n}\n\nguess(num) {\nif (this.secretGuess &amp;&amp; typeof (this.secretGuess) === 'function') {\nsetTimeout(() =&gt; this.game.onGuessed(num, this.secretGuess(num)), 400);\n}\n}\n}\n</code></pre> <p>A titkos sz\u00e1mot a lok\u00e1lisan, a <code>startGame</code> f\u00fcggv\u00e9nyben t\u00e1rolt <code>secretNumber</code> v\u00e1ltoz\u00f3ban t\u00e1roljuk. Ez a v\u00e1ltoz\u00f3 k\u00edv\u00fclr\u0151l nem l\u00e1that\u00f3, az egyetlen f\u00fcggv\u00e9ny, aki ismeri ezt az \u00e9rt\u00e9ket, a <code>secretGuess</code>. A <code>guess</code> \"publikus\" f\u00fcggv\u00e9nyt megh\u00edvva a logika \u00e9rtes\u00edti a j\u00e1t\u00e9kot a tipp helyess\u00e9g\u00e9r\u0151l az <code>onGuessed</code> f\u00fcggv\u00e9nyen kereszt\u00fcl. A v\u00e1lasz k\u00e9sleltetve \u00e9rkezik, a k\u00e9sleltet\u00e9s 400ms.</p> <p>A j\u00e1t\u00e9knak sz\u00fcks\u00e9ge lesz valamilyen mechanizmusra, hogy meg tudja jelen\u00edteni a helyes/helytelen tippeket. Ezt egy Guesses oszt\u00e1ly p\u00e9ld\u00e1ny\u00e1ban fogjuk t\u00e1rolni, ami a fel\u00fcleten megjelen\u0151, tippeket tartalmaz\u00f3 t\u00e1bl\u00e1zatot fogja friss\u00edteni sz\u00fcks\u00e9g eset\u00e9n.</p> ClientApp\\src\\guesses.js<pre><code>export class Guesses {\nconstructor() {\nthis.clear();\n}\n\naddGuess(num, value) {\nif (num &amp;&amp; value) {\nthis.guesses.push({ num, value });\nthis.render();\n}\n}\n\nclear() {\nthis.guesses = [];\nthis.render();\n}\n\nrender() {\nfor (let tr of Array.from(document.querySelectorAll('#guesses tbody tr')))\ntr.remove();\n\nfor (let tr of (this.guesses.map((g, i) =&gt; `&lt;tr&gt;\n                    &lt;td&gt;${i + 1}&lt;/td&gt;\n                    &lt;td class='text-right'&gt;${g.num}&lt;/td&gt;\n                    &lt;td class='bg-${g.value === 'correct' ? 'success' : 'danger'}'&gt;${g.value === 'correct' ? '!!!' : g.value === 'less' ? '&amp;gt;' : '&amp;lt;'}&lt;/td&gt;\n                &lt;/tr&gt;`).reverse()))\ndocument.querySelector('#guesses tbody').innerHTML += tr;\n}\n}\n</code></pre> <p>M\u00e1r csak a fel\u00fcletr\u0151l \u00e9rkez\u0151 tippet kell kezeln\u00fcnk, ehhez egy Guess oszt\u00e1lyt hozunk l\u00e9tre:</p> ClientApp\\src\\guess.js<pre><code>export class Guess {\nconstructor(game) {\ndocument.getElementById('guess-form').addEventListener('submit', e =&gt; {\ne.preventDefault();\nconst value = parseInt(document.getElementById('guess-input').value);\nif (!isNaN(value) &amp;&amp; value &gt; 0 &amp;&amp; value &lt;= 100)\ngame.onGuessing(value);\ndocument.getElementById('guess-form').reset();\n});\ndocument.getElementById('guess-form').reset();\nthis.setEnabled(false);\n}\n\nsetEnabled(value) {\nthis.enabled = !!value;\nthis.render();\n}\n\nrender() {\nfor (let element of [document.getElementById('guess-input'), document.getElementById('guess-button')]) {\nelement.disabled = !this.enabled;\n}\n\nif (this.enabled) {\ndocument.getElementById('guess-input').focus();\n}\n}\n}\n</code></pre> <p>\u00d6ssze kell k\u00f6tn\u00fcnk a j\u00e1t\u00e9kot a logik\u00e1val, ill. a kor\u00e1bbi tippek t\u00e1rol\u00e1s\u00e1\u00e9rt felel\u0151s objektummal, valamint kezeln\u00fcnk kell a fel\u00fcletr\u0151l, a felhaszn\u00e1l\u00f3 r\u00e9sz\u00e9r\u0151l \u00e9rkez\u0151 tippet. Friss\u00edts\u00fck a <code>game.js</code> tartalm\u00e1t az al\u00e1bbira:</p> ClientApp\\src\\game.js<pre><code>import { Player } from './player';\nimport { Timer } from './timer';\nimport { Logic } from './logic';\nimport { Guesses } from './guesses';\nimport { Guess } from './guess';\n\nexport class Game {\nconstructor() {\nthis.timer = new Timer();\nthis.player = new Player();\nthis.logic = new Logic(this);\nthis.guesses = new Guesses();\nthis.guess = new Guess(this);\n\nthis.player.onNameSet.then(() =&gt; this.start());\n\nthis.components = [this.timer, this.player, this.logic, this.guesses, this.guess];\n\nthis.render();\n}\n\nrender() {\nthis.components.map(c =&gt; c &amp;&amp; typeof (c.render) === 'function' &amp;&amp; c.render());\n}\n\nstart() {\nthis.timer.start();\nthis.guess.setEnabled(true);\nthis.logic.startGame();\n}\n\nonGuessed(num, guess) {\nthis.guesses.addGuess(num, guess);\nif (guess === 'correct') {\nthis.guess.setEnabled(false);\nthis.timer.stop();\n}\n}\n\nonGuessing(num) {\nthis.logic.guess(num);\n}\n}\n</code></pre> <p>BEADAND\u00d3 (1 pont)</p> <p>M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet egy j\u00e1t\u00e9k v\u00e9geredm\u00e9ny\u00e9r\u0151l, ahol l\u00e1that\u00f3k a leadott tippek \u00e9s az eltelt id\u0151! (<code>f3.png</code>)</p>"},{"location":"laborok/12-js-advanced/#feladat-4-onallo-toplista","title":"Feladat 4 (\u00d6n\u00e1ll\u00f3) - Toplista","text":"<p>A toplist\u00e1n kiz\u00e1r\u00f3lag a legjobb 10 eredm\u00e9nnyel rendelkez\u0151 egy\u00e9n jelenik meg. A toplista el\u0151sz\u00f6r a tippek sz\u00e1ma, majd a megtett id\u0151 alapj\u00e1n cs\u00f6kken\u0151 sorrend szerint rendezett.</p> Megold\u00e1s <p>A toplista perzisztens, teh\u00e1t a j\u00e1t\u00e9k indul\u00e1sakor a toplista <code>localStorage</code>-b\u0151l bet\u00f6lt\u0151dik, az \u00faj bejegyz\u00e9sek pedig ide perziszt\u00e1l\u00f3dnak. Ehhez a <code>localStorage</code> glob\u00e1lis objektum <code>getItem(key)</code> \u00e9s <code>setItem(key, value)</code> met\u00f3dusai haszn\u00e1lhat\u00f3k, a rendez\u00e9shez a t\u00f6mb <code>sort(callback)</code> f\u00fcggv\u00e9nye haszn\u00e1lhat\u00f3, a callback k\u00e9t elemet kap, amelyekhez egy \u00f6sszehasonl\u00edt\u00e1st kell megadnunk, ami egy sz\u00e1m\u00e9rt\u00e9kkel t\u00e9r vissza (a kisebb sz\u00e1m\u00e9rt\u00e9k\u0171 elem el\u0151r\u00e9bb lesz a list\u00e1ban).</p> ClientApp\\src\\toplist.js<pre><code>export class Toplist {\nconstructor() {\nthis.items = JSON.parse(localStorage.getItem('toplist') || '[]');\nthis.render();\n}\n\nsetItem(name, guesses, time) {\nthis.items.push({ name, guesses, time });\nthis.items = this.items.sort((a, b) =&gt; a.guesses + a.time / 1000 - (b.guesses + b.time / 1000)).slice(0, 9);\nlocalStorage.setItem('toplist', JSON.stringify(this.items));\nthis.render();\n}\n\nrender() {\ndocument.querySelector('#toplist tbody').innerHTML = this.items.map((e, i) =&gt; (\n`&lt;tr&gt;\n                &lt;th&gt;${i + 1}&lt;/th&gt;\n                &lt;td&gt;${e.name}&lt;/td&gt;\n                &lt;td&gt;${e.guesses}&lt;/td&gt;\n                &lt;td&gt;${e.time}&lt;/td&gt;\n            &lt;/tr&gt;`\n)).join('');\n}\n}\n</code></pre> <p>A toplist\u00e1t a j\u00e1t\u00e9khoz kell k\u00f6tn\u00fcnk, \u00e9s a <code>setItem</code> met\u00f3dust megh\u00edvni, amikor a j\u00e1t\u00e9knak v\u00e9ge.</p> ClientApp\\src\\game.js<pre><code>/* ... */\nimport { Toplist } from './toplist';\n\nexport class Game {\nconstructor() {\n/* ... */\nthis.toplist = new Toplist();\n/* ... */\nthis.components = [this.timer, this.player, this.logic, this.guesses, this.guess, this.toplist];\n/* ... */\n}\n\n/* ... */\n\nonGuessed(num, guess) {\n/* ... */\nif (guess === 'correct') {\n/* ... */\nthis.toplist.setItem(this.player.name, this.guesses.guesses.length, this.timer.getElapsedTime());\n}\n}\n\n/* ... */\n}\n</code></pre> <p>BEADAND\u00d3 (1 pont)</p> <p>M\u00e1soljon be egy k\u00e9perny\u0151k\u00e9pet, amelyen legal\u00e1bb 3 k\u00fcl\u00f6nb\u00f6z\u0151 eredm\u00e9ny l\u00e1that\u00f3! (<code>f4.png</code>)</p>"},{"location":"laborok/12-js-advanced/#feladat-5-onallo-ujrakezdes","title":"Feladat 5 (\u00d6n\u00e1ll\u00f3) - \u00dajrakezd\u00e9s","text":"<p>A fenti gondolatmenetekhez hasonl\u00f3an k\u00e9sz\u00edtse el a j\u00e1t\u00e9k \u00fajrakezd\u00e9s\u00e9t implement\u00e1l\u00f3 logik\u00e1t! Az \u00fajrakezd\u00e9s az al\u00e1bbiakat jelenti:</p> <ul> <li>a j\u00e1t\u00e9k befejez\u00e9s\u00e9t k\u00f6vet\u0151en megjelenik a fel\u00fcleten egy Restart c\u00edmk\u00e9j\u0171 gomb, melyet megnyomva \u00faj j\u00e1t\u00e9k indul (ezt k\u00f6vet\u0151en ism\u00e9t elt\u0171nik),</li> <li>a felhaszn\u00e1l\u00f3 nev\u00e9t bek\u00e9r\u0151 \u0171rlap \u00fajb\u00f3l enged\u00e9lyezve lesz, a f\u00f3kusz ide helyez\u0151dik, a felhaszn\u00e1l\u00f3nak lehet\u0151s\u00e9ge van \u00e1t\u00edrni a nev\u00e9t \u00e9s \u00faj j\u00e1t\u00e9kot ind\u00edtani,</li> <li>a bal oldali t\u00e1bl\u00e1zatban l\u00e1that\u00f3 kor\u00e1bbi tippek \u00fcr\u00fclnek.</li> <li>a timer \u00e1ltal jelzett \u00e9rt\u00e9k elt\u0171nik.</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>Illesszen be k\u00e9perny\u0151k\u00e9pet a fel\u00fcleten dinamikusan elhelyezett gombr\u00f3l! (<code>f5.png</code>)</p>"},{"location":"laborok/12-js-advanced/#feladat-6-imsc-szerver-oldali-logika-2-imsc-pont","title":"Feladat 6 iMSc - Szerver oldali logika (2 iMSc pont)","text":"<p>A kliens oldalon t\u00e1rolt logik\u00e1t helyezze \u00e1t a szerver oldalra a <code>Backend</code> mapp\u00e1ban l\u00e9v\u0151 <code>GuessWS.sln</code> ASP.NET Core 6-os projektbe!</p> <p>Projekt ind\u00edt\u00e1sa</p> <p>Az iMSc feladathoz telep\u00edtve kell lennie a .NET SDK legal\u00e1bb 6.0-s (de m\u00e9g nem 7-es) verzi\u00f3j\u00e1nak is a g\u00e9pre (ez Visual Studio 2022-vel is telep\u00fcl).</p> <p>A projekt elind\u00edt\u00e1s\u00e1hoz elegend\u0151 a megszokott Visual Studio-s Debug vagy Start without debugging funkci\u00f3t v\u00e1lasztani. Ilyenkor a backend alkalmaz\u00e1sunk elindul viszont sz\u00fcks\u00e9ge lenne a kliens r\u00e9szekre is. Ezt \u00fagy oldjuk meg jelenleg, hogy a kliens alkalmaz\u00e1s futtat\u00e1s\u00e1ra tov\u00e1bbra is sz\u00fcks\u00e9g\u00fcnk lesz (pl VS Code-ban <code>npm start</code>), \u00e9s a backend a statikus f\u00e1jlok (html, js, css) kiszolg\u00e1l\u00e1s\u00e1ra \u00e1tproxyza a k\u00e9r\u00e9seket a webpack szerver fel\u00e9. Ez a <code>Program</code> oszt\u00e1lyban ker\u00fclt defini\u00e1l\u00e1sra:</p> <pre><code>app.UseSpa(spa =&gt;\n{\nspa.UseProxyToSpaDevelopmentServer(\"http://localhost:4200\");\n});\n</code></pre> <p>Teh\u00e1t ha backenddel teszteln\u00e9nk az alkalmaz\u00e1st az al\u00e1bbi m\u00f3don kell elj\u00e1rjunk:</p> <ol> <li>ind\u00edtsuk el a frontendet az el\u0151z\u0151 feladatok mint\u00e1j\u00e1ra</li> <li>ind\u00edtsuk el a backendet</li> <li>tesztelj\u00fck az alkalmaz\u00e1st a backend portj\u00e1n</li> </ol> <p>A szerveren fut egy WebSocket kiszolg\u00e1l\u00f3, mely b\u00e1rmilyen <code>wss://localhost:port</code>-on fut\u00f3 k\u00e9r\u00e9sre v\u00e1laszol (HTTP eset\u00e9n (<code>ws://localhost:port</code>)).</p> <p>A szerverkapcsolatot az al\u00e1bbi oszt\u00e1ly reprezent\u00e1lja (a portsz\u00e1mot sz\u00fcks\u00e9ges lehet \u00e1t\u00edrnia a saj\u00e1t szerver portsz\u00e1m\u00e1ra):</p> ClientApp\\src\\socketserver.js<pre><code>export class SocketServer {\nconstructor() {\nthis.socket = new WebSocket('wss://localhost:7579/ws');\nthis.open = false;\nthis.socket.onopen = () =&gt; {\nthis.open = true;\nthis.socket.onmessage = e =&gt; {\nthis.onRecieve(JSON.parse(e.data));\n}\n};\n}\n\nsend(action, name, guess) {\nif (this.open) {\nconst json = JSON.stringify({ action, name, guess });\nconsole.log(`Sending message: ${json}`)\nthis.socket.send(json);\n}\n}\n\nonRecieve(data) {\nconsole.log(data);\n}\n}\n</code></pre> <p>Warning</p> <p>A socket szerver URL-t sz\u00fcks\u00e9ges lehet \u00e1t\u00edrni: a portsz\u00e1mnak a szerver portsz\u00e1m\u00e1nak kell lennie (az elind\u00edtott backend konzolja ki\u00edrja, hol indul a szerver), \u00e9s <code>http</code> eset\u00e9n <code>ws</code>, <code>https</code> eset\u00e9n pedig <code>wss</code> protokollt kell (/\u00e9rdemes) haszn\u00e1lni.</p> <p>A szervert az al\u00e1bbi k\u00f3d mint\u00e1j\u00e1ra tudja haszn\u00e1lni:</p> <pre><code>const server = new SocketServer();\n\nsetTimeout(() =&gt; {\nserver.send(\"setName\", \"John Doe\");\n\nserver.send(\"startGame\");\n\nlet guess = 0;\n\nsetInterval(() =&gt; server.send(\"guess\", undefined, ++guess), 500);\n}, 2000);\n</code></pre> <p>A szerver az al\u00e1bbi k\u00e9r\u00e9sekre figyel:</p> <ul> <li><code>startGame</code>: j\u00e1t\u00e9k ind\u00edt\u00e1sa.</li> <li><code>setName</code>: n\u00e9v be\u00e1ll\u00edt\u00e1sa az aktu\u00e1lis j\u00e1t\u00e9koshoz. Sz\u00fcks\u00e9ges a \"name\" param\u00e9ter megad\u00e1sa is.</li> <li><code>guess</code>: tipp k\u00fcld\u00e9se. Sz\u00fcks\u00e9ges a guess param\u00e9ter megad\u00e1sa is.</li> <li><code>toplist</code>: toplista lek\u00e9r\u00e9se.</li> </ul> <p>A szerver az al\u00e1bbiakat k\u00fcldi:</p> <ul> <li>a toplist\u00e1t az al\u00e1bbi JSON-form\u00e1tumban k\u00fcldi a szerver: <code>[{ name, guesses, timeInSeconds }, ...]</code>,</li> <li>egy tippre a szerver az \u00f6sszes klienst \u00e9rtes\u00edti, az al\u00e1bbi objektumot k\u00fcldve: <code>{ name, guess, value, timeInSeconds }</code>.</li> </ul> <p>Val\u00f3s\u00edtsa meg az al\u00e1bbiakat:</p> <ul> <li>a szerver t\u00e1rolja a j\u00e1t\u00e9k \u00e1llapotot, nem a kliens,</li> <li>a szerver \u00e9rtes\u00fcl\u00e9s\u00e9re a kliensek fel vannak iratkozva, \u00e9s megosztj\u00e1k az \u00e1llapotot (t\u00f6bb b\u00f6ng\u00e9sz\u0151 ablakkal tudja demonstr\u00e1lni),</li> <li>a szerver t\u00e1rolja a toplist\u00e1t,</li> <li>a szerver k\u00fcld v\u00e1laszesem\u00e9nyeket a tippel\u00e9sre, minden feliratkoz\u00f3t \u00e9rtes\u00edt.</li> </ul> <p>BEADAND\u00d3 (2 iMSc pont)</p> <p>K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a m\u0171k\u00f6d\u0151 funkci\u00f3r\u00f3l, ahol l\u00e1tszik a fejleszt\u0151i eszk\u00f6zt\u00e1r Network f\u00fcle is egy relev\u00e1ns websocket kommunik\u00e1ci\u00f3val! (<code>f6.imsc.png</code>)</p>"},{"location":"laborok/13-jquery/","title":"Labor 13 - jQuery","text":""},{"location":"laborok/13-jquery/#bevezetes","title":"Bevezet\u00e9s","text":"<p>A laborok sor\u00e1n a hallgat\u00f3k laborvezet\u0151i seg\u00edts\u00e9ggel, majd \u00f6n\u00e1ll\u00f3an v\u00e9geznek feladatokat a webes technol\u00f3gi\u00e1k gyakorlati megismer\u00e9se \u00e9rdek\u00e9ben.</p> Eml\u00e9keztet\u0151k\u00e9nt n\u00e9h\u00e1ny gondolat a jQuery-r\u0151l"},{"location":"laborok/13-jquery/#a-jquery","title":"A jQuery","text":"<p>A jQuery egy \"sv\u00e1jcibicska-szer\u0171\" JavaScript library. Jelent\u0151s\u00e9ge napjainkban az alkalmaz\u00e1sfejleszt\u0151 keretrendszerek jav\u00e1ra egyre cs\u00f6kken, viszont az alapkoncepci\u00f3k meg\u00e9rt\u00e9s\u00e9re tov\u00e1bbra is hasznos eszk\u00f6z. Els\u0151sorban kieg\u00e9sz\u00edt\u00e9sk\u00e9ppen haszn\u00e1lj\u00e1k k\u00fcl\u00f6nf\u00e9le dinamikusan gener\u00e1lt HTML tartalmakhoz t\u00f6rt\u00e9n\u0151 dinamizmus hozz\u00e1rendel\u00e9s\u00e9vel, nem pedig teljes, \u00f6n\u00e1ll\u00f3, kliensoldali alkalmaz\u00e1s fejleszt\u00e9s\u00e9re (de ut\u00f3bbira is haszn\u00e1lhat\u00f3).</p> <p>A jQuery API a <code>$</code> (\u00e9s ritk\u00e1bban a <code>jQuery</code>) glob\u00e1lis v\u00e1ltoz\u00f3n kereszt\u00fcl \u00e9rhet\u0151 el, alapvet\u0151en az al\u00e1bbi m\u00f3dokon:</p> <ul> <li><code>const elements = $('ul li.active')</code>: a megadott CSS selectornak megfelel\u0151 DOM elemeket v\u00e1lasztja ki, \u00e9s visszaadja egy jQuery objektumban. A b\u00e1rmilyen m\u00f3don szerzett jQuery objektum hivatkoz\u00e1sokon az al\u00e1bbihoz hasonl\u00f3 lehet\u0151s\u00e9geink vannak:</li> <li>A jQuery objektum p\u00e9ld\u00e1nyai egyben t\u00f6mb\u00f6k, amik tartalmazz\u00e1k a megtal\u00e1lt nat\u00edv DOM elemeket (teh\u00e1t iter\u00e1lhatunk rajta), ill. a jQuery p\u00e9ld\u00e1nyf\u00fcggv\u00e9nyeit tartalmazz\u00e1k, amelyek el\u00e9rik az illesztett DOM elemeket.</li> <li><code>.show()</code>, <code>.hide()</code>, <code>.toggle()</code>: az illesztett elemeket megjelen\u00edti vagy elrejti az\u00e1ltal, hogy az elemre inline <code>display: none</code> st\u00edlust helyezi,</li> <li><code>.append(e)</code>, <code>.appendTo(e)</code>, <code>.before(e)</code>, <code>.after(e)</code>, az elemhez/el\u00e9/ut\u00e1n sz\u00far be \u00fajabb elemeket (jQuery szelektorral el\u00e9rt elemeket, DOM elemeket vagy HTML tartalmat),</li> <li><code>.attr()</code>: gyakori, hogy egy f\u00fcggv\u00e9ny getter-setterk\u00e9nt m\u0171k\u00f6dik, ilyen az attr is. Ha egy param\u00e9tert adunk \u00e1t, az adott attrib\u00fatum \u00e9rt\u00e9k\u00e9t kapjuk vissza, ha kett\u0151t, a m\u00e1sodik param\u00e9ter az els\u0151 n\u00e9ven adott attrib\u00fatum \u00e9rt\u00e9ke lesz (minden illesztett elemre).</li> <li><code>.on()</code>: esem\u00e9nykezel\u0151 feliratkoztat\u00e1sa az adott n\u00e9vvel. K\u00e9t param\u00e9ter eset\u00e9n ha a m\u00e1sodik param\u00e9ter a callback, \u00fagy az h\u00edv\u00f3dik meg az adott elemen; ha a callback el\u0151tt egy szelektort is megadunk, az \"\u00e9l\u0151\" feliratkoz\u00e1s lesz az illesztett elemen bel\u00fcli lesz\u00e1rmazott gyerekekre. P\u00e1rja az <code>.off()</code>, amellyel esem\u00e9nykezel\u0151t iratkoztathatunk le, ez\u00e1ltal elker\u00fclve az esetleges mem\u00f3riasziv\u00e1rg\u00e1st.</li> <li><code>.click()</code>, <code>.submit()</code> stb.: az adott JavaScript esem\u00e9nyek els\u00fct\u00e9se (param\u00e9ter n\u00e9lk\u00fcl) vagy feliratkoz\u00e1s az esem\u00e9nyre (callback megad\u00e1s\u00e1val) az illesztett elemeken. Elavult, ehelyett a fentebb le\u00edrt <code>.on()</code>-t haszn\u00e1ljuk feliratkoz\u00e1sra, a <code>.trigger()</code>-t pedig els\u00fct\u00e9sre.</li> <li><code>.data(name)</code>: a DOM elem data-{name} attrib\u00fatum\u00e1ban szerepl\u0151 \u00e9rt\u00e9k be\u00e1ll\u00edt\u00e1s\u00e1ra \u00e9s lek\u00e9rdez\u00e9s\u00e9re haszn\u00e1lhatjuk. A lek\u00e9rdez\u00e9s gyakorlatilag ekvivalens azzal, mintha az al\u00e1bbit haszn\u00e1ln\u00e1nk: <code>.attr(\"data-name\").val()</code>. Eml\u00e9keztet\u0151k\u00e9nt, a CSS-ben attrib\u00fatum alapj\u00e1n lek\u00e9rdezni elemet az al\u00e1bbi m\u00f3don tudunk: <code>$(\"elem[data-my-value='value']\")</code>. A <code>data-</code> attrib\u00fatumok tetsz\u0151leges kulcs-\u00e9rt\u00e9k p\u00e1rok t\u00e1rol\u00e1s\u00e1ra szolg\u00e1lnak a DOM-ban.</li> <li>Nagyon gyakori, hogy az egyes elemeken v\u00e9gzett m\u0171veleteket l\u00e1ncoljuk az al\u00e1bbihoz hasonl\u00f3 m\u00f3don: <code>$(\".button\").before(spinner).attr(\"disabled\", true)</code>.</li> <li><code>$(function () { /*...*/ })</code>: az \u00edgy megadott f\u00fcggv\u00e9ny a dokumentum bet\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en fut le. Ekvivalens a <code>$(document).ready(function () { /*...*/} )</code> h\u00edv\u00e1ssal.</li> <li><code>$.ajax()</code>, <code>$.get()</code>, <code>$.post()</code> stb.: a glob\u00e1lis jQuery objektumon el\u00e9rhet\u0151 statikus f\u00fcggv\u00e9nyek f\u00fcggetlenek az egyes DOM elemekt\u0151l, ezek pl. aszinkron AJAX k\u00e9r\u00e9sek v\u00e9grehajt\u00e1s\u00e1ra haszn\u00e1lhat\u00f3k.</li> </ul>"},{"location":"laborok/13-jquery/#jquery-pluginek","title":"jQuery pluginek","text":"<p>A jQuery kieg\u00e9sz\u00edt\u00e9sek\u00e9ppen egyszer\u0171bb \u00e9s bonyolultabb plugineket haszn\u00e1lhatunk. Ezek a pluginek jellemz\u0151en a jQuery objektumra \u00fajabb f\u00fcggv\u00e9nyeket helyeznek el, amelyek seg\u00edts\u00e9g\u00e9vel a kieg\u00e9sz\u00edt\u0151 funkcionalit\u00e1s el\u00e9rhet\u0151. A Boostrap k\u00e9tf\u00e9le m\u00f3don teszi el\u00e9rhet\u0151v\u00e9 a plugineket: data-attib\u00fatumok form\u00e1j\u00e1ban \u00e9s a jQuery API-n kereszt\u00fcl. A fontosabbak pl.: <code>.modal()</code> <code>.dropdown()</code>, <code>.tooltip()</code>, <code>.alert()</code>, <code>.collapse()</code>. B\u0151vebben a Bootstrap jQuery pluginekr\u0151l itt olvashat.</p> <p>Gyakran haszn\u00e1lt pluginokat ad m\u00e9g pl. a jQuery UI, amiben d\u00e1tum- \u00e9s id\u0151v\u00e1laszt\u00f3, dial\u00f3gusablak, progressbar stb. \"widgetek\" tal\u00e1lhat\u00f3k.</p>"},{"location":"laborok/13-jquery/#git-repository-letrehozasa-es-letoltese","title":"Git repository l\u00e9trehoz\u00e1sa \u00e9s let\u00f6lt\u00e9se","text":"<p>A feladatok megold\u00e1sa sor\u00e1n ne felejtsd el k\u00f6vetni a feladat bead\u00e1s folyamat\u00e1t Github.</p> <ol> <li>Moodle-ben keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-j\u00e9t \u00e9s annak seg\u00edts\u00e9g\u00e9vel hozd l\u00e9tre a saj\u00e1t repository-dat.</li> <li>V\u00e1rd meg, m\u00edg elk\u00e9sz\u00fcl a repository, majd checkout-old ki.<ul> <li>Egyetemi laborokban, ha a checkout sor\u00e1n nem k\u00e9r a rendszer felhaszn\u00e1l\u00f3nevet \u00e9s jelsz\u00f3t, \u00e9s nem siker\u00fcl a checkout, akkor val\u00f3sz\u00edn\u0171leg a g\u00e9pen kor\u00e1bban megjegyzett felhaszn\u00e1l\u00f3n\u00e9vvel pr\u00f3b\u00e1lkozott a rendszer. El\u0151sz\u00f6r t\u00f6r\u00f6ld ki a mentett bel\u00e9p\u00e9si adatokat (l\u00e1sd itt), \u00e9s pr\u00f3b\u00e1ld \u00fajra.</li> </ul> </li> <li>Hozz l\u00e9tre egy \u00faj \u00e1gat <code>megoldas</code> n\u00e9ven, \u00e9s ezen az \u00e1gon dolgozz.</li> <li>A neptun.txt f\u00e1jlba \u00edrd bele a Neptun k\u00f3dodat. A f\u00e1jlban semmi m\u00e1s ne szerepeljen, csak egyetlen sorban a Neptun k\u00f3d 6 karaktere.</li> <li>Nyissuk meg a Visual Studio Code-dal lekl\u00f3nozott repository <code>feladat</code> mapp\u00e1j\u00e1t (File -&gt; Open Folder)!</li> <li>Az alkalmaz\u00e1s futtat\u00e1s\u00e1hoz adjuk ki a Terminalban (Ctrl+\u00f6) az al\u00e1bbi parancsot: <code>http-server</code> (\u00fcgyelj\u00fcnk arra, hogy a helyes \u00fatvonalon adjuk ki a parancsot), vagy haszn\u00e1ljuk a VS Code Live Servert a megszokott m\u00f3don (Go Live lehet\u0151s\u00e9g a jobb als\u00f3 sarokban az <code>index.html</code> megnyit\u00e1sa ut\u00e1n, vagy F1 &gt; \"Live Server: Open with Live Server\")!</li> <li>Ellen\u0151rizz\u00fck, hogy megfelel\u0151en bet\u00f6lt\u0151dik-e az alkalmaz\u00e1s!</li> </ol>"},{"location":"laborok/13-jquery/#kiindulo-attekintese","title":"Kiindul\u00f3 \u00e1ttekint\u00e9se","text":"<p>A laboron k\u00e9sz\u00fcl\u0151 alkalmaz\u00e1s egy egyszer\u0171 kv\u00edzj\u00e1t\u00e9k, amely az Open Trivia Database publikus, ingyenesen el\u00e9rhet\u0151 API-j\u00e1t haszn\u00e1lja. A j\u00e1t\u00e9k menete az al\u00e1bbi lesz:</p> <ul> <li>A j\u00e1t\u00e9k opci\u00f3inak megad\u00e1sa a Let's play! gombra kattintva lehets\u00e9ges.</li> <li>Az opci\u00f3kn\u00e1l megadhat\u00f3 a k\u00e9rd\u00e9sek sz\u00e1ma (1 \u00e9s 50 k\u00f6z\u00f6tt), a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1ja \u00e9s neh\u00e9zs\u00e9ge. Ezt k\u00f6vet\u0151en a j\u00e1t\u00e9k a Go! felirat\u00fa gombra kattintva ind\u00edthat\u00f3.</li> <li>A j\u00e1t\u00e9k sor\u00e1n a t\u00e1voli API-t\u00f3l lek\u00e9rdezett k\u00e9rd\u00e9sek fognak k\u00f6vetkezni.</li> <li>Az aktu\u00e1lis k\u00e9rd\u00e9s sorsz\u00e1ma \u00e9s az \u00f6sszes k\u00e9rd\u00e9s sz\u00e1ma l\u00e1that\u00f3 a k\u00e9rd\u00e9s oldal\u00e1n, a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1ja, a k\u00e9rd\u00e9s sz\u00f6vege, valamint a 4 v\u00e1laszlehet\u0151s\u00e9g, amelyek k\u00f6z\u00fcl mindig pontosan egy lesz helyes.</li> <li>A 4 v\u00e1laszlehet\u0151s\u00e9g egyik\u00e9re kattintva visszajelz\u00e9s \u00e9rkezik a v\u00e1lasz helyess\u00e9g\u00e9r\u0151l. Ha a v\u00e1lasz helytelen volt, a helyes v\u00e1laszt is jelzi az alkalmaz\u00e1s.</li> <li>A k\u00e9rd\u00e9sek v\u00e9g\u00e9re \u00e9rve az alkalmaz\u00e1s jelzi, h\u00e1ny pontot \u00e9rt\u00fcnk el a maximumb\u00f3l, majd \u00faj j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1ra van lehet\u0151s\u00e9g.</li> </ul> <p>Eml\u00edt\u00e9sre m\u00e9lt\u00f3 m\u00e9g, hogy TypeScript t\u00e1mogat\u00e1ssal a JavaScript k\u00f3dunkban IntelliSense-t fogunk kapni (Visual Studio Code vagy Visual Studio haszn\u00e1lat\u00e1val) a jQuery k\u00f6nyvt\u00e1rhoz is!</p> <p>Az alkalmaz\u00e1s kiindul\u00f3 k\u00f3dj\u00e1t megvizsg\u00e1lva az al\u00e1bbi f\u00e1jlokat tal\u00e1ljuk:</p> <ul> <li>index.html: a kiindul\u00f3 HTML. A f\u00e1jlt a feladatok megold\u00e1s\u00e1hoz nem sz\u00fcks\u00e9ges m\u00f3dos\u00edtani. Ha a f\u00e1jlban m\u00f3dos\u00edt, dokument\u00e1lja a m\u00f3dos\u00edt\u00e1s\u00e1t!</li> <li>node_modules mappa: az npm csomagkezel\u0151vel let\u00f6lt\u00f6tt jQuery t\u00edpusdefin\u00edci\u00f3s f\u00e1jlok JavaScript (TypeScript) IntelliSense t\u00e1mogat\u00e1shoz tal\u00e1lhat\u00f3k itt.</li> <li>triviaut.js: egy \u00fcres JavaScript f\u00e1jl, amely az index.html <code>&lt;head&gt;</code> r\u00e9sz\u00e9ben ker\u00fclt hivatkoz\u00e1sra. Az alkalmaz\u00e1s forr\u00e1sk\u00f3dj\u00e1t ebbe a f\u00e1jlba sz\u00fcks\u00e9ges helyezni.</li> <li>start-game-form-contents.html: egy r\u00e9szleges HTML f\u00e1jl, amelyben a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1hoz sz\u00fcks\u00e9ges opci\u00f3k le\u00edr\u00e1sa tal\u00e1lhat\u00f3.</li> <li>opentriviadb-logo.png: \u00e9rtelemszer\u0171en a fentebb hivatkozott API log\u00f3ja.</li> </ul> <p>node_modules</p> <p>A <code>node_modules</code> mapp\u00e1t nem szok\u00e1s felcommitolni a repositoryba mert tipikusan nagyon nagyra n\u0151het. Most csak az\u00e9rt ker\u00fclt bele a kiindul\u00f3 projektbe, hogy ne az \u00f3r\u00e1n kelljen az <code>npm install</code> parancsot kiadni.</p> <p>Vizsg\u00e1ljuk meg az <code>index.html</code> tartalm\u00e1t!</p> <p>A f\u00e1jlban l\u00e1that\u00f3, hogy be vannak hivatkozva az al\u00e1bbiak:</p> <ul> <li>a saj\u00e1t JavaScript f\u00e1jlunk, a <code>triviaut.js</code>,</li> <li>a Bootstrap CSS \u00e9s JavaScript f\u00e1jljai,</li> <li>a FontAwesome ikonk\u00e9szlet CSS f\u00e1jlja,</li> <li>a jQuery oszt\u00e1lyk\u00f6nyvt\u00e1r JS f\u00e1jlja.</li> </ul> <p>Fontos, hogy a JavaScript f\u00e1jl bet\u00f6lt\u0151d\u00e9sekor az addig a pontig elk\u00e9sz\u00fclt DOM-on k\u00e9pes manipul\u00e1ci\u00f3t v\u00e9gezni.</p> <p>Ezen k\u00edv\u00fcl l\u00e1thatjuk, hogy a HTML f\u00e1jlunkban egy <code>&lt;header&gt;</code> \u00e9s egy <code>&lt;main&gt;</code> elem tal\u00e1lhat\u00f3. A <code>&lt;header&gt;</code> tartalma sz\u00e1munkra statikus. A <code>&lt;main&gt;</code>-ben h\u00e1rom db <code>&lt;section&gt;</code> elemet l\u00e1thatunk az al\u00e1bbi ID-kkal ell\u00e1tva:</p> <ul> <li><code>lets-play-section</code>: a j\u00e1t\u00e9k ind\u00edt\u00e1s\u00e1ra (az opci\u00f3k megjelen\u00edt\u00e9s\u00e9re) sz\u00e1nt gomb, </li> <li><code>start-game-form-section</code>: a j\u00e1t\u00e9k opci\u00f3it tartalmaz\u00f3 <code>&lt;form&gt;</code>, amely a <code>Loading...</code> sz\u00f6veget tartalmazza - egyel\u0151re el van rejtve a <code>style</code> attrib\u00fatum <code>display: none</code> \u00e9rt\u00e9ke alapj\u00e1n,</li> <li><code>game-section</code>: maga a j\u00e1t\u00e9kt\u00e9r, ahol a k\u00e9rd\u00e9sek tal\u00e1lhat\u00f3k, szint\u00e9n elrejtve tal\u00e1lhat\u00f3 a DOM-ban.</li> </ul>"},{"location":"laborok/13-jquery/#feladat-1-jatek-inditasa","title":"Feladat 1 - J\u00e1t\u00e9k ind\u00edt\u00e1sa","text":""},{"location":"laborok/13-jquery/#jquery-es-ajax-kiprobalasa","title":"jQuery \u00e9s AJAX kipr\u00f3b\u00e1l\u00e1sa","text":"<p>Pr\u00f3b\u00e1ljuk ki a jQuery k\u00f6nyvt\u00e1rat az al\u00e1bbi m\u00f3don: a szerver ind\u00edt\u00e1s\u00e1t k\u00f6vet\u0151en navig\u00e1ljunk a b\u00f6ng\u00e9sz\u0151ben az oldalra! Az F12 eszk\u00f6zt\u00e1ron nyissuk meg a Console-t, \u00e9s futtassuk az al\u00e1bbi parancsokat egyes\u00e9vel, sorrendben (k\u00f6zben figyelj\u00fck, mi t\u00f6rt\u00e9nik a fel\u00fcleten):</p> <pre><code>$(\"#lets-play-section\").hide();\n$(\"#start-game-form-section\").show();\n$(\"#start-game-form-section, #game-section\").toggle();\n</code></pre> <p>L\u00e1thatjuk, hogy a <code>.hide()</code>, <code>.show()</code> \u00e9s <code>.toggle()</code> f\u00fcggv\u00e9nyek \u00e9rtelemszer\u0171en a CSS selector \u00e1ltal illesztett \u00f6sszes DOM elem display: none CSS tulajdons\u00e1g\u00e1t teszik fel a DOM elemre, vagy veszik azt le r\u00f3la.</p> <p>Tesztelj\u00fck a t\u00e1voli API-t! A <code>triviaut.js</code> f\u00e1jlba \u00edrjuk az al\u00e1bbi k\u00f3dot:</p> <pre><code>$.get(\"https://opentdb.com/api.php?amount=10\").then(function (q) {\nconsole.log(q);\n$(\"body\").text(JSON.stringify(q, '\\n'));\n});\n</code></pre> <p>Ha mindent j\u00f3l csin\u00e1ltunk, az al\u00e1bbi (vagy nagyon hasonl\u00f3) hib\u00e1t l\u00e1tjuk a konzolon az oldal bet\u00f6lt\u0151d\u00e9s\u00e9t k\u00f6vet\u0151en:</p> <pre><code>Uncaught ReferenceError: $ is not defined\n</code></pre> <p>A JavaScript f\u00e1jlok bet\u00f6lt\u00e9si sorrendje kiemelten fontos! A bet\u00f6lt\u0151d\u00e9s sorrendje implik\u00e1lja a f\u00fcgg\u0151s\u00e9gi sorrendet is, ugyanis v\u00e9grehajt\u00e1suk a b\u00f6ng\u00e9sz\u0151ben alap\u00e9rtelmezetten az import\u00e1l\u00e1s sorrendj\u00e9vel megegyezik. Ha a saj\u00e1t f\u00e1jlunkat el\u0151bb hivatkozzuk, mint a jQuery-t, \u00fagy az ott fut\u00f3 k\u00f3d <code>$</code> v\u00e1ltoz\u00f3ra t\u00f6rt\u00e9n\u0151 (szinkron) hivatkoz\u00e1sa hib\u00e1t dob (mert ekkor m\u00e9g nem futott le a jQuery <code>$</code> objektumot defini\u00e1l\u00f3 k\u00f3d).</p> <p>A megold\u00e1s, hogy \u00e1t kell mozgatnunk a saj\u00e1t JS f\u00e1jlunk hivatkoz\u00e1s\u00e1t a HTML <code>&lt;head&gt;</code> elemben a jQuery hivatkoz\u00e1s ut\u00e1n (\u00e9rdemes minden k\u00fcls\u0151 f\u00fcgg\u0151s\u00e9g hivatkoz\u00e1sa ut\u00e1nra, teh\u00e1t a <code>&lt;head&gt;</code> v\u00e9g\u00e9re tenni).</p> <p>A <code>$.get</code> statikus f\u00fcggv\u00e9ny a <code>$.ajax</code> h\u00edv\u00e1s r\u00f6vid\u00edt\u00e9se, ahol a HTTP ige fixen a HTTP GET. Visszat\u00e9r\u00e9se egy Promise objektum, melyre a <code>.then</code> h\u00edv\u00e1ssal iratkozunk fel, ami 3 callback param\u00e9tert v\u00e1r (mindh\u00e1rom opcion\u00e1lis): a sikeres teljes\u00fcl\u00e9st, a hiba\u00e1gat, \u00e9s mindet.</p> <p>A fenti h\u00edv\u00e1s teh\u00e1t beh\u00edv a megadott URL-re, a kapott v\u00e1laszt a konzolon megjelen\u00edti, majd a <code>&lt;body&gt;</code> elem tartalm\u00e1t sz\u00f6vegesen lecser\u00e9li a kapott tartalmat string form\u00e1ra konvert\u00e1lva (a v\u00e1lasz ugyanis egy JSON objektum).</p> <p>Az al\u00e1bbi form\u00e1tum\u00fa v\u00e1lasz \u00e9rkezik a t\u00e1voli API-t\u00f3l:</p> <pre><code>{\n\"response_code\": 0,\n\"results\": [\n{ \"category\": \"Entertainment: Film\",\n\"type\": \"multiple\",\n\"difficulty\": \"hard\",\n\"question\": \"In the 1976 film 'Taxi Driver', how many guns did Travis buy from the salesman?\",\n\"correct_answer\": \"4\",\n\"incorrect_answers\": [ \"2\" , \"6\" , \"1\" ]\n},\n...]\n}\n</code></pre>"},{"location":"laborok/13-jquery/#jatek-inditas-logika","title":"J\u00e1t\u00e9k ind\u00edt\u00e1s logika","text":"<p>Ind\u00edtsuk el a j\u00e1t\u00e9kot! A <code>triviaut.js</code> f\u00e1jl tartalm\u00e1t cser\u00e9lj\u00fck le az al\u00e1bbira:</p> <pre><code>$(\"#lets-play-button\").on(\"click\", function (e) {\n$(e.target).toggle();\n$(\"#start-game-form\").toggle();\n});\n</code></pre> <p>A fenti k\u00f3dr\u00e9szlettel elvileg a gombra kattintva elrejtj\u00fck a gombot \u00e9s megjelen\u00edtj\u00fck a j\u00e1t\u00e9k opci\u00f3s \u0171rlapj\u00e1t. A k\u00f3d viszont nem m\u0171k\u00f6dik. Ha ut\u00e1naj\u00e1runk, \u00fagy t\u0171nik, hogy nem t\u00f6rt\u00e9nik feliratkoz\u00e1s. Futtassuk le el\u0151tte az al\u00e1bbi k\u00f3dot is (a JS f\u00e1jl elej\u00e9n):</p> <pre><code>console.log($(\"#lets-play-button\").length);\n</code></pre> <p>A konzolon a 0 \u00e9rt\u00e9k jelenik meg, teh\u00e1t ilyen nincsen a DOM-ban. A probl\u00e9ma, hogy a JS f\u00e1jlunk kor\u00e1bban fut, mint a DOM bet\u00f6lt\u0151dne! Fontos teh\u00e1t megv\u00e1rnunk, am\u00edg ez megt\u00f6rt\u00e9nik. A klasszikus m\u00f3dja ennek az al\u00e1bbi megad\u00e1s:</p> <pre><code>$(document).ready(function () {\n// itt m\u00e1r elk\u00e9sz\u00fclt a DOM!\n})\n</code></pre> <p>A fenti teh\u00e1t kiv\u00e1lasztja a document elemet a DOM-b\u00f3l, teh\u00e1t a teljes DOM gy\u00f6ker\u00e9t, aminek feliratkozik a <code>ready</code> pszeudo-esem\u00e9ny\u00e9re (ilyen konkr\u00e9t DOM esem\u00e9ny ugyanis nincsen). A fentivel ekvivalens megad\u00e1s az al\u00e1bbi, ahol arrow function-t haszn\u00e1lunk:</p> <pre><code>$(() =&gt; {\n// itt m\u00e1r elk\u00e9sz\u00fclt a DOM!\n});\n</code></pre> <p>Arrow function</p> <p>A fenti szintaxisban a <code>() =&gt; {}</code> k\u00f3dr\u00e9szlet szint\u00e9n egy f\u00fcggv\u00e9ny deklar\u00e1ci\u00f3ja, melynek neve arrow function. Az arrow function szintaxis t\u00f6m\u00f6rebb, szint\u00e9n param\u00e9terezhet\u0151 (<code>a =&gt; a + 10</code> vagy <code>(a, b) =&gt; { return a * b + 2; }</code>). Tov\u00e1bbi \u00e9rdekess\u00e9ge, hogy a <code>function</code> kulcssz\u00f3val megadott f\u00fcggv\u00e9nyekkel ellent\u00e9tben nem v\u00e1ltoztatja meg a <code>this</code> v\u00e1ltoz\u00f3 \u00e1ltal reprezent\u00e1lt f\u00fcggv\u00e9nyt (objektumot) sem.</p> <p>A kezdeti m\u0171k\u00f6d\u00e9s\u00fcnket teh\u00e1t el\u00e9rhetj\u00fck az al\u00e1bbi m\u00f3don:</p> <pre><code>$(() =&gt; {\n$(\"#lets-play-button\").on(\"click\", () =&gt; {\n$(\"#lets-play-section, #start-game-form-section\").toggle();\n});\n});\n</code></pre> <p>Teh\u00e1t a gombot tartalmaz\u00f3 \u00e9s a j\u00e1t\u00e9k opci\u00f3kat tartalmaz\u00f3 szekci\u00f3kat megjelen\u00edtj\u00fck/elrejtj\u00fck.</p> <p>Eg\u00e9sz\u00edts\u00fck ki tov\u00e1bb\u00e1 a fenti k\u00f3dot (a megfelel\u0151 helyen) azzal, hogy a formot reprezent\u00e1l\u00f3 HTML r\u00e9szletet let\u00f6ltj\u00fck a szervert\u0151l \u00e9s a megfelel\u0151 helyre sz\u00farjuk a DOM-ban:</p> <pre><code>$.get(\"start-game-form-contents.html\")\n.then(html =&gt; $(\"#start-game-form\").html(html));\n</code></pre> <p>BEADAND\u00d3 (2 pont)</p> <p>M\u00e1soljon be egy teljes k\u00e9perny\u0151s k\u00e9perny\u0151k\u00e9pet az opci\u00f3k kezdeti \u00e1llapot\u00e1r\u00f3l, ahol el van rejtve az ind\u00edt\u00e1sra szolg\u00e1l\u00f3 gomb! (<code>f1.png</code>)</p>"},{"location":"laborok/13-jquery/#feladat-2-szerveroldali-api-hasznalata","title":"Feladat 2 - Szerveroldali API haszn\u00e1lata","text":"<p>T\u00f6lts\u00fck le a param\u00e9tereknek megfelel\u0151 elemeket a t\u00e1voli API-r\u00f3l! Ehhez szint\u00e9n a <code>$.get</code> f\u00fcggv\u00e9nyt tudjuk haszn\u00e1lni:</p> <pre><code>// a glob\u00e1lis n\u00e9vt\u00e9rben deklar\u00e1ljuk az al\u00e1bbi v\u00e1ltoz\u00f3kat \u00e9s f\u00fcggv\u00e9nyt:\nlet remainingQuestions, totalQuestions, currentQuestion, correctAnswerIndex;\nfunction getNextQuestion() { }\n\n//...\n$.get(\"start-game-form-contents.html\").then(html =&gt; $(\"#start-game-form\").html(html)\n.on(\"submit\", e =&gt; { // k\u00f6zvetlen\u00fcl a HTML besz\u00far\u00e1sa ut\u00e1n l\u00e1colhatjuk a 'submit' esem\u00e9nyre t\u00f6rt\u00e9n\u0151 feliratkoz\u00e1st\ne.preventDefault(); // a b\u00f6ng\u00e9sz\u0151 alap\u00e9rtelmezett m\u0171k\u00f6d\u00e9s\u00e9t meg\u00e1ll\u00edtjuk, amivel \u00fajrat\u00f6lten\u00e9 az oldalt\n$(\"#start-game-form button[type='submit']\").attr(\"disabled\", true); // a Go! gombot letiltjuk, hogy ne lehessen \u00fajra API k\u00e9r\u00e9st ind\u00edtani, am\u00edg meg nem \u00e9rkezett a v\u00e1lasz\n$.get(\"https://opentdb.com/api.php?type=multiple&amp;encode=base64&amp;amount=\" + $(\"[name='trivia_amount']\").val()).then(data =&gt; {\nremainingQuestions = data.results;\nconsole.log(remainingQuestions);\ncurrentQuestion = 0;\ntotalQuestions = remainingQuestions.length;\n$(\"#total-questions\").text(totalQuestions);\n$(\"#start-game-form button[type='submit']\").removeAttr(\"disabled\");\ngetNextQuestion();\n});\n}));\n</code></pre> <p>BEADAND\u00d3 (0.5 pont)</p> <p>K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a konzolon l\u00e1that\u00f3 \u00e9rkezett v\u00e1laszokr\u00f3l! (<code>f2.png</code>) Legyen l\u00e1that\u00f3, hogy h\u00e1ny v\u00e1lasz \u00e9rkezett, \u00e9s ez a sz\u00e1m ne az alap\u00e9rtelmezett 10 legyen!</p>"},{"location":"laborok/13-jquery/#feladat-3-onallo-difficulty-es-category","title":"Feladat 3 (\u00d6n\u00e1ll\u00f3) - Difficulty \u00e9s Category","text":"<p>K\u00e9sz\u00edtse el a marad\u00e9k k\u00e9t param\u00e9ter elk\u00fcld\u00e9s\u00e9t is a <code>difficulty</code> \u00e9s <code>category</code> relev\u00e1ns \u00e9rt\u00e9keinek megad\u00e1s\u00e1val! Haszn\u00e1lhatja a $().serializeArray() f\u00fcggv\u00e9nyt is!</p> <p>BEADAND\u00d3 (0.5 pont)</p> <p>Az \u00e9rkez\u0151 v\u00e1laszr\u00f3l a konzolon k\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet! (<code>f3.png</code>)</p>"},{"location":"laborok/13-jquery/#feladat-4-a-jatek-menete","title":"Feladat 4 - A j\u00e1t\u00e9k menete","text":"<p>A meg\u00e9rkezett v\u00e1lasz kezel\u00e9s\u00e9hez a megfelel\u0151 mez\u0151ket ki kell t\u00f6lten\u00fcnk a HTML dokumentumban.</p> <p>A <code>getNextQuestion()</code> f\u00fcggv\u00e9ny k\u00f3dj\u00e1nak kezdem\u00e9nye az al\u00e1bbi lehet:</p> <pre><code>currentQuestion++;\nconst question = remainingQuestions.pop();\nif (question === undefined) {\n// TODO: nincs t\u00f6bb k\u00e9rd\u00e9s!\nreturn;\n}\ncorrectAnswerIndex = Math.floor(Math.random() * 4);\nconst answers = question.incorrect_answers.slice();\nanswers.splice(correctAnswerIndex, 0, question.correct_answer);\n$(\".answer .correct, .answer .incorrect, #next-question\").hide();\n</code></pre> <p>A f\u00fcggv\u00e9ny tov\u00e1bbi r\u00e9sz\u00e9t az al\u00e1bbi m\u00f3don implement\u00e1lja:</p> <ul> <li>rejtse el az opci\u00f3s \u0171rlapot,</li> <li>jelen\u00edtse meg a j\u00e1t\u00e9kteret,</li> <li>t\u00f6ltse ki a jelenlegi j\u00e1t\u00e9k sz\u00e1ml\u00e1l\u00f3j\u00e1t,</li> <li>t\u00f6ltse ki a k\u00e9rd\u00e9s kateg\u00f3ri\u00e1j\u00e1t (<code>atob(question.category)</code>),</li> <li>t\u00f6ltse ki a k\u00e9rd\u00e9s sz\u00f6veg\u00e9t (szint\u00e9n haszn\u00e1lja az <code>atob()</code> f\u00fcggv\u00e9nyt a base64 sz\u00f6veg dek\u00f3dol\u00e1s\u00e1hoz),</li> <li>vegye le az \u00f6sszes v\u00e1laszlehet\u0151s\u00e9gr\u0151l (<code>.answer</code>) a <code>disabled</code> attrib\u00fatumot (tipp: $().removeAttr()),</li> <li>minden v\u00e1laszlehet\u0151s\u00e9g sz\u00f6veg\u00e9nek hely\u0151rz\u0151j\u00e9ben helyezze el a v\u00e1lasz sz\u00f6veg\u00e9t (\u00fcgyeljen r\u00e1, hogy ne t\u00f6r\u00f6lje ki a helyes/helytelen ikonokat, \u00e9s itt is haszn\u00e1lja az <code>atob()</code> konverzi\u00f3t)!</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9sz\u00edtsen k\u00e9perny\u0151k\u00e9pet a j\u00e1t\u00e9kt\u00e9ren megjelen\u0151 k\u00e9rd\u00e9sr\u0151l, v\u00e1laszlehet\u0151s\u00e9gekr\u0151l! (<code>f4.png</code>)</p>"},{"location":"laborok/13-jquery/#feladat-5-onallo-tovabbi-jateklogika","title":"Feladat 5 (\u00d6n\u00e1ll\u00f3) - Tov\u00e1bbi j\u00e1t\u00e9klogika","text":"<p>A tanultak gyakorl\u00e1sak\u00e9pp k\u00e9sz\u00edtse el az al\u00e1bbi funkci\u00f3kat:</p> <ul> <li>A v\u00e1laszlehet\u0151s\u00e9gre kattintva a rendszer a v\u00e1lasz mellett tal\u00e1lhat\u00f3 pipa ikonnal jelzi, hogy helyes v\u00e1lasz \u00e9rkezett, vagy x-szel, ha helytelen. Ut\u00f3bbi esetben a helyes v\u00e1lasz mellett egy pipa is megjelenik.<ul> <li>A feliratkoz\u00e1shoz haszn\u00e1lja az <code>$(\".answer\").on(\"click\", e =&gt; { /* */ })</code> kezel\u0151t!</li> </ul> </li> <li>A helyes v\u00e1laszok sz\u00e1m\u00e1t tartsa nyilv\u00e1n!</li> <li>Jelen\u00edtse meg a tov\u00e1bbl\u00e9p\u00e9shez haszn\u00e1lt gombot, ha a felhaszn\u00e1l\u00f3 v\u00e1laszt adott! Arra kattintva jelenjen meg a k\u00f6vetkez\u0151 k\u00e9rd\u00e9s!</li> <li>A j\u00e1t\u00e9k befejezt\u00e9vel, amikor elfogynak az aktu\u00e1lis k\u00e9rd\u00e9sek, jelen\u00edtse meg, h\u00e1ny pontot \u00e9rt el a felhaszn\u00e1l\u00f3 a maximumb\u00f3l!</li> <li>A j\u00e1t\u00e9k befejezt\u00e9vel lehessen \u00fajrat\u00f6lt\u00e9s (F5) n\u00e9lk\u00fcl \u00faj j\u00e1t\u00e9kot ind\u00edtani! Hozhat l\u00e9tre \u00faj gombot, vagy \u00e1t\u00edrhatja a k\u00f6vetkez\u0151 k\u00e9rd\u00e9sre szolg\u00e1l\u00f3 gomb sz\u00f6veg\u00e9t (ekkor viszont \u00fcgyeljen r\u00e1, hogy ezt k\u00f6vet\u0151en ne felejtse vissza\u00e1ll\u00edtani azt)! A legfelhaszn\u00e1l\u00f3bar\u00e1tabb \u00e9lm\u00e9ny\u00e9rt haszn\u00e1lhatja a Bootstrap modal megold\u00e1st is!</li> </ul> <p>BEADAND\u00d3 (1 pont)</p> <p>K\u00e9perny\u0151k\u00e9pekkel \u00e9s a relev\u00e1ns k\u00f3dr\u00e9szletekkel demonstr\u00e1lja az al\u00e1bbi eseteket:</p> <ul> <li>a j\u00e1t\u00e9kos helyesen v\u00e1laszolt a k\u00e9rd\u00e9sre, (<code>f5.1.png</code>)</li> <li>a j\u00e1t\u00e9kos helytelen\u00fcl v\u00e1laszolt a k\u00e9rd\u00e9sre, (<code>f5.2.png</code>)</li> <li>a v\u00e1laszad\u00e1s el\u0151tt nem, ut\u00e1na l\u00e1that\u00f3 a tov\u00e1bbl\u00e9p\u00e9shez haszn\u00e1lt gomb, (<code>f5.3.png</code>)</li> <li>az aktu\u00e1lis k\u00e9rd\u00e9s sz\u00e1ml\u00e1l\u00f3ja n\u00f6vekszik, (<code>f5.4.png</code>)</li> <li>megjelenik a felhaszn\u00e1l\u00f3 \u00e1ltal el\u00e9rt pontsz\u00e1m! (<code>f5.5.png</code>)</li> </ul>"},{"location":"tudnivalok/github/GitHub-Actions/","title":"GitHub Actions ismertet\u0151","text":"<p>A laborfeladatok ki\u00e9rt\u00e9kel\u00e9s\u00e9ben a GitHub Actions-re t\u00e1maszkodunk. Seg\u00edts\u00e9g\u00e9vel a git repository-kon m\u0171veleteket \u00e9s programokat tudunk futtatni. Ilyen m\u0171velet p\u00e9ld\u00e1ul a C# k\u00f3d leford\u00edt\u00e1sa, vagy a beadott k\u00f3d tesztel\u00e9se.</p> <p>A lefutott ki\u00e9rt\u00e9kel\u00e9sr\u0151l a pull request-ben fogsz \u00e9rtes\u00edt\u00e9st kapni. Ha meg szeretn\u00e9d n\u00e9zni r\u00e9szletesebben a h\u00e1tt\u00e9rben t\u00f6rt\u00e9nteket, vagy p\u00e9ld\u00e1ul az alkalmaz\u00e1s napl\u00f3kat, a GitHub fel\u00fclet\u00e9n az Actions alatt indulhatsz el.</p> <p></p> <p>Az Actions fel\u00fclet\u00e9n un. Workflow-kat l\u00e1tsz; minden egyes ki\u00e9rt\u00e9kel\u00e9s futtat\u00e1s egy-egy elem lesz itt (teh\u00e1t historikusan is visszakereshet\u0151ek).</p> <p></p> <p>Ezek k\u00f6z\u00fcl egyet kiv\u00e1lasztva (pl. a legfels\u0151 mindig a legutols\u00f3) l\u00e1thatod a workflow fut\u00e1s\u00e1nak r\u00e9szleteit. A fut\u00e1s napl\u00f3j\u00e1hoz a bal oldali list\u00e1ban m\u00e9g kattintani kell egyet. Jobb oldalon l\u00e1that\u00f3 a folyamat teljes napl\u00f3ja.</p> <p></p> <p>Minden z\u00f6ld pipa egy-egy sikeres l\u00e9p\u00e9st jelent. Ezen l\u00e9p\u00e9sek nem azonosak a feladatokokkal, hanem a ki\u00e9rt\u00e9kel\u00e9s folyamat\u00e1nak l\u00e9p\u00e9sei lesznek. Ilyen l\u00e9p\u00e9s p\u00e9ld\u00e1ul a k\u00f6rnyezet el\u0151k\u00e9sz\u00edt\u00e9se, pl. a .NET SDK telep\u00edt\u00e9se (minden ki\u00e9rt\u00e9kel\u00e9s egy vadi\u00faj k\u00f6rnyezetben indul, \u00edgy mindent el\u0151 kell k\u00e9sz\u00edteni).</p> <p>Alapvet\u0151en a l\u00e9p\u00e9sek mindig sikeresek, akkor is, ha a megold\u00e1sodban hiba van, mert a ki\u00e9rt\u00e9kel\u00e9s erre fel van k\u00e9sz\u00edtve. Kiv\u00e9telt ez al\u00f3l csak a <code>neptun.txt</code> hi\u00e1nya ill. a C# k\u00f3d leford\u00edt\u00e1sa jelent. El\u0151bbi felt\u00e9tlen\u00fcl sz\u00fcks\u00e9ges, ez\u00e9rt semmilyen folyamatot nem hajtunk v\u00e9gre n\u00e9lk\u00fcle. Ut\u00f3bbi eset\u00e9ben a C# k\u00f3d ford\u00edt\u00e1sa szint\u00e9n sz\u00fcks\u00e9ges a tov\u00e1bbl\u00e9p\u00e9shez, ez\u00e9rt sikertelens\u00e9g eset\u00e9n le\u00e1ll a folyamat.</p> <p>N\u00e9ha el\u0151fordulhat azonban tranziens, id\u0151szakos hiba is. P\u00e9ld\u00e1ul a .NET k\u00f6rnyezet let\u00f6lt\u00e9se nem siker\u00fcl h\u00e1l\u00f3zati hiba miatt. Ilyen esetben a futtat\u00e1st k\u00e9zzel meg lehet ism\u00e9telni. Ez persze csak akkor seg\u00edt, ha t\u00e9nyleg \u00e1tmeneti hib\u00e1r\u00f3l van sz\u00f3, teh\u00e1t pl. egy C# ford\u00edt\u00e1si hib\u00e1n nem fog seg\u00edteni. (Ezt a hiba\u00fczenetb\u0151l illetve a l\u00e9p\u00e9s nev\u00e9b\u0151l tudod kider\u00edteni, vagy legal\u00e1bb is megtippelni kell\u0151 bizonyoss\u00e1ggal.)</p> <p></p> <p>A feladat f\u00fcggv\u00e9ny\u00e9ben ak\u00e1r az alkalmaz\u00e1s napl\u00f3kat is meg tudod n\u00e9zni itt. Pl. amikor .NET alkalmaz\u00e1st k\u00e9sz\u00edtesz, az alkalmaz\u00e1st elind\u00edtjuk, \u00e9s minden, amit napl\u00f3z, itt megtekinthet\u0151.</p> <p>Az al\u00e1bbi p\u00e9ld\u00e1ul egy Entity Framework-\u00f6t haszn\u00e1l\u00f3 alkalmaz\u00e1s inicializ\u00e1s\u00e1t mutatja, k\u00f6zt\u00fck p\u00e9ld\u00e1ul a kiadott SQL parancsokat is. Debuggol\u00e1s k\u00f6zben a Visual Studio Output ablak\u00e1ban is hasonl\u00f3kat l\u00e1thatsz. Ez term\u00e9szetesen nagyban f\u00fcgg a konkr\u00e9t feladatt\u00f3l.</p> <p></p>"},{"location":"tudnivalok/github/GitHub-credentials/","title":"Egyetemi laborokban: GitHub bel\u00e9p\u00e9s","text":"<p>Az egyetemi laborokban a g\u00e9pek megjegyzik a GitHub bel\u00e9p\u00e9si adatokat. Ezt a munka v\u00e9gezt\u00e9vel k\u00e9zzel kell t\u00f6r\u00f6lni.</p> <ol> <li>Nyisd meg a <code>Credential Manager</code>-t a Start men\u00fcb\u0151l.</li> <li>A <code>Windows Credentials</code> oldalon keresd meg a GitHubra mutat\u00f3 bejegyz\u00e9seket, \u00e9s t\u00f6r\u00f6ld \u0151ket.    </li> </ol>"},{"location":"tudnivalok/github/GitHub/","title":"Feladatok bead\u00e1sa (GitHub)","text":"<p>A feladatok bead\u00e1s\u00e1hoz a GitHub platformot haszn\u00e1ljuk. Minden labor bead\u00e1sa egy-egy GitHub repository-ban t\u00f6rt\u00e9nik, melyet a feladatle\u00edr\u00e1sban tal\u00e1lhat\u00f3 linken kereszt\u00fcl kapsz meg. A labor feladatainak megold\u00e1s\u00e1t ezen repository-ban kell elk\u00e9sz\u00edtened, \u00e9s ide kell felt\u00f6ltened. A k\u00e9sz megold\u00e1s bead\u00e1sa a repository-ba val\u00f3 felt\u00f6lt\u00e9s ut\u00e1n egy un. pull request form\u00e1j\u00e1ban t\u00f6rt\u00e9nik, amelyet a laborvezet\u0151dh\u00f6z rendelsz.</p> <p>FONTOS</p> <p>Az itt le\u00edrt formai el\u0151\u00edr\u00e1sok betart\u00e1sa elv\u00e1r\u00e1s. A nem ilyen form\u00e1ban beadott megold\u00e1sokat nem \u00e9rt\u00e9kelj\u00fck.</p>"},{"location":"tudnivalok/github/GitHub/#roviditett-verzio","title":"R\u00f6vid\u00edtett verzi\u00f3","text":"<p>Al\u00e1bb r\u00e9szletesen bemutatjuk a bead\u00e1s menet\u00e9t. Itt egy r\u00f6vid \u00f6sszefoglal\u00f3 az \u00e1ttekint\u00e9shez, illetve a helyes bead\u00e1s ellen\u0151rz\u00e9s\u00e9hez.</p> <ol> <li> <p>A munk\u00e1dat Moodle-ben tal\u00e1lhat\u00f3 GitHub Classroom megh\u00edv\u00f3 linken kereszt\u00fcl l\u00e9trehozott GitHub repository-ban kell elk\u00e9sz\u00edtsd.</p> </li> <li> <p>A megold\u00e1shoz k\u00e9sz\u00edts egy k\u00fcl\u00f6n \u00e1gat, ne a master-en dolgozz. Erre az \u00e1gra ak\u00e1rh\u00e1ny kommitot tehetsz. Mindenk\u00e9ppen pushold a megold\u00e1st.</p> </li> <li> <p>A bead\u00e1st egy pull request jelzi, amely pull request-et a laborvezet\u0151dh\u00f6z kell rendelned.</p> </li> <li> <p>Ha az eredm\u00e9nnyel vagy \u00e9rt\u00e9kel\u00e9ssel kapcsolatban k\u00e9rd\u00e9sed van, pull request kommentben k\u00e9rdezhetsz. A laborvezet\u0151 \u00e9rtes\u00edt\u00e9s\u00e9hez haszn\u00e1ld a <code>@n\u00e9v</code> c\u00edmz\u00e9st a komment sz\u00f6veg\u00e9ben.</p> </li> </ol>"},{"location":"tudnivalok/github/GitHub/#a-munka-elkezdese-git-checkout","title":"A munka elkezd\u00e9se: git checkout","text":"<ol> <li> <p>Regisztr\u00e1lj egy GitHub accountot, ha m\u00e9g nincs.</p> </li> <li> <p>Moodle-ben a kurzus oldal\u00e1n keresd meg a laborhoz tartoz\u00f3 megh\u00edv\u00f3 URL-t. Ez minden laborhoz m\u00e1s lesz, \u00fcgyelj r\u00e1, hogy a megfelel\u0151 linket haszn\u00e1ld.</p> </li> <li> <p>Ha k\u00e9ri, adj enged\u00e9lyt a GitHub Classroom alkalmaz\u00e1snak, hogy haszn\u00e1lja az account adataidat.</p> <p></p> </li> <li> <p>L\u00e1tni fogsz egy oldalt, ahol elfogadhatod a feladatot (\"Accept the ... assignment\"). Kattints a gombra.</p> <p></p> </li> <li> <p>V\u00e1rd meg, am\u00edg elk\u00e9sz\u00fcl a repository. A repository linkj\u00e9t itt kapod meg.</p> <p>Megjegyz\u00e9s</p> <p>A repository priv\u00e1t lesz, azaz az senki nem l\u00e1tja, csak te, \u00e9s az oktat\u00f3k.</p> <p></p> </li> <li> <p>Nyisd meg a repository-t a webes fel\u00fcleten a linkre kattintva. Ezt az URL-t \u00edrd fel, vagy mentsd el.</p> <p></p> </li> <li> <p>Kl\u00f3nozd le a repository-t. Ehhez sz\u00fcks\u00e9ges lesz a repository c\u00edm\u00e9re, amit a repository webes fel\u00fclet\u00e9n a Clone or download alatt tal\u00e1lsz.</p> <p>A git repository kezel\u00e9s\u00e9hez tetsz\u0151leges klienst haszn\u00e1lhatsz. Ha nincs kedvenced m\u00e9g, akkor legegyszer\u0171bb a GitHub Desktop. Ebben az alkalmaz\u00e1sban k\u00f6zvetlen\u00fcl tudod list\u00e1zni a repository-kat GitHub-r\u00f3l, vagy haszn\u00e1lhatod az URL-t is a kl\u00f3noz\u00e1shoz.</p> <p></p> <p>Ha konzolt haszn\u00e1ln\u00e1l, az al\u00e1bbi parancs kl\u00f3nozza a repository-t (ha a <code>git</code> parancs el\u00e9rhet\u0151): <code>git clone &lt;repository link&gt;</code></p> <p>Sikertelen kl\u00f3noz\u00e1s</p> <p>Amennyiben a bejelentkez\u00e9s sikertelen felhaszn\u00e1l\u00f3n\u00e9v/jelsz\u00f3 p\u00e1rossal a \"Clone with HTTPS\" eset\u00e9n, (r\u00e9gebb \u00f3ta haszn\u00e1lt felhaszn\u00e1l\u00f3n\u00e1l) \u00e9rdemes ellen\u0151rizni a git-en tal\u00e1lhat\u00f3 Personal Access token lej\u00e1rati d\u00e1tum\u00e1t. </p> <p><code>Jobb fels\u0151 sarokban a profilk\u00e9p melletti lefel\u00e9 mutat\u00f3 nyil &gt; Settings &gt; bal oldalon (legals\u00f3) Developer settings &gt; ugyanitt Personal access tokens.</code></p> <p>Alternat\u00edv m\u00f3dszerk\u00e9nt: HTTP kl\u00f3noz\u00e1s helyett, SSH kulcs haszn\u00e1lat\u00e1hoz, angol nyelv\u0171 instrukci\u00f3k itt tal\u00e1lhat\u00f3ak.</p> </li> <li> <p>Ha siker\u00fclt a kl\u00f3noz\u00e1s, M\u00c9G NE KEZDJ EL DOLGOZNI! A megold\u00e1st ne a repository <code>master</code>/<code>main</code> \u00e1g\u00e1n k\u00e9sz\u00edtsd el. Hozz l\u00e9tre egy \u00faj \u00e1gat (branch) <code>megoldas</code> n\u00e9ven.</p> <p>GitHub Desktop-ban a Branch men\u00fcben teheted ezt meg.</p> <p></p> <p>Ha konzolt haszn\u00e1lsz, az \u00faj \u00e1g elk\u00e9sz\u00edthet\u0151 ezzel a paranccsal: <code>git checkout -b megoldas</code></p> </li> <li> <p>Ezen a megold\u00e1s \u00e1gon dolgozva k\u00e9sz\u00edtsd el a beadand\u00f3kat. Ak\u00e1rh\u00e1nyszor kommitolhatsz \u00e9s pusholhatsz. A megold\u00e1s r\u00e9sze a forr\u00e1sk\u00f3d \u00e9s a feladatokban elv\u00e1rt k\u00e9perny\u0151k\u00e9pek. Ha a feladat k\u00e9perny\u0151k\u00e9pet v\u00e1r el, akkor azt a repository gy\u00f6ker\u00e9be commitold az elv\u00e1rt n\u00e9ven.</p> <p>Egyetemi laborban</p> <p>Laborg\u00e9peken mindig ellen\u0151r\u00edzd, hogy a megfelel\u0151 n\u00e9vvel \u00e9s email c\u00edmmel kommitolsz-e. Ezt a k\u00f6vetkez\u0151 command line paranccsal tudod megtenni.</p> <pre><code>git config user.name\ngit config user.email\n</code></pre> <p>Ha ez nem megfelel\u0151 lenne, akkor add ki az al\u00e1bbi parancsokat a git repository mapp\u00e1j\u00e1ban. Ezzel az adott repository-ra fogod be\u00e1ll\u00edtani a k\u00edv\u00e1nt nevet \u00e9s email c\u00edmet. (\u00c9rdemes olyan email c\u00edmet, megadni ami a github useretekhez van rendelve)</p> <pre><code>git config user.name \"John Doe\"\ngit config user.email \"john@doe.org\"\n</code></pre> <p>Otthon</p> <p>Otthon a fentieket \u00e9rdemes lehet a glob\u00e1lisan vizsg\u00e1lni \u00e9s fel\u00fcl\u00edrni a <code>--global</code> kapcsol\u00f3val.</p> <p>GitHub Desktop-ban \u00edgy tudsz kommitolni. Mindig ellen\u0151rizd, hogy j\u00f3 \u00e1gon vagy-e. Els\u0151 alkalommal a megoldas \u00e1g csak helyben l\u00e9tezik, ez\u00e9rt publik\u00e1lni kell: Publish this branch.</p> <p></p> <p>A tov\u00e1bbi kommitokn\u00e1l is mindig ellen\u0151rizd a megfelel\u0151 \u00e1gat. Ha egy kommit m\u00e9g nincs fel\u00f6ltve, azt a Push origin gombbal teheted meg. A kis sz\u00e1m a gombon jelzi, hogy h\u00e1ny, m\u00e9g nem pusholt kommit van.</p> <p></p> <p>Ha konzolt haszn\u00e1lsz, akkor az al\u00e1bbi parancsokat haszn\u00e1ld (felt\u00e9ve, hogy a j\u00f3 \u00e1gon vagy):</p> <pre><code># Ellen\u0151rizd az \u00e1gat, \u00e9s hogy milyen f\u00e1jlok m\u00f3dosultak\ngit status\n\n# Minden v\u00e1ltoztat\u00e1st el\u0151k\u00e9sz\u00edt kommitol\u00e1sra\ngit add .\n\n# Kommit\ngit commit -m \"f1\"\n\n# Push els\u0151 alkalommal az \u00faj \u00e1g publik\u00e1l\u00e1s\u00e1hoz\ngit push --set-upstream origin megoldas\n\n# Push a tov\u00e1bbiakban, amikor az \u00e1g m\u00e1r nem \u00faj\ngit push\n</code></pre> </li> </ol>"},{"location":"tudnivalok/github/GitHub/#a-megoldas-beadasa","title":"A megold\u00e1s bead\u00e1sa","text":"<ol> <li> <p>Ha v\u00e9gezt\u00e9l a megold\u00e1ssal, ellen\u0151rizd a GitHub webes fel\u00fclet\u00e9n, hogy mindent felt\u00f6lt\u00f6tt\u00e9l-e. Ehhez a webes fel\u00fcleten v\u00e1ltanod kell az \u00e1gak k\u00f6z\u00f6tt.</p> <p></p> <p>Felt\u00f6lt\u00e9s a webes fel\u00fcleten</p> <p>Azt javasoljuk, hogy ne haszn\u00e1ld a GitHub f\u00e1jl felt\u00f6lt\u00e9s funkci\u00f3j\u00e1t. Ha valami hi\u00e1nyzik, a helyi git repository-ban p\u00f3told, \u00e9s kommitold majd pushold.</p> </li> <li> <p>Ha t\u00e9nyleg k\u00e9sz vagy, akkor nyiss egy pull request-et.</p> <p>Minek a pull request?</p> <p>Ez a pull request fogja \u00f6ssze a megold\u00e1sodat, \u00e9s annak \"v\u00e9geredm\u00e9ny\u00e9t\" mutatja. \u00cdgy a laborvezet\u0151nek nem az egyes kommitjaidat vagy f\u00e1jljaidat kell n\u00e9znie, hanem csak a relev\u00e1ns, v\u00e1ltozott r\u00e9szeket l\u00e1tja egyben. A pull request jelenti a feladatod bead\u00e1s\u00e1t is, \u00edgy ez a l\u00e9p\u00e9s nem hagyhat\u00f3 ki.</p> <p>A pull request nyit\u00e1s\u00e1hoz a GitHub webes fel\u00fclet\u00e9re kell menj. Itt, ha nem r\u00e9g pusholt\u00e1l, a GitHub fel is aj\u00e1nlja a pull request l\u00e9trehoz\u00e1s\u00e1t.</p> <p></p> <p>A pull request-et a fenti men\u00fcben is l\u00e9trehozhatod. Fontos, hogy a megfelel\u0151 brancheket v\u00e1laszd ki: <code>master</code>-be megy a <code>megoldas</code> \u00e1g.</p> <p></p> <p>Ha minden rendben siker\u00fclt, a men\u00fcben fent l\u00e1tod a kis \"1\" sz\u00e1mot a Pull request elem mellett, jelezve, hogy van egy nyitott pull request. DE M\u00c9G NEM V\u00c9GEZT\u00c9L!</p> <p></p> </li> <li> <p>A pull request hat\u00e1s\u00e1ra le fog futni egy \u00e9rt\u00e9kel\u00e9s. Ennek eredm\u00e9ny\u00e9t a pull request alatt kommentben fogod l\u00e1tni.</p> <p>Ez az \u00e9rt\u00e9kel\u00e9s minden labor eset\u00e9ben m\u00e1s lesz. Egyes laborokn\u00e1l a programodat lefuttatjuk, \u00e9s el\u0151zetes pontsz\u00e1mot is kapsz. M\u00e1s laborokn\u00e1l csak \"szintaktikai ellen\u0151rz\u00e9st\" v\u00e9gz\u00fcnk.</p> <p></p> <p>Ha a ki\u00e9rt\u00e9kel\u00e9s eredm\u00e9ny\u00e9vel kapcsolatban t\u00f6bb inform\u00e1ci\u00f3ra van sz\u00fcks\u00e9ged, mint amit itt l\u00e1tsz, a GitHub Actions webes fel\u00fclete seg\u00edts\u00e9g\u00fcl szolg\u00e1lhat. Err\u0151l itt tal\u00e1lsz egy r\u00f6vid ismertet\u0151t.</p> </li> <li> <p>Ha nem vagy megel\u00e9gedve a munk\u00e1ddal, akkor m\u00e9g jav\u00edthatsz rajta. Ehhez kommitolj \u00e9s pusholj \u00fajra. Ha tov\u00e1bbra is a megfelel\u0151 \u00e1gon dolgozol, akkor a pull request \u00fajb\u00f3l le fogja futtatni a ki\u00e9rt\u00e9kel\u00e9st. Arra k\u00e9r\u00fcnk, hogy MAXIMUM 5 alkalommal futtasd le a ki\u00e9rt\u00e9kel\u00e9st!</p> <p>Megold\u00e1s jav\u00edt\u00e1sa ki\u00e9rt\u00e9kel\u00e9s n\u00e9lk\u00fcl</p> <p>Ha \u00fagy l\u00e1tod, hogy a megold\u00e1sodat m\u00e9g jav\u00edtani akarod, \u00e9s nem szeretn\u00e9d, hogy mindig lefusson az \u00e9rt\u00e9kel\u00e9s, akkor \u00e1ll\u00edtsd \u00e1t a pull request-et a webes fel\u00fcleten draft \u00e1llapotra.</p> <p></p> <p>Ezzel az \u00e1llapottal jelzed, hogy m\u00e9g dolgozol. Kommitolj \u00e9s pusholj. Ilyenkor nem fog futni ki\u00e9rt\u00e9kel\u00e9s. Ha v\u00e9gezt\u00e9l, akkor vissza kell \u00e1ll\u00edtanod a pull request-et: menj a PR alj\u00e1ra \u00e9s kattints a \"Ready for review\" gombra. Ennek hat\u00e1s\u00e1ra vissza\u00e1ll a PR \u00e9s le fog futni az automata \u00e9rt\u00e9kel\u00e9s.</p> <p></p> <p>Maximum 5</p> <p>A maximum 5 alkalomba nem sz\u00e1moljuk bele az esetlegesen megszakadt, vagy tranziens hiba miatt sikertelen futtat\u00e1sokat. Ha viszont figyelmetlens\u00e9gb\u0151l, vagy sz\u00e1nd\u00e9kosan t\u00fall\u00e9ped az \u00f6t\u00f6t, akkor pontlevon\u00e1ssal szankcion\u00e1lunk. Arra k\u00e9r\u00fcnk, hogy bead\u00e1s el\u0151tt teszteld a megold\u00e1sod, ne a GitHub platformot \"dolgoztasd\" magad helyett!</p> </li> <li> <p>V\u00c9GEZET\u00dcL, ha k\u00e9sz vagy, a pull request-et rendeld a laborvezet\u0151dh\u00f6z. Ez a l\u00e9p\u00e9s felt\u00e9tlen\u00fcl fontos, ez jelzi a bead\u00e1st.</p> <p></p> <p>Pull request n\u00e9lk\u00fcl</p> <p>Ha nincs pull request-ed, vagy nincs a laborvezet\u0151h\u00f6z rendelve, akkor \u00fagy tekintj\u00fck, hogy m\u00e9g nem vagy k\u00e9szen, \u00e9s nem adtad be a megold\u00e1st.</p> <p>V\u00e9gezt\u00e9l</p> <p>Miut\u00e1n a laborvezet\u0151h\u00f6z rendelted a pull request-et, m\u00e1r ne m\u00f3dos\u00edts semmin. A laborvezet\u0151 \u00e9rt\u00e9kelni fogja a munk\u00e1dat, \u00e9s a pull request lez\u00e1r\u00e1s\u00e1val kommentben jelzi a v\u00e9geredm\u00e9nyt.</p> </li> </ol>"},{"location":"tudnivalok/github/GitHub/#kapott-eredmennyel-kapcsolatban-kerdes-vagy-reklamacio","title":"Kapott eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9s vagy reklam\u00e1ci\u00f3","text":"<p>Ha a feladatok \u00e9rt\u00e9kel\u00e9s\u00e9vel vagy az eredm\u00e9nnyel kapcsolatban k\u00e9rd\u00e9st tenn\u00e9l fel, vagy reklam\u00e1ln\u00e1l, haszn\u00e1ld a Pull Request kommentel\u00e9si lehet\u0151s\u00e9g\u00e9t erre. Annak \u00e9rdek\u00e9ben, hogy a laborvezet\u0151 biztosan \u00e9rtes\u00fclj\u00f6n a k\u00e9rd\u00e9sr\u0151l haszn\u00e1ld a <code>@n\u00e9v</code> mention funkci\u00f3t a laborvezet\u0151d megnevez\u00e9s\u00e9hez. Err\u0151l automatikusan kapni fog egy email \u00e9rtes\u00edt\u00e9st.</p> <p></p> <p>Reklam\u00e1ci\u00f3 csak indokl\u00e1ssal</p> <p>Ha nem \u00e9rtesz egyet az \u00e9rt\u00e9kel\u00e9ssel, a bizony\u00edt\u00e1s t\u00e9ged terhel, azaz al\u00e1 kell t\u00e1masztanod a reklam\u00e1ci\u00f3d (pl. annak le\u00edr\u00e1s\u00e1val, hogyan tesztelted a megold\u00e1sod, \u00e9s mi bizony\u00edtja a helyess\u00e9g\u00e9t).</p>"},{"location":"tudnivalok/github/contributing/","title":"Hozz\u00e1j\u00e1rul\u00e1s az anyaghoz","text":"<p>Az anyag terjedelm\u00e9b\u0151l adand\u00f3an apr\u00f3bb hib\u00e1k esetenk\u00e9nt hi\u00e1nyoss\u00e1gok jelentkezhetnek a laborokban. Ha egy ilyennel tal\u00e1lkozol \u00e9s \u00fagy d\u00f6ntesz szeretn\u00e9l seg\u00edteni hallgat\u00f3t\u00e1rsaidnak, azt a k\u00f6vetkez\u0151kben le\u00edrtak alapj\u00e1n tudod megtenni.</p> <p>Plusz pont jegyzet jav\u00edt\u00e1s\u00e9rt</p> <p>M\u00e1s tant\u00e1rgyak mint\u00e1j\u00e1ra itt is szeretn\u00e9nk plusz pontot adni a jegyzet open-source hozz\u00e1j\u00e1rul\u00e1sai\u00e9rt. Akik a t\u00e1rgyat jelenleg hallgatj\u00e1k, pontokat kaphatnak hozz\u00e1j\u00e1rul\u00e1saik\u00e9rrt.</p> <p>A f\u00e9l\u00e9v sor\u00e1n max 3 db plusz pontot lehet szerezni fejenk\u00e9nt olyan jav\u00edt\u00e1sok\u00e9rt, amik a trivi\u00e1lis 1-2 bet\u0171 elg\u00e9pel\u00e9sen t\u00fal \u00e9rdemben jav\u00edtanak a githubon tal\u00e1lhat\u00f3 labor jegyzetek min\u0151s\u00e9g\u00e9n. Pl.: jelent\u0151s mennyis\u00e9g\u0171 elg\u00e9pel\u00e9s jav\u00edt\u00e1sa, egy\u00e9rtelm\u0171s\u00edt\u00e9sek, illusztr\u00e1ci\u00f3k kieg\u00e9sz\u00edt\u00e9sek k\u00e9sz\u00edt\u00e9se vagy ak\u00e1r egy teljes kieg\u00e9sz\u00edt\u0151 jegyzet \u00edr\u00e1sa  (term\u00e9szetesen nem azonos pont\u00e9rt\u00e9kkel).</p> <p>Persze a pont n\u00e9lk\u00fcl az 1-1 bet\u0171s elg\u00e9pel\u00e9seket is sz\u00edvesen fogadjuk, ami bemeleg\u00edt\u00e9snek is t\u00f6k\u00e9letes.</p>"},{"location":"tudnivalok/github/contributing/#hibak-jelzese","title":"Hib\u00e1k jelz\u00e9se","text":"<p>Amennyiben hib\u00e1t tal\u00e1lsz az anyagban, vagy szeretn\u00e9d b\u0151v\u00edteni, de nem \u00e1ll m\u00f3dodban jav\u00edtani, nyithatsz egy issue-t amiben le\u00edrod a hib\u00e1t.</p> <ol> <li>N\u00e9zd meg, hogy valaki nem jelezte-e, amit szeretn\u00e9l.     Gyakran m\u00e1r l\u00e9tez\u0151 probl\u00e9m\u00e1kat tal\u00e1lnak, amire m\u00e1r van pull request,     \u00edgy miel\u0151tt b\u00e1rmit tenn\u00e9l n\u00e9zd meg valaki nem el\u0151z\u00f6tt-e meg</li> <li>Az issues tabon a new issue gombbal hozz l\u00e9tre egy \u00faj issue-t.     </li> <li>L\u00e1sd el a megfelel\u0151 c\u00edmk\u00e9kkel<ol> <li>A labor t\u00edpusa (<code>android</code> az androidos laborokn\u00e1l \u00e9s <code>web</code> a webes laborokn\u00e1l)</li> <li>A hiba t\u00edpusa (<code>clarification</code>, <code>typo</code>, <code>illustration</code> vagy <code>notes</code>)</li> </ol> </li> <li>\u00cdrd le, hogy mit k\u00e9ne tartalmaznia a jav\u00edt\u00e1snak</li> </ol> <p>Tip</p> <p>Az c\u00edme legyen r\u00f6vid \u00e9s l\u00e9nyegret\u00f6r\u0151, pl.: <code>Megfogalmaz\u00e1s pontos\u00edt\u00e1sa a 4. laborban</code> vagy <code>A 6. laborban a le\u00edrt k\u00f3d hib\u00e1san m\u0171k\u00f6dik Android 12-n</code></p> <p>A issue descriptionj\u00e9ben pedig fejtsd ki, hol tal\u00e1lhat\u00f3 a hi\u00e1nyoss\u00e1g, illetve ha van r\u00e1 \u00f6tleted, hogy lehetne orvosolni ezt. Ha ezeken t\u00fal m\u00e9g screenshotot is tudsz mell\u00e9kelni, az nagyban megseg\u00edti a probl\u00e9ma mihamarabbi jav\u00edt\u00e1s\u00e1t.</p> <p>Warning</p> <p>A github issues nem a laborfeladatok megold\u00e1s\u00e1val kapcsolatos probl\u00e9m\u00e1k helye, \u00edgy a \"Nem tudom megoldani hogy az \u00e9rtes\u00edt\u00e9s meg\u00e9rkezzen\" jelleg\u0171 probl\u00e9m\u00e1kat ne itt jelezz\u00e9tek, erre vannak a laboralkalmak.</p>"},{"location":"tudnivalok/github/contributing/#valtoztatasok-javaslasa","title":"V\u00e1ltoztat\u00e1sok javasl\u00e1sa","text":"<p>Amennyiben a hozz\u00e1j\u00e1rul\u00e1sod meg tudod val\u00f3s\u00edtani ind\u00edts pull requestet</p> <ol> <li> <p>Forkold a repository-t a Githubon jobb fels\u0151 sarokban tal\u00e1lhat\u00f3 gombbal     </p> </li> <li> <p>V\u00e9gezd el a v\u00e1ltoztat\u00e1sokat.</p> <p>Tip</p> <p>Ez nagyon hasonl\u00f3an m\u0171k\u00f6dik a laborok beada\u00e1s\u00e1hoz</p> <ol> <li> <p>Hozz l\u00e9tre egy branchet a saj\u00e1t forkodon, amin a v\u00e1ltoztat\u00e1sokat el fogod v\u00e9gezni.</p> </li> <li> <p>Ezen a branchen k\u00e9sz\u00edtsd el a jav\u00edt\u00e1sokat</p> </li> <li> <p>Ellen\u0151rizd, hogy ne ker\u00fclj\u00f6n bele a commitba olyan file, amit az editor gener\u00e1lt (pl.: <code>.idea</code> mappa) illetve olyan file aminek nem k\u00e9ne kiker\u00fclnie, pl.: Github Private Access Token</p> </li> <li> <p>Ha k\u00e9sz vagy a laborok bead\u00e1s\u00e1hoz hasonl\u00f3an ind\u00edts egy pull requestet a <code>VIAUAD02/laborok</code> <code>master</code> branch\u00e9re.</p> </li> <li> <p>L\u00e1sd el a megfelel\u0151 c\u00edmk\u00e9kkel</p> <ol> <li>A labor t\u00edpusa (<code>android</code> az androidos laborokn\u00e1l \u00e9s <code>web</code> a webes laborokn\u00e1l)</li> <li>A hiba t\u00edpusa (<code>clarification</code>, <code>typo</code>, <code>illustration</code> vagy <code>notes</code>)</li> </ol> </li> <li>A le\u00edr\u00e1sban r\u00e9szletezd v\u00e1ltoztat\u00e1sok ok\u00e1t.     Ne felejtsd el bele\u00edrni a NEPTUN k\u00f3dod a le\u00edr\u00e1sba, mert \u00edgy fogjuk tudni megadni a pontokat.</li> </ol> </li> <li> <p>Valaki, akinek hozz\u00e1f\u00e9r\u00e9se van a repositoryhoz, ellen\u0151rzi a v\u00e1ltoztat\u00e1sok sz\u00fcks\u00e9gess\u00e9g\u00e9t, \u00e9s elb\u00edr\u00e1lja, hogy val\u00f3ban beker\u00fclhet az anyagba.</p> </li> <li>A v\u00e1ltoztat\u00e1sokra review-t ind\u00edtunk \u00e9s ha kell m\u00f3dos\u00edt\u00e1sokat fogunk k\u00e9rni.</li> <li>Ha minden k\u00e9rt v\u00e1ltoztat\u00e1s megt\u00f6rt\u00e9nt, a hozz\u00e1j\u00e1rul\u00e1sod beleker\u00fcl az anyagba.</li> </ol>"},{"location":"tudnivalok/github/contributing/#code-style","title":"Code style","text":"<ul> <li>Kotlin: a hivatalos style guide alapj\u00e1n</li> <li>HTML &amp; CSS &amp; JavaScript: A Prettier style guide alapj\u00e1n</li> <li>Markdown: Mivel az alap spec nem mindig a legtiszt\u00e1bban \u00e9rthet\u0151, a markdownlint szab\u00e1lyai alapj\u00e1n, az n\u00e9h\u00e1ny kiv\u00e9tel\u00e9vel. Ezeket a <code>.markdownlint.yaml</code>-ben tal\u00e1lod, ha VSCode-ot haszn\u00e1lsz automatikusan alkalmazza \u0151ket az editor \u00e9s jelzi ha nem megfelel\u0151 amit \u00edrsz.</li> </ul> <p>Ezek a st\u00edlusok a t\u00e1rgyban aj\u00e1nlott editorokban k\u00f6nnyen be\u00e1ll\u00edthat\u00f3ak.</p>"},{"location":"tudnivalok/github/contributing/#vscode","title":"VSCode","text":"<p>Aj\u00e1nlott extension\u00f6k:</p> <ul> <li><code>yzhang.markdown-all-in-one</code>: MD szinkroniz\u00e1lt live preview</li> <li><code>DavidAnson.vscode-markdownlint</code>: MD form\u00e1z\u00e1s, szab\u00e1lyok stb.</li> <li>Prettier: HTML+CSS form\u00e1z\u00f3</li> <li>Error Lens: Kiemeli a hib\u00e1kat hogy gyorsabben megtal\u00e1ljuk \u0151ket</li> </ul> <p>Az editor be\u00e1ll\u00edt\u00e1s\u00e1hoz nyisd meg a repo-t a gy\u00f6ker\u00e9ben VSCode-al. A VSCode fel fogja aj\u00e1nlani a k\u00e9t markdown extension-t.</p> <p></p> <p>Ha ez megt\u00f6rt\u00e9nt, nyiss meg egy markdown dokumentumot, \u00e9s haszn\u00e1ld a Ctrl+Shift+P shortcutot, a command palette megnyit\u00e1s\u00e1hoz.</p> <p>Tip</p> <p>A command palette a VSCode parancsaihoz ny\u00fajt hozz\u00e1f\u00e9r\u00e9st, autocompleteeli a parancsokat \u00e9s egy minim\u00e1lis GUI-t is biztos\u00edt.</p> <p>A command palette-be keress\u00fck meg a <code>Format Document With...</code> men\u00fcpontot \u00e9s v\u00e1lasszuk ki. Ekkor egy almen\u00fcbe dob az editor \u00e9s kiv\u00e1laszthatjuk hogy melyik form\u00e1z\u00f3val form\u00e1zzuk a MD dokumentumokat. Legalul lesz egy <code>Configure Default Formatter</code>, v\u00e1lasszuk ezt. Ezut\u00e1n v\u00e1lasszuk a <code>markdownlint</code> extensiont, \u00e9s k\u00e9szen vagyunk.</p> <p>Megfelel\u0151 formatter kiv\u00e1laszt\u00e1sa</p> <p>Ne v\u00e1laszd ki a prettiert formatterk\u00e9nt, mert elt\u00f6ri a sz\u00f6vegbubor\u00e9kokat.</p> <p>Ezen fel\u00fcl \u00e9rdemes lehet bekapcsolni a ment\u00e9s el\u0151tti form\u00e1z\u00e1st.</p> <p>A Ctrl+, shortcuttal megnyitjuk a be\u00e1ll\u00edt\u00e1sokat, \u00e9s r\u00e1keres\u00fcnk arra, hogy format on save. Itt kipip\u00e1ljuk a checkboxot \u00e9s k\u00e9szen vagyunk.</p> <p>Ha ehhez nem lenne t\u00fcrelmed, itt a json amit a <code>settings.json</code>-ba illesztve be\u00e1ll\u00edt\u00f3dik minden.</p> <pre><code>{\n\"[markdown]\": {\n\"editor.defaultFormatter\": \"DavidAnson.vscode-markdownlint\",\n\"editor.formatOnSave\": true\n}\n}\n</code></pre>"},{"location":"tudnivalok/github/contributing/#ajanlasok","title":"Aj\u00e1nl\u00e1sok","text":""},{"location":"tudnivalok/github/contributing/#android","title":"Android","text":"<ul> <li>Az androidos Kotlin \u00e9s XML fileokat illetve k\u00f3dr\u00e9szleteket Android Studioban form\u00e1zva \u00e9rdemes hozz\u00e1adni az anyaghoz</li> <li>Ahhoz hogy biztosan form\u00e1zva legyenek a fileok haszn\u00e1ld a Ctrl+Alt+L shortcutot</li> </ul>"},{"location":"tudnivalok/github/contributing/#markdown-fileok","title":"Markdown Fileok","text":"<ul> <li>A markdown fileokat se az Android Studio se a Visual Studio Code nem rendereli alaphelyzetben.   Erre a feladatra a k\u00f6vetkez\u0151 extension\u00f6ket/pluginokat tudom aj\u00e1nlani:</li> <li>VSCode: <code>yzhang.markdown-all-in-one</code></li> <li>Android Studio: Markdown Editor</li> </ul>"},{"location":"tudnivalok/laborvezetoknek/","title":"Laborvezet\u0151knek","text":"<p>Webes Laborvezet\u0151/demonstr\u00e1tor lenn\u00e9l? Az al\u00e1bbiakat \u00e9rdemes tudnod.</p>"},{"location":"tudnivalok/laborvezetoknek/#laborvezeto-feladatai","title":"Laborvezet\u0151 feladatai","text":"<p>A laborvezet\u0151 a t\u00e1rgy oktat\u00e1s\u00e1ban seg\u00edt a webes laborok megtart\u00e1sa \u00e9s a sz\u00e1monk\u00e9r\u00e9sek sor\u00e1n. A feladat 2022 \u0151sszel az al\u00e1bbiakb\u00f3l \u00e1ll.</p> <p>F\u00e9l\u00e9v sor\u00e1n \u00f6sszesen 6 darab labor szem\u00e9lyes megtart\u00e1sa. Ez a sz\u00e1m felszorz\u00f3dhat ha t\u00f6bb csoportot v\u00e1llalsz egy h\u00e9ten. Ez a szem\u00e9lyes labor fix \u00f3rarendi id\u0151ben van, 2*45 perces, \u00e9s sz\u00e1m\u00edt\u00f3g\u00e9p laborban tartjuk. A szem\u00e9lyes laborok r\u00e9szben vezetettek kiadott seg\u00e9dlet alapj\u00e1n, r\u00e9szben pedig hallgat\u00f3i \u00f6n\u00e1ll\u00f3 munk\u00e1b\u00f3l \u00e1llnak. A laborvezet\u0151 feladata a laborra val\u00f3 felk\u00e9sz\u00fcl\u00e9s, a labor megtart\u00e1sa, ennek sor\u00e1n a sz\u00fcks\u00e9ges h\u00e1tt\u00e9rismeretek r\u00f6vid \u00e1tism\u00e9tl\u00e9se, \u00e9s a hallgat\u00f3k seg\u00edt\u00e9se a labor sor\u00e1n.</p> <p>2022 \u0151szi f\u00e9l\u00e9v sor\u00e1n a laborok \u00f3rarendi id\u0151pontjai:</p> <p>TBD</p> <p>Otthon teljes\u00edtett laborok sor\u00e1n seg\u00edts\u00e9gny\u00fajt\u00e1s. A szem\u00e9lyes laborok mellett csoportonk\u00e9nt van 3 darab otthon elv\u00e9gzett labor, amit a hallgat\u00f3k h\u00e1zi feladatk\u00e9nt \u00f6n\u00e1ll\u00f3an teljes\u00edtenek egy-egy k\u00e9thetes id\u0151ablakon bel\u00fcl. Ennek sor\u00e1n, ha sz\u00fcks\u00e9ges, a laborvezet\u0151 seg\u00edts\u00e9get ny\u00fajt a hallgat\u00f3knak k\u00e9rd\u00e9s \u00e9s probl\u00e9ma eset\u00e9n.</p> <p>Labor feladatok \u00e9rt\u00e9kel\u00e9se. A f\u00e9l\u00e9v sor\u00e1n csoportonk\u00e9nt \u00f6sszesen 6 webes labor van, mindegyiket jeggyel \u00e9rt\u00e9kelj\u00fck. A laborok bead\u00e1sa GitHub pull request-ek form\u00e1j\u00e1ban t\u00f6rt\u00e9nik. A laborok ki\u00e9rt\u00e9kel\u00e9se r\u00e9szben automatikusan t\u00f6rt\u00e9nik: egy szoftver lefuttatja \u00e9s ellen\u0151rzi a beadott munk\u00e1t, ahol ez lehets\u00e9ges. A laborvezet\u0151 feladata a beadott h\u00e1zi feladat formai ellen\u0151rz\u00e9se: k\u00e9rt k\u00e9perny\u0151k\u00e9pek megfelelnek-e az el\u0151\u00edr\u00e1soknak \u00e9s konzisztensek-e a beadott forr\u00e1sk\u00f3ddal.</p>"},{"location":"tudnivalok/laborvezetoknek/#demonstratorsag","title":"Demonstr\u00e1tors\u00e1g","text":"<p>Hallgat\u00f3 vagy de szeretn\u00e9l bekapcsol\u00f3dni az oktat\u00e1sba? Szeretn\u00e9d kipr\u00f3b\u00e1lni magad laborvezet\u0151k\u00e9nt? Szeretsz magyar\u00e1zni? Elv\u00e9gezted ezt a t\u00e1rgyat \u00f6t\u00f6ssel? V\u00e1runk demonstr\u00e1tork\u00e9nt!</p> <p>A TVSZ p\u00e1r k\u00f6vetelm\u00e9nyt szab demonstr\u00e1toroknak: (l\u00e1sd aktu\u00e1lis TVSZ 165.\u00a7):</p> <p>(5) A demonstr\u00e1tori p\u00e1ly\u00e1zat beny\u00fajt\u00e1s\u00e1nak felt\u00e9tele, hogy a p\u00e1ly\u00e1z\u00f3</p> <p>a) a demonstr\u00e1tori jogviszonnyal \u00e9rintett f\u00e9l\u00e9vben rendelkezzen akt\u00edv hallgat\u00f3i jogviszonnyal;</p> <p>b) rendelkezzen alapk\u00e9pz\u00e9sben vagy osztatlan k\u00e9pz\u00e9sben szerzett oklev\u00e9llel;</p> <p>c) alapk\u00e9pz\u00e9sben vagy osztatlan k\u00e9pz\u00e9sben szerzett oklev\u00e9l hi\u00e1ny\u00e1ban rendelkezzen legal\u00e1bb annyiszor huszon\u00f6t teljes\u00edtett kredittel, ah\u00e1ny lez\u00e1rt akt\u00edv f\u00e9l\u00e9ve van \u00e9s halmozott s\u00falyozott tanulm\u00e1nyi \u00e1tlageredm\u00e9nye haladja meg a 3,50 \u00e9rt\u00e9ket; \u00e9s</p> <p>d) ne \u00e1lljon fegyelmi b\u00fcntet\u00e9s hat\u00e1lya alatt.</p> <p>Ha \u00e9rdekel a lehet\u0151s\u00e9g, megfelelsz a fenti k\u00f6vetelm\u00e9nyeknek, \u00e9s az \u00f3rarendedbe belef\u00e9r a labor (l\u00e1sd az id\u0151pontokat fentebb), keresd a t\u00e1rgyfelel\u0151st.</p>"},{"location":"tudnivalok/laborvezetoknek/#tudnivalok-a-laborok-megtartasahoz","title":"Tudnival\u00f3k a laborok megtart\u00e1s\u00e1hoz","text":"<p>A t\u00e1rgy alapk\u00e9pz\u00e9s (BSc) 5. f\u00e9l\u00e9v\u00e9ben k\u00f6telez\u0151 t\u00e1rgy. Ezt azt jelenti, hogy a hallgat\u00f3k szoftverfejleszt\u00e9si alapismeretekkel rendelkeznek, mivel a megel\u0151z\u0151 f\u00e9l\u00e9vben teljes\u00edtett\u00e9k a Szoftvertechnik\u00e1k c. t\u00e1rgyat. A t\u00e1rgyunk c\u00e9lja a webes tud\u00e1s alapszint\u0171 ismereteinek megismer\u00e9se \u00e9s gyakorl\u00e1sa. A laborok sor\u00e1n \u00faj technol\u00f3gi\u00e1kkal foglalkozunk.</p>"},{"location":"tudnivalok/laborvezetoknek/#oktatas-modja","title":"Oktat\u00e1s m\u00f3dja","text":"<p>A laborokon elv\u00e1rt a r\u00e9szv\u00e9tel, de ezt is be lehet fejezni otthon. Minden laboron \u00e1ltal\u00e1ban az el\u00e9gs\u00e9ges szintig vezetett, ezen fel\u00fcl \u00f6n\u00e1ll\u00f3 munk\u00e1t v\u00e1runk el, \u00e9s az elv\u00e9gzett munka oszt\u00e1lyz\u00e1sra ker\u00fcl. A laborok anyaga jel\u00f6li, mi a k\u00f6z\u00f6s munka. A laborvezet\u0151 seg\u00edt elindulni a feladatokkal, \u00e1tbesz\u00e9lve a k\u00f6z\u00f6s feladatokat, majd a hallgat\u00f3k ut\u00e1na \u00f6n\u00e1ll\u00f3an dolgoznak. Mivel a labor feladatok megold\u00e1s\u00e1ra jegyet adunk, elv\u00e1rjuk a hallgat\u00f3t\u00f3l az \u00f6n\u00e1ll\u00f3 munkav\u00e9gz\u00e9st.</p>"},{"location":"tudnivalok/laborvezetoknek/#adminisztrativ-tudnivalok","title":"Adminisztrat\u00edv tudnival\u00f3k","text":"<ul> <li>A szem\u00e9lyes laborokat \u00f3ra 15-kor kezdj\u00fck pontosan \u00e9s a 2*45 percet egyben, sz\u00fcnet n\u00e9lk\u00fcl tartjuk. A k\u00e9s\u0151 hallgat\u00f3kat els\u0151 alkalommal figyelmeztess\u00fck. Ha t\u00f6bbsz\u00f6r el\u0151fordul vagy zavar\u00f3an sokat k\u00e9sik (&gt;5 perc), akkor k\u00fcldj\u00e9tek el (TVSZ erre jogot ad!).</li> <li>A laborok elej\u00e9n Moodle teszt form\u00e1j\u00e1ban beugr\u00f3 vagy kisZH \u00edratand\u00f3, aminek a tisztas\u00e1g\u00e1t fel\u00fcgyelni kell. Nem haszn\u00e1lhat\u00f3 seg\u00e9danyag, \u00e9s \u00f6n\u00e1ll\u00f3 munka az elv\u00e1rt.</li> <li>A labor teljes\u00edt\u00e9s\u00e9nek adminisztr\u00e1l\u00e1sa Moodle-ben t\u00f6rt\u00e9nik. Szem\u00e9lyes labor eset\u00e9n a teljes\u00edt\u00e9s a laboron val\u00f3 megjelen\u00e9st, \u00e9s a munka veletek t\u00f6rt\u00e9n\u0151 elv\u00e9gz\u00e9s\u00e9t jelenti, majd a v\u00e9gs\u0151 munka bead\u00e1s\u00e1t. Teh\u00e1t szem\u00e9lyes labor eset\u00e9n a hallgat\u00f3 nem s\u00e9t\u00e1lhat ki a labor k\u00f6zep\u00e9n \u00e9s nem foglalkozhat m\u00e1ssal, csak a laborral. Eseti probl\u00e9m\u00e1kat az\u00e9rt kezelj\u00fcnk le, pl. ZH-ja van m\u00e1shol, stb. Egy-egy kiv\u00e9tel belef\u00e9r. A beugr\u00f3/kisZH egyben jelenl\u00e9t is, viszont ellen\u0151rizni kell, hogy ne legyen olyan hallgat\u00f3, aki t\u00e1volr\u00f3l \u00edrta meg a Moodle tesztet.</li> <li>Ha az \u00f3r\u00e1n t\u00f6bb ember jelenne meg, mint ah\u00e1ny g\u00e9p van (hi\u00e1nyz\u00e1s p\u00f3tl\u00e1sa pl.), vagy egy g\u00e9p nem m\u0171k\u00f6dik, akkor akinek nem jut hely, le\u00fcl valaki mell\u00e9.</li> <li>A csoportok k\u00f6z\u00f6tt nincs ad-hoc \u00e1tj\u00e1r\u00e1s. Ha valaki jelzi, hogy nem tud r\u00e9szt venni egy laboron, akkor el\u0151re/ut\u00f3lag/ugyanazon a h\u00e9ten egy m\u00e1sik csoportban p\u00f3tolhat (ha van r\u00e1 m\u00f3d). Ennek a megszervez\u00e9s\u00e9t alapvet\u0151en a hallgat\u00f3 bonyol\u00edtsa (n\u00e9zze meg, mikor van m\u00e9g labor azonos anyagb\u00f3l, \u00e9s egyeztessen a t\u00e1rgyfelel\u0151ssel, vagy a laborvezet\u0151kkel), de seg\u00edts\u00fck, ha kell.</li> </ul>"},{"location":"tudnivalok/laborvezetoknek/#anyagok-elerhetosege","title":"Anyagok el\u00e9rhet\u0151s\u00e9ge","text":"<ul> <li>A t\u00e1rgy webes laborjainak minden anyaga ezen az oldalon \u00e9rhet\u0151 el. Ha hib\u00e1t, elg\u00e9pel\u00e9st tal\u00e1lsz benne, arra k\u00e9r\u00fcnk, hogy jav\u00edtsd: minden anyag jobb fels\u0151 sark\u00e1ban van egy kis ceruza ikon, jav\u00edtsd a hib\u00e1t, \u00e9s k\u00fcldj PR-t.</li> </ul>"},{"location":"tudnivalok/laborvezetoknek/#belepesek","title":"Bel\u00e9p\u00e9sek","text":"<p>A labor termekhez kulcsra \u00e9s/vagy k\u00e1rty\u00e1ra van sz\u00fcks\u00e9g. Ezeket a titk\u00e1rs\u00e1gon (QB207) kell k\u00e9rni. I \u00e9p\u00fclethez kell a teremkulcs, ill. a folyos\u00f3hoz sz\u00fcks\u00e9g van k\u00e1rty\u00e1ra is (kiv\u00e9ve, akinek van ilyenje). Q \u00e9p\u00fclet laborjaihoz hozz\u00e1f\u00e9r\u00e9st k\u00fcl\u00f6n szervezz\u00fck. Demonstr\u00e1torok: mindezt megmutatom els\u0151 alkalommal.</p> <p>G\u00e9pekre: emailben k\u00fcld\u00f6m f\u00e9l\u00e9v elej\u00e9n. Kis- \u00e9s nagybet\u0171 sz\u00e1m\u00edt! P\u00e1r elg\u00e9pel\u00e9s ut\u00e1n le lesz tiltva az account!</p>"},{"location":"tudnivalok/laborvezetoknek/#beadott-labor-megoldas-ertekelese","title":"Beadott labor megold\u00e1s \u00e9rt\u00e9kel\u00e9se","text":"<p>A laborok megold\u00e1s\u00e1t adott hat\u00e1rid\u0151ig kell beadni GitHub-on. Ennek pontos menete a hallgat\u00f3 szemsz\u00f6g\u00e9b\u0151l itt elolvashat\u00f3.</p> <p>Ahhoz, hogy hozz\u00e1f\u00e9rj a GitHub-on a beadott megold\u00e1sokhoz (\u00e9s ahhoz, hogy a hallgat\u00f3k ezt hozz\u00e1d tudj\u00e1k rendelni), kell egy GitHub account. A GitHub nevedet \u00edrd meg a t\u00e1rgyfelel\u0151snek, \u00e9s felvesz GitHub-on a https://www.github.com/VIAUAD02 organization-be.</p>"},{"location":"tudnivalok/laborvezetoknek/#mikor-kell-ertekelni-a-labort","title":"Mikor kell \u00e9rt\u00e9kelni a labort?","text":"<p>A laborokat a hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n kell \u00e9rt\u00e9kelni. A hat\u00e1rid\u0151 el\u0151tt a megold\u00e1sokra nem kell r\u00e1n\u00e9zni, kiv\u00e9ve, ha ezt a hallgat\u00f3 k\u00e9ri. K\u00e9rd\u00e9ssel a hallgat\u00f3 direktben kell megkeressen (pl. emailben vagy GitHub-on).</p>"},{"location":"tudnivalok/laborvezetoknek/#hol-kell-ertekelni-a-labort","title":"Hol kell \u00e9rt\u00e9kelni a labort?","text":"<p>A hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n a feladatod a hozz\u00e1d rendelt pull request-ek \u00e9rt\u00e9kel\u00e9se. A hallgat\u00f3 azzal adja be a labort, hogy a pull request-et a laborvezet\u0151j\u00e9hez rendeli. Ezeket a GitHub keres\u0151j\u00e9vel a legegyszer\u0171bb megtal\u00e1lni: https://github.com/pulls?q=is%3Aopen+is%3Apr+org%3AVIAUAD02+assignee%3A%40me+.</p> <p>Alternat\u00edvak\u00e9nt a GitHub \u00e9rtes\u00edt\u0151 fel\u00fclet\u00e9t is lehet haszn\u00e1lni a https://github.com/notifications c\u00edmen, itt minden hozz\u00e1d rendelt, vagy review-ra v\u00e1r\u00f3 PR megjelenik.</p>"},{"location":"tudnivalok/laborvezetoknek/#hogyan-kell-ertekelni-a-labort","title":"Hogyan kell \u00e9rt\u00e9kelni a labort?","text":"<p>A PR-eket egyes\u00e9vel kell megnyitni, \u00e9s meg kell n\u00e9zni a PR komment fel\u00fclet\u00e9n az eredm\u00e9nyt. Itt l\u00e1that\u00f3 lesz a lefuttatott \u00e9rt\u00e9kel\u00e9s eredm\u00e9nye, valamint a k\u00e9perny\u0151k\u00e9pek. Emellett meg kell n\u00e9zni a forr\u00e1sk\u00f3dot is.</p> <p></p> <p>Automatikus \u00e9rt\u00e9kel\u00e9s eset\u00e9n (ami nem minden laborn\u00e1l van) a forr\u00e1sk\u00f3dot nem sz\u00fcks\u00e9ges bet\u0171r\u0151l bet\u0171re megn\u00e9zni - a r\u00e9szletes ellen\u0151rz\u00e9st elv\u00e9gzi az automata. A laborvezet\u0151 feladata a k\u00e9perny\u0151k\u00e9pek ellen\u0151rz\u00e9se, valamint annak eld\u00f6nt\u00e9se, hogy a forr\u00e1sk\u00f3d konzisztens-e a kapott eredm\u00e9nnyel, \u00e9s nincs-e benne olyan k\u00f3dr\u00e9szlet, amely ugyan m\u0171k\u00f6dik, de kifejezetten rosszul oldja meg a probl\u00e9m\u00e1t. Amely laborn\u00e1l nincs automata \u00e9rt\u00e9kel\u00e9s, ott t\u00f6bb munka h\u00e1rul a laborvezet\u0151re, alaposabban meg kell n\u00e9zni a megold\u00e1st.</p> <p>A feladatok minta megold\u00e1sa itt \u00e9rhet\u0151 el: https://github.com/VIAUAD02?q=labor-megoldas. Ezek csak lehets\u00e9ges megold\u00e1sok, a hallgat\u00f3 megold\u00e1sa nem kell ezzel egyezzen.</p> <p>Az \u00e9rt\u00e9kel\u00e9s v\u00e9gezt\u00e9vel:</p> <ul> <li>Ha az automata \u00e9rt\u00e9kel\u00e9s hely\u00e9nval\u00f3 volt, akkor le kell z\u00e1rni a PR-t a <code>/ahk ok</code> parancs be\u00edr\u00e1s\u00e1val egy kommentbe. Ennek hat\u00e1s\u00e1ra a PR j\u00f3v\u00e1hagy\u00e1sra ker\u00fcl \u00e9s merge-elve lesz.</li> <li>Ha az automata \u00e9rt\u00e9kel\u00e9st fel\u00fclb\u00edr\u00e1lod pontsz\u00e1mban, akkor a <code>/ahk ok 5 2</code> parancsot kell kiadni, ahol is az els\u0151 sz\u00e1m az \u00f6sszes nem iMSc feladatra kapott pontsz\u00e1m \u00f6sszege, a m\u00e1sodik sz\u00e1m pedig az iMsc feladatra kapott pontsz\u00e1m. Az ut\u00f3bbi sz\u00e1m elhagyhat\u00f3, ha nincs megoldva az iMsc feladat.</li> <li>Ha nincs automata \u00e9rt\u00e9kel\u00e9s, akkor az el\u0151bbi szintaktika szerint ki kell adni a <code>/ahk ok 5 2</code> parancsot a megfelel\u0151 pontsz\u00e1mokkal.</li> <li>Ha a beadott megold\u00e1s nem fogadhat\u00f3 el (hat\u00e1rid\u0151n t\u00fal \u00e9rkezett, a k\u00e9pek nem t\u00e1masztj\u00e1k al\u00e1 a megold\u00e1st, a forr\u00e1sk\u00f3d elfogadhatatlan, stb.), akkor ki kell adni a <code>/ahk ok 0 0</code> parancsot. Ezzel fogjuk r\u00f6gz\u00edteni, hogy az automata \u00e9rt\u00e9kel\u0151 \u00e1ltal adott pontsz\u00e1mokat fel\u00fcl\u00edrjuk.</li> </ul> <p>A fenti parancs egy kommentben tetsz\u0151leges helyen szerepelhet, amennyiben egy sorban csak ez a parancs szerepel. \u00cdrhatunk teh\u00e1t a hallgat\u00f3nak megjegyz\u00e9st, majd utols\u00f3 sorba \u00edrjuk ezt a parancsot. \u00c9rdemes a hallgat\u00f3nak legal\u00e1bb egy mondatot \u00edrni, hogy l\u00e1ssa, elfogadtuk a megold\u00e1st. Ha m\u00e9g sincs megjegyz\u00e9s\u00fcnk a hallgat\u00f3 fel\u00e9, akkor csak egysoros komment kell ezzel a paranccsal.</p> <p></p> <p>A parancs t\u00f6bbsz\u00f6r is kiadhat\u00f3, teh\u00e1t elrontott pontsz\u00e1mot lehet jav\u00edtani az \u00fajb\u00f3li kiad\u00e1ssal.</p> <p>A parancs hat\u00e1s\u00e1t l\u00e1tjuk is ut\u00e1na PR-ben:</p> <ul> <li>a kommentre a parancs felismer\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9s\u00e9re \u00e9rkezik egy reakci\u00f3,</li> <li>a PR v\u00e1ltoztat\u00e1sai j\u00f3v\u00e1hagy\u00e1sra ker\u00fclnek (ez sz\u00fcks\u00e9ges a mergel\u00e9shez a protected branch miatt),</li> <li>a a PR mergel\u00e9sre ker\u00fcl - ezzel lez\u00e1rt \u00e1llapotba ker\u00fcl a PR \u00e9s \u00edgy elt\u0171nik a teend\u0151k list\u00e1j\u00e1r\u00f3l,</li> <li>\u00e9s v\u00e9g\u00fcl elment\u00e9sre ker\u00fcl az eredm\u00e9ny a h\u00e1tt\u00e9rben - ezt m\u00e1r k\u00f6zvetlen\u00fcl nem l\u00e1tjuk.</li> </ul> <p></p>"},{"location":"tudnivalok/laborvezetoknek/#problemak-es-megoldasuk","title":"Probl\u00e9m\u00e1k \u00e9s megold\u00e1suk","text":"<p>Nem futott le az automata \u00e9rt\u00e9kel\u00e9s.</p> <ul> <li>Lehet, hogy a hallgat\u00f3 draft m\u00f3dban hagyta a PR-t, ezt vissza kell \u00e1ll\u00edtani. A PR alj\u00e1n megjelenik ilyenkor egy Ready for review gomb.</li> <li>Ha sikertelen volt a ki\u00e9rt\u00e9kel\u00e9s, meg lehet ism\u00e9telni. Ez seg\u00edt a tranziens hib\u00e1kon (ritka eset). Ehhez tegy\u00e9l egy eval nev\u0171 labelt-t a PR-re (\u00faj label-k\u00e9nt kell l\u00e9trehozni).</li> </ul> <p>T\u00f6bb, mint 5-sz\u00f6r futott a ki\u00e9rt\u00e9kel\u00e9s. Ezt pontlevon\u00e1ssal szankcion\u00e1ljuk. Els\u0151 alkalommal eltekinthet\u00fcnk t\u0151le, de mindenk\u00e9ppen t\u00e1j\u00e9koztassuk a hallgat\u00f3t.</p> <p>Hiba van a ki\u00e9rt\u00e9kel\u0151 alkalmaz\u00e1sban. El\u0151fordulhat. Keresd a t\u00e1rgyfelel\u0151st, vagy jav\u00edtsd a hib\u00e1t (a ki\u00e9rt\u00e9kel\u0151 programok itt vannak: TBD).</p>"},{"location":"tudnivalok/mobillaborvezetoknek/","title":"Mobil Laborvezet\u0151knek","text":"<p>Oktat\u00f3i tudnival\u00f3k gy\u0171jtem\u00e9nye. B\u00e1rmi k\u00e9rd\u00e9s eset\u00e9n keress\u00e9tek Ekler P\u00e9tert (ekler.peter@vik.bme.hu), Pom\u00e1zi Kriszti\u00e1nt (pomazi.krisztian@vik.bme.hu) vagy Gazdi L\u00e1szl\u00f3t (gazdi.laszlo@vik.bme.hu).</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#laborok","title":"Laborok","text":"<p>A t\u00e1rgy alapk\u00e9pz\u00e9s (BSc) 5. f\u00e9l\u00e9v\u00e9ben k\u00f6telez\u0151 t\u00e1rgy. Ezt azt jelenti, hogy a hallgat\u00f3k szoftverfejleszt\u00e9si alapismeretekkel rendelkeznek, mivel a megel\u0151z\u0151 f\u00e9l\u00e9vben teljes\u00edtett\u00e9k a Szoftvertechnik\u00e1k c. t\u00e1rgyat. A t\u00e1rgyunk c\u00e9lja a mobil tud\u00e1s alapszint\u0171 ismereteinek megismer\u00e9se \u00e9s gyakorl\u00e1sa. A laborok sor\u00e1n \u00faj technol\u00f3gi\u00e1kkal foglalkozunk.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#oktatas-modja","title":"Oktat\u00e1s m\u00f3dja","text":"<p>A laborokon elv\u00e1rt a r\u00e9szv\u00e9tel, de ezt is be lehet fejezni otthon. Minden laboron \u00e1ltal\u00e1ban a j\u00f3 szintig vezetett, ezen fel\u00fcl \u00f6n\u00e1ll\u00f3 munk\u00e1t v\u00e1runk el, \u00e9s az elv\u00e9gzett munka oszt\u00e1lyz\u00e1sra ker\u00fcl. A laborok anyaga jel\u00f6li, mi a k\u00f6z\u00f6s munka. A laborvezet\u0151 seg\u00edt elindulni a feladatokkal, \u00e1tbesz\u00e9lve a k\u00f6z\u00f6s feladatokat, majd a hallgat\u00f3k ut\u00e1na \u00f6n\u00e1ll\u00f3an dolgoznak. Mivel a labor feladatok megold\u00e1s\u00e1ra jegyet adunk, elv\u00e1rjuk a hallgat\u00f3t\u00f3l az \u00f6n\u00e1ll\u00f3 munkav\u00e9gz\u00e9st.</p> <p>A laborokat mindig \u00e9rdemes otthon el\u0151tte kipr\u00f3b\u00e1lni, aki bizonytalan az a laborterembe is be tud menni. A tansz\u00e9ki adminisztr\u00e1ci\u00f3t\u00f3l vagy Kardos Gerg\u0151t\u0151l (Kardos.Gergely@aut.bme.hu) lehet megk\u00e9rdezni, hogy melyik labor mikor szabad gyakorl\u00e1sra. Labor soha nem maradhat el az\u00e9rt, mert a laborvezet\u0151 elk\u00e9sik/nem megy, ha valami k\u00f6zbej\u00f6n \u00e9s el\u0151re l\u00e1that\u00f3, legal\u00e1bb el\u0151tte egy h\u00e9ttel \u00edrj erre a Teams-en \u00e9s k\u00e9rj cser\u00e9t.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#adminisztrativ-tudnivalok","title":"Adminisztrat\u00edv tudnival\u00f3k","text":"<ul> <li>A szem\u00e9lyes laborokat \u00f3ra 15-kor kezdj\u00fck pontosan \u00e9s a 2*45 percet egyben, sz\u00fcnet n\u00e9lk\u00fcl tartjuk. A k\u00e9s\u0151 hallgat\u00f3kat els\u0151 alkalommal figyelmeztess\u00fck. Ha t\u00f6bbsz\u00f6r el\u0151fordul vagy zavar\u00f3an sokat k\u00e9sik (&gt;5 perc), akkor k\u00fcldj\u00e9tek el (TVSZ erre jogot ad!).</li> <li>A laborok elej\u00e9n Moodle teszt form\u00e1j\u00e1ban beugr\u00f3 vagy kisZH \u00edratand\u00f3, aminek a tisztas\u00e1g\u00e1t fel\u00fcgyelni kell. Nem haszn\u00e1lhat\u00f3 seg\u00e9danyag, \u00e9s \u00f6n\u00e1ll\u00f3 munka az elv\u00e1rt.</li> <li>A labor teljes\u00edt\u00e9s\u00e9nek adminisztr\u00e1l\u00e1sa Moodle-ben t\u00f6rt\u00e9nik. Szem\u00e9lyes labor eset\u00e9n a teljes\u00edt\u00e9s a laboron val\u00f3 megjelen\u00e9st, \u00e9s a munka veletek t\u00f6rt\u00e9n\u0151 elv\u00e9gz\u00e9s\u00e9t jelenti, majd a v\u00e9gs\u0151 munka bead\u00e1s\u00e1t. Teh\u00e1t szem\u00e9lyes labor eset\u00e9n a hallgat\u00f3 nem s\u00e9t\u00e1lhat ki a labor k\u00f6zep\u00e9n \u00e9s nem foglalkozhat m\u00e1ssal, csak a laborral. Eseti probl\u00e9m\u00e1kat az\u00e9rt kezelj\u00fcnk le, pl. ZH-ja van m\u00e1shol, stb. Egy-egy kiv\u00e9tel belef\u00e9r. A beugr\u00f3/kisZH egyben jelenl\u00e9t is, viszont ellen\u0151rizni kell, hogy ne legyen olyan hallgat\u00f3, aki t\u00e1volr\u00f3l \u00edrta meg a Moodle tesztet.</li> <li>Ha az \u00f3r\u00e1n t\u00f6bb ember jelenne meg, mint ah\u00e1ny g\u00e9p van (hi\u00e1nyz\u00e1s p\u00f3tl\u00e1sa pl.), vagy egy g\u00e9p nem m\u0171k\u00f6dik, akkor akinek nem jut hely, le\u00fcl valaki mell\u00e9.</li> <li>A csoportok k\u00f6z\u00f6tt nincs ad-hoc \u00e1tj\u00e1r\u00e1s. Ha valaki jelzi, hogy nem tud r\u00e9szt venni egy laboron, akkor el\u0151re/ut\u00f3lag/ugyanazon a h\u00e9ten egy m\u00e1sik csoportban p\u00f3tolhat (ha van r\u00e1 m\u00f3d). Ennek a megszervez\u00e9s\u00e9t alapvet\u0151en a hallgat\u00f3 bonyol\u00edtsa (n\u00e9zze meg, mikor van m\u00e9g labor azonos anyagb\u00f3l, \u00e9s egyeztessen a t\u00e1rgyfelel\u0151ssel, vagy a laborvezet\u0151kkel), de seg\u00edts\u00fck, ha kell.</li> </ul>"},{"location":"tudnivalok/mobillaborvezetoknek/#bejutas-a-terembe","title":"Bejut\u00e1s a terembe","text":"<ul> <li>Q \u00e9p\u00fclet (QB237, QB115): K\u00e1rty\u00e1val lehet bejutni, a tansz\u00e9ki adminisztr\u00e1ci\u00f3n (QB207) tudnak seg\u00edteni.</li> <li>I \u00e9p\u00fclet (IL206, IL207, IL208): Kulcsot kell felvenni a tansz\u00e9ki adminisztr\u00e1ci\u00f3n (QB207), illetve a folyos\u00f3hoz k\u00e1rtya sz\u00fcks\u00e9ges.   </li> </ul> <p>Labor ut\u00e1n kulcsot vigy\u00fck vissza az adminba.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#gepek-elinditasa","title":"G\u00e9pek elind\u00edt\u00e1sa:","text":"<ul> <li>A falon van egy kulcsos kapcsol\u00f3, azt a lefele mutat\u00f3 ny\u00edl \u00e1ll\u00e1sba kell \u00e1ll\u00edtani. Ha van alatta kapcsol\u00f3 KI/BE felirattal, sz\u00fcks\u00e9ges lehet a BE gomb megnyom\u00e1sa.</li> <li>\u00cdrjuk fel a t\u00e1bl\u00e1ra a bel\u00e9p\u00e9si adatokat. (E-mailben k\u00fcldj\u00fck ki nektek.)</li> </ul>"},{"location":"tudnivalok/mobillaborvezetoknek/#labor-menete","title":"Labor menete","text":""},{"location":"tudnivalok/mobillaborvezetoknek/#beugrokiszh","title":"Beugr\u00f3/kisZH","text":"<p>A labor mindig vagy beugr\u00f3val, vagy kisZH-val kezd\u0151dik. A kisZH kiv\u00e1ltja a beugr\u00f3t. Mindkett\u0151t a Moodle fel\u00fclet\u00e9n \u00edrj\u00e1k meg. Beugr\u00f3n a maximum 2 pontb\u00f3l 1 sz\u00fcks\u00e9ges a sikeress\u00e9ghez. 5 perc van r\u00e1, ez be van \u00e1ll\u00edtva a Moodle-ben. Ha mindenki v\u00e9gzett, hamarabb is el lehet kezdeni a labort. KisZH-n a maximum 10 pontb\u00f3l 4 sz\u00fcks\u00e9ges a sikeress\u00e9ghez. 10 perc van r\u00e1, ez be van \u00e1ll\u00edtva a Moodle-ben. Ha mindenki v\u00e9gzett, hamarabb is el lehet kezdeni a labort. A Beugr\u00f3 vagy KisZH ut\u00e1n tartsunk egy n\u00e9vsorolvas\u00e1st, hogy elker\u00fclj\u00fck az esetleges t\u00e1volr\u00f3l kit\u00f6lt\u0151ket/csal\u00f3kat. Az els\u0151 h\u00e9ten nincs beugr\u00f3.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#github-classroom","title":"Github Classroom","text":"<p>A 2022 \u0151szi f\u00e9l\u00e9vt\u0151l a laboranyagok a Github Classromon \u00e9rhet\u0151ek el. Az ezzel kapcsolatos inform\u00e1ci\u00f3k itt olvashat\u00f3k. Ha hib\u00e1t, elg\u00e9pel\u00e9st tal\u00e1lsz benne, arra k\u00e9r\u00fcnk, hogy jav\u00edtsd: minden anyag jobb fels\u0151 sark\u00e1ban van egy kis ceruza ikon, jav\u00edtsd a hib\u00e1t, \u00e9s k\u00fcldj PR-t.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#labormunka","title":"Labormunka","text":"<p>A labor \u00e1ltal\u00e1ban vezetett \u00e9s \u00f6n\u00e1ll\u00f3 r\u00e9szb\u0151l \u00e1ll. Az elej\u00e9n \u00e9rdemes p\u00e1r percben elmondani mi lesz a labor t\u00e9m\u00e1ja, megmutatni mi fog a v\u00e9g\u00e9re elk\u00e9sz\u00fclni. A vezetett r\u00e9szt \u00fclj\u00e9k v\u00e9gig a hallgat\u00f3k, ut\u00e1na ha nagyon akar valaki, bemutathatja \u00e9s elmehet. Laborokr\u00f3l sokszor kapunk olyan visszajelz\u00e9st, hogy sok a copy-paste, k\u00e9rj\u00fck mindig copy-paste ut\u00e1n magyar\u00e1zz\u00e1tok el a k\u00f3dot, illetve \u00e9rdemes sz\u00f3ban mondani ennek ok\u00e1t, hogy mi j\u00f3t akarunk hogy a v\u00e9g\u00e9n egy komplexebb app \u00e1lljon el\u0151. Ha mindent csak beg\u00e9peln\u00e9nk akkor alig jutna id\u0151 b\u00e1rmit is kipr\u00f3b\u00e1lni. Persze ha ez \u00fcgyben van b\u00e1rmi \u00f6tlet akkor \u00edrjatok nek\u00fcnk nyugodtan. Az els\u0151 laboron markdown-t, a t\u00f6bbi laboron n\u00e9h\u00e1ny screenshotot \u00e9s a forr\u00e1sk\u00f3dot kell felpusholni a repository-ba. </p>"},{"location":"tudnivalok/mobillaborvezetoknek/#labor-bezarasa","title":"Labor bez\u00e1r\u00e1sa:","text":"<ul> <li>Minden ablakot csukjunk be \u00e9s sz\u00e9kek se legyenek \u00f6ssze-vissza, k\u00e9rj\u00fck meg a hallgat\u00f3kat a \u201erendrak\u00e1sra\u201d. T\u00f6r\u00f6lj\u00fck le a t\u00e1bl\u00e1t.</li> <li>V\u00e1rjuk meg, am\u00edg kikapcsol\u00e1s ut\u00e1n le\u00e1ll a projektor ventil\u00e1ltora, majd ha van k\u00fcl\u00f6n gomb a projektor \u00e1ramforr\u00e1s\u00e1nak lekapcsol\u00e1s\u00e1ra, azt kapcsoljuk le.</li> <li>Miut\u00e1n meggy\u0151z\u0151dt\u00fcnk r\u00f3la, hogy minden g\u00e9p le\u00e1llt, nyomjuk meg a KI kapcsol\u00f3t(ha van a teremben), majd a fali kulcsos kapcsol\u00f3t \u00e1ll\u00edtsuk k\u00f6z\u00e9ps\u0151 \u00e1ll\u00e1sba.</li> </ul>"},{"location":"tudnivalok/mobillaborvezetoknek/#laborok-ertekelese","title":"Laborok \u00e9rt\u00e9kel\u00e9se","text":"<p>A laborok megold\u00e1s\u00e1t adott hat\u00e1rid\u0151ig kell beadni GitHub-on. Ennek pontos menete a hallgat\u00f3 szemsz\u00f6g\u00e9b\u0151l itt elolvashat\u00f3.</p> <p>Ahhoz, hogy hozz\u00e1f\u00e9rj a GitHub-on a beadott megold\u00e1sokhoz (\u00e9s ahhoz, hogy a hallgat\u00f3k ezt hozz\u00e1d tudj\u00e1k rendelni), kell egy GitHub account. A GitHub nevedet \u00edrd meg a t\u00e1rgyfelel\u0151snek, \u00e9s felvesz GitHub-on a https://www.github.com/VIAUAD02 organization-be.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#mikor-kell-ertekelni-a-labort","title":"Mikor kell \u00e9rt\u00e9kelni a labort?","text":"<p>A laborokat a hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n kell \u00e9rt\u00e9kelni. A hat\u00e1rid\u0151 el\u0151tt a megold\u00e1sokra nem kell r\u00e1n\u00e9zni, kiv\u00e9ve, ha ezt a hallgat\u00f3 k\u00e9ri. K\u00e9rd\u00e9ssel a hallgat\u00f3 direktben kell megkeressen (pl. emailben vagy GitHub-on).</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#hol-kell-ertekelni-a-labort","title":"Hol kell \u00e9rt\u00e9kelni a labort?","text":"<p>A hat\u00e1rid\u0151 lej\u00e1rta ut\u00e1n a feladatod a hozz\u00e1d rendelt pull request-ek \u00e9rt\u00e9kel\u00e9se. A hallgat\u00f3 azzal adja be a labort, hogy a pull request-et a laborvezet\u0151j\u00e9hez rendeli. Ezeket a GitHub keres\u0151j\u00e9vel a legegyszer\u0171bb megtal\u00e1lni: https://github.com/pulls?q=is%3Aopen+is%3Apr+org%3AVIAUAD02+assignee%3A%40me+.</p> <p>Alternat\u00edvak\u00e9nt a GitHub \u00e9rtes\u00edt\u0151 fel\u00fclet\u00e9t is lehet haszn\u00e1lni a https://github.com/notifications c\u00edmen, itt minden hozz\u00e1d rendelt, vagy review-ra v\u00e1r\u00f3 PR megjelenik.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#hogyan-kell-ertekelni-a-labort","title":"Hogyan kell \u00e9rt\u00e9kelni a labort?","text":"<p>A PR-eket egyes\u00e9vel kell megnyitni, \u00e9s meg kell n\u00e9zni a PR komment fel\u00fclet\u00e9n az eredm\u00e9nyt. Itt l\u00e1that\u00f3 lesz a lefuttatott \u00e9rt\u00e9kel\u00e9s eredm\u00e9nye, valamint a k\u00e9perny\u0151k\u00e9pek. Emellett meg kell n\u00e9zni a forr\u00e1sk\u00f3dot is.</p> <p></p> <p>Automatikus \u00e9rt\u00e9kel\u00e9s eset\u00e9n (ami nem minden laborn\u00e1l van) a forr\u00e1sk\u00f3dot nem sz\u00fcks\u00e9ges bet\u0171r\u0151l bet\u0171re megn\u00e9zni - a r\u00e9szletes ellen\u0151rz\u00e9st elv\u00e9gzi az automata. A laborvezet\u0151 feladata a k\u00e9perny\u0151k\u00e9pek ellen\u0151rz\u00e9se, valamint annak eld\u00f6nt\u00e9se, hogy a forr\u00e1sk\u00f3d konzisztens-e a kapott eredm\u00e9nnyel, \u00e9s nincs-e benne olyan k\u00f3dr\u00e9szlet, amely ugyan m\u0171k\u00f6dik, de kifejezetten rosszul oldja meg a probl\u00e9m\u00e1t. Amely laborn\u00e1l nincs automata \u00e9rt\u00e9kel\u00e9s, ott t\u00f6bb munka h\u00e1rul a laborvezet\u0151re, alaposabban meg kell n\u00e9zni a megold\u00e1st.</p> <p>Az \u00e9rt\u00e9kel\u00e9s v\u00e9gezt\u00e9vel:</p> <ul> <li>Ha az automata \u00e9rt\u00e9kel\u00e9s hely\u00e9nval\u00f3 volt, akkor le kell z\u00e1rni a PR-t a <code>/ahk ok</code> parancs be\u00edr\u00e1s\u00e1val egy kommentbe. Ennek hat\u00e1s\u00e1ra a PR j\u00f3v\u00e1hagy\u00e1sra ker\u00fcl \u00e9s merge-elve lesz.</li> <li>Ha az automata \u00e9rt\u00e9kel\u00e9st fel\u00fclb\u00edr\u00e1lod pontsz\u00e1mban, akkor a <code>/ahk ok 5 2</code> parancsot kell kiadni, ahol is az els\u0151 sz\u00e1m az \u00f6sszes nem iMSc feladatra kapott pontsz\u00e1m \u00f6sszege, a m\u00e1sodik sz\u00e1m pedig az iMsc feladatra kapott pontsz\u00e1m. Az ut\u00f3bbi sz\u00e1m elhagyhat\u00f3, ha nincs megoldva az iMsc feladat.</li> <li>Ha nincs automata \u00e9rt\u00e9kel\u00e9s, akkor az el\u0151bbi szintaktika szerint ki kell adni a <code>/ahk ok 5 2</code> parancsot a megfelel\u0151 pontsz\u00e1mokkal.</li> <li>Ha a beadott megold\u00e1s nem fogadhat\u00f3 el (hat\u00e1rid\u0151n t\u00fal \u00e9rkezett, a k\u00e9pek nem t\u00e1masztj\u00e1k al\u00e1 a megold\u00e1st, a forr\u00e1sk\u00f3d elfogadhatatlan, stb.), akkor ki kell adni a <code>/ahk ok 0 0</code> parancsot. Ezzel fogjuk r\u00f6gz\u00edteni, hogy az automata \u00e9rt\u00e9kel\u0151 \u00e1ltal adott pontsz\u00e1mokat fel\u00fcl\u00edrjuk.</li> </ul> <p>A fenti parancs egy kommentben tetsz\u0151leges helyen szerepelhet, amennyiben egy sorban csak ez a parancs szerepel. \u00cdrhatunk teh\u00e1t a hallgat\u00f3nak megjegyz\u00e9st, majd utols\u00f3 sorba \u00edrjuk ezt a parancsot. \u00c9rdemes a hallgat\u00f3nak legal\u00e1bb egy mondatot \u00edrni, hogy l\u00e1ssa, elfogadtuk a megold\u00e1st. Ha m\u00e9g sincs megjegyz\u00e9s\u00fcnk a hallgat\u00f3 fel\u00e9, akkor csak egysoros komment kell ezzel a paranccsal.</p> <p></p> <p>A parancs t\u00f6bbsz\u00f6r is kiadhat\u00f3, teh\u00e1t elrontott pontsz\u00e1mot lehet jav\u00edtani az \u00fajb\u00f3li kiad\u00e1ssal.</p> <p>A parancs hat\u00e1s\u00e1t l\u00e1tjuk is ut\u00e1na PR-ben:</p> <ul> <li>a kommentre a parancs felismer\u00e9s\u00e9nek meger\u0151s\u00edt\u00e9s\u00e9re \u00e9rkezik egy reakci\u00f3,</li> <li>a PR v\u00e1ltoztat\u00e1sai j\u00f3v\u00e1hagy\u00e1sra ker\u00fclnek (ez sz\u00fcks\u00e9ges a mergel\u00e9shez a protected branch miatt),</li> <li>a a PR mergel\u00e9sre ker\u00fcl - ezzel lez\u00e1rt \u00e1llapotba ker\u00fcl a PR \u00e9s \u00edgy elt\u0171nik a teend\u0151k list\u00e1j\u00e1r\u00f3l,</li> <li>\u00e9s v\u00e9g\u00fcl elment\u00e9sre ker\u00fcl az eredm\u00e9ny a h\u00e1tt\u00e9rben - ezt m\u00e1r k\u00f6zvetlen\u00fcl nem l\u00e1tjuk.</li> </ul> <p></p>"},{"location":"tudnivalok/mobillaborvezetoknek/#pontlevonasok-es-szankciok","title":"Pontlevon\u00e1sok \u00e9s szankci\u00f3k","text":"Issue Pontoz\u00e1s Hat\u00e1rid\u0151 ut\u00e1n leadva 0 pont az eg\u00e9szre Hat\u00e1rid\u0151 el\u0151tt elk\u00e9sz\u00fclt (commitokb\u00f3l l\u00e1tszik), de elfelejtette assignolni 1 pont levon\u00e1s Hat\u00e1rid\u0151 el\u0151tt elk\u00e9sz\u00fclt (commitokb\u00f3l l\u00e1tszik), de elfelejtette pusholni/PR-t nyitni 1 pont levon\u00e1s Megengedett 5 ki\u00e9rt\u00e9kel\u00e9s t\u00fall\u00e9p\u00e9se 1 pont levon\u00e1s Bukott beugr\u00f3 0 pont az eg\u00e9szre K\u00edv\u00fclr\u0151l \u00edrt beugr\u00f3 0 pont az eg\u00e9szre, Kriszti\u00e1nnak \u00edrni fegyelmi elj\u00e1r\u00e1s \u00fcgy\u00e9ben"},{"location":"tudnivalok/mobillaborvezetoknek/#problemak-es-megoldasuk","title":"Probl\u00e9m\u00e1k \u00e9s megold\u00e1suk","text":"<p>Nem futott le az automata \u00e9rt\u00e9kel\u00e9s.</p> <ul> <li>Lehet, hogy a hallgat\u00f3 draft m\u00f3dban hagyta a PR-t, ezt vissza kell \u00e1ll\u00edtani. A PR alj\u00e1n megjelenik ilyenkor egy Ready for review gomb.</li> <li>Ha sikertelen volt a ki\u00e9rt\u00e9kel\u00e9s, meg lehet ism\u00e9telni. Ez seg\u00edt a tranziens hib\u00e1kon (ritka eset). Ehhez tegy\u00e9l egy eval nev\u0171 labelt-t a PR-re (\u00faj label-k\u00e9nt kell l\u00e9trehozni).</li> </ul> <p>Hiba van a ki\u00e9rt\u00e9kel\u0151 alkalmaz\u00e1sban. El\u0151fordulhat. Keresd a t\u00e1rgyfelel\u0151st, vagy jav\u00edtsd a hib\u00e1t (a ki\u00e9rt\u00e9kel\u0151 programok itt vannak: TBD).</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#nagyhf","title":"NagyHF","text":"<p>A f\u00e9l\u00e9v sor\u00e1n k\u00e9t feladatuk van a hallgat\u00f3knak a nagyh\u00e1zival kapcsolatban: a specifik\u00e1ci\u00f3 \u00e9s a k\u00e9sz projekt bead\u00e1sa.</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#specifikacio-ertekelesi-szempontok","title":"Specifik\u00e1ci\u00f3 \u00e9rt\u00e9kel\u00e9si szempontok","text":"<p>A specifik\u00e1ci\u00f3 GO/NOGO \u00e9rt\u00e9kel\u00e9s\u0171, sz\u00f6veges megjegyz\u00e9sben jelezhetj\u00fck, ha t\u00fal nagyot v\u00e1llalt a hallgat\u00f3, vagy tal\u00e1ltunk benne valami kifog\u00e1solnival\u00f3t, vagy nagyon sz\u00e9p doksit adott le, stb..</p>"},{"location":"tudnivalok/mobillaborvezetoknek/#nagyhf-ertekelesi-szempontok","title":"NagyHF \u00e9rt\u00e9kel\u00e9si szempontok","text":"<p>Maximum 15 pont szerezhet\u0151. - specifik\u00e1ci\u00f3 szerinti, logikusan elv\u00e1rt m\u0171k\u00f6d\u00e9s, (3 pont) - mennyire t\u00f6rt\u00e9nt t\u00f6rekv\u00e9s a j\u00f3 funkcionalit\u00e1s megval\u00f3s\u00edt\u00e1s\u00e1ra \u00e9s nem csak a funkci\u00f3 l\u00e1tszat kivitelez\u00e9se volt-e a c\u00e9l, (2 pont) - ig\u00e9nyesen kivitelezett felhaszn\u00e1l\u00f3i fel\u00fclet (st\u00edlusok, t\u00e9m\u00e1k), (2 pont) - megfelel\u0151 hibakezel\u00e9s, (2 pont) - hat\u00e9kony m\u0171k\u00f6d\u00e9s (nincsenek felesleges ciklusok, sz\u00e1m\u00edt\u00e1sok, \u00fajrarajzol\u00e1sok), (2 pont) - hibamentes fut\u00e1s, (2 pont) - er\u0151forr\u00e1sok haszn\u00e1lata, sz\u00f6vegek er\u0151forr\u00e1sba szervez\u00e9se. (2 pont)  </p> <p>A NagyHF-t nem kell dokument\u00e1lni, csak a projektet kell a port\u00e1lra felt\u00f6lteni.</p> <p>NagyHF-n 10 IMSC pont szerezhet\u0151: - extra funkci\u00f3k, (4 pont) - ig\u00e9nyes, l\u00e1tv\u00e1nyos fel\u00fclet  (3 pont) - k\u00f3dmin\u0151s\u00e9g (tiszta k\u00f3d k\u00f6vet\u00e9se, r\u00f6vid oszt\u00e1lyok, f\u00fcggv\u00e9nyek, stb.). (3 pont) - R\u00f6vid dokument\u00e1ci\u00f3 felt\u00f6lt\u00e9se a ZIP-ben az IMSC-s r\u00e9szhez tartoz\u00f3 megold\u00e1sr\u00f3l \u00e9s indokl\u00e1sa/bemutat\u00e1sa a fent felsorolt extra elemeknek (k\u00f6telez\u0151).  </p>"},{"location":"tudnivalok/mobillaborvezetoknek/#nagyhf-pontozasi-modszer","title":"NagyHF pontoz\u00e1si m\u00f3dszer","text":"<p>A hallgat\u00f3k a h\u00e1zi feladatot a laborokhoz hasonl\u00f3an GitHub Classroom-on kereszt\u00fcl adj\u00e1k be, azonban itt egy PR helyett, az egyes f\u00e1zisokn\u00e1l k\u00fcl\u00f6n-k\u00fcl\u00f6n PR-t nyitnak. Az AHK bot azonban rep\u00f3hoz van k\u00f6tve, nem PR-hez, ez\u00e9rt a 2-3 k\u00f6l\u00fcn PR \u00e9rt\u00e9kel\u00e9se fel\u00fcl \u00edrja egym\u00e1st. Ez alapvet\u0151en nem probl\u00e9ma, ha konzekvensen haszn\u00e1ljuk:</p> <p>A h\u00e1zi pontoz\u00e1s\u00e1n\u00e1l ugyan\u00fagy a <code>/ahk ok</code> parancsot kell kiadni, de ez\u00fattal t\u00f6bb param\u00e9terrel: <code>/ahk ok &lt;spec GO/NOGO - 0/1&gt; &lt;hf sima pontsz\u00e1m - 0-15&gt; &lt;hf sima imsc pontsz\u00e1m - 0-10&gt; &lt;p\u00f3thf pontsz\u00e1m - 0-15&gt; &lt;p\u00f3thf imsc pontsz\u00e1m - 0-10&gt;</code> Teh\u00e1t a k\u00fcl\u00f6nb\u00f6z\u0151 f\u00e1zisokban:</p> <ul> <li>specifik\u00e1ci\u00f3 (spec branch): <ul> <li><code>/ahk ok 0</code> ha nem fogadod el</li> <li><code>/ahk ok 1</code> ha elfogadod.</li> </ul> </li> <li>norm\u00e1l h\u00e1zi (hf branch): <ul> <li><code>/ahk ok 0 0 0</code> ha m\u00e1r a specifik\u00e1ci\u00f3 sem volt rendben.</li> <li><code>/ahk ok 1 13 0</code> ha a specifik\u00e1ci\u00f3t rendesen leadta, 13 pont a h\u00e1zija. </li> <li><code>/ahk ok 1 15 10</code> ha a specifik\u00e1ci\u00f3t rendesen leadta, 15 pontos a h\u00e1zija \u00e9s kap m\u00e9g 10 iMSc pontot.</li> </ul> </li> <li>p\u00f3t h\u00e1zi (pothf branch): <ul> <li><code>/ahk ok 0 0 0 0 0</code> ha m\u00e1r a specifik\u00e1ci\u00f3 sem volt rendben.</li> <li><code>/ahk ok 1 0 0 12 0</code> ha a specifik\u00e1ci\u00f3t rendesen leadta, 12 pont a p\u00f3t h\u00e1zija. </li> <li><code>/ahk ok 1 0 0 14 5</code> ha a specifik\u00e1ci\u00f3t rendesen leadta, 14 pontos a h\u00e1zija \u00e9s kap m\u00e9g 5 iMSc pontot.</li> <li><code>/ahk ok 1 8 0 14 4</code> ha a specifik\u00e1ci\u00f3t rendesen leadta, 8 pontot kapott eredetileg a h\u00e1zira iMSc pont n\u00e9lk\u00fcl, de jav\u00edtott a p\u00f3tl\u00e1son 14 pontra, \u00e9s kapott m\u00e9g 4 iMSc pontot. </li> </ul> </li> </ul>"},{"location":"tudnivalok/mobillaborvezetoknek/#android-es-mobweb-kozos-hazi-feladat","title":"Android \u00e9s MobWeb k\u00f6z\u00f6s h\u00e1zi feladat","text":"<p>Ha valaki a MobWebet \u00e9s az Androidalap\u00fa szoftverfejleszt\u00e9st is hallgatn\u00e1 a f\u00e9l\u00e9vben, \u00e9s felmer\u00fclne benne, hogy lehet-e k\u00f6z\u00f6s h\u00e1zit csin\u00e1lni: -Lehet, de ezt mindenk\u00e9ppen egyeztesse mindk\u00e9t laborvezet\u0151j\u00e9vel. - Ugyanazt a h\u00e1zit csak \u00fagy adhatja le mindk\u00e9t t\u00e1rgyon, ha kicsit fel\u00fclteljes\u00edti a nehezebb k\u00f6vetelm\u00e9nyeket (vagyis az Androidalap\u00fa szf-t) - Teh\u00e1t az Androidalap\u00fa szoftverfejleszt\u00e9s k\u00f6vetelm\u00e9nyei szerint nem 5, hanem 6-7 technol\u00f3gi\u00e1t kell haszn\u00e1lnia, ezt a komplexit\u00e1s\u00e1b\u00f3l majd a labvezek eld\u00f6ntik.  </p>"}]}